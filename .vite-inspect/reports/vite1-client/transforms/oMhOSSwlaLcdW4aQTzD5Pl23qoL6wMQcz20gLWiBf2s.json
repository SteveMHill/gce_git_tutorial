{
  "resolvedId": "/Users/stevenhill/gce_git_tutorial/node_modules/mermaid/dist/mermaid.esm.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import {\n  package_default\n} from \"./chunks/mermaid.esm/chunk-5EMSI65K.mjs\";\nimport {\n  selectSvgElement\n} from \"./chunks/mermaid.esm/chunk-YIX7P6T4.mjs\";\nimport {\n  JSON_SCHEMA,\n  load\n} from \"./chunks/mermaid.esm/chunk-W3YOBQ4T.mjs\";\nimport {\n  registerLayoutLoaders\n} from \"./chunks/mermaid.esm/chunk-H62MP5RN.mjs\";\nimport \"./chunks/mermaid.esm/chunk-AGEMWPJR.mjs\";\nimport \"./chunks/mermaid.esm/chunk-ZVRJXRH7.mjs\";\nimport {\n  registerIconPacks\n} from \"./chunks/mermaid.esm/chunk-Q7X626QO.mjs\";\nimport \"./chunks/mermaid.esm/chunk-VKJI5BFR.mjs\";\nimport \"./chunks/mermaid.esm/chunk-SVWLYT5M.mjs\";\nimport {\n  dedent\n} from \"./chunks/mermaid.esm/chunk-STFVS7YW.mjs\";\nimport {\n  cleanAndMerge,\n  decodeEntities,\n  encodeEntities,\n  isDetailedError,\n  removeDirectives,\n  utils_default\n} from \"./chunks/mermaid.esm/chunk-YFKFDTKC.mjs\";\nimport \"./chunks/mermaid.esm/chunk-GKOISANM.mjs\";\nimport {\n  UnknownDiagramError,\n  addDirective,\n  assignWithDepth_default,\n  configureSvgSize,\n  defaultConfig,\n  detectType,\n  detectors,\n  evaluate,\n  frontMatterRegex,\n  getConfig,\n  getDiagram,\n  getDiagramLoader,\n  getSiteConfig,\n  log,\n  purify,\n  registerDiagram,\n  registerLazyLoadedDiagrams,\n  reset,\n  saveConfigFromInitialize,\n  select_default,\n  setConfig,\n  setLogLevel,\n  setSiteConfig,\n  styles_default,\n  themes_default,\n  updateSiteConfig\n} from \"./chunks/mermaid.esm/chunk-3L32CQKD.mjs\";\nimport {\n  isEmpty_default\n} from \"./chunks/mermaid.esm/chunk-GRZAG2UZ.mjs\";\nimport \"./chunks/mermaid.esm/chunk-HD3LK5B5.mjs\";\nimport {\n  __name\n} from \"./chunks/mermaid.esm/chunk-DLQEHMXD.mjs\";\n\n// src/diagrams/c4/c4Detector.ts\nvar id = \"c4\";\nvar detector = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*C4Context|C4Container|C4Component|C4Dynamic|C4Deployment/.test(txt);\n}, \"detector\");\nvar loader = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/c4Diagram-6R2MQUNL.mjs\");\n  return { id, diagram: diagram2 };\n}, \"loader\");\nvar plugin = {\n  id,\n  detector,\n  loader\n};\nvar c4Detector_default = plugin;\n\n// src/diagrams/flowchart/flowDetector.ts\nvar id2 = \"flowchart\";\nvar detector2 = /* @__PURE__ */ __name((txt, config) => {\n  if (config?.flowchart?.defaultRenderer === \"dagre-wrapper\" || config?.flowchart?.defaultRenderer === \"elk\") {\n    return false;\n  }\n  return /^\\s*graph/.test(txt);\n}, \"detector\");\nvar loader2 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/flowDiagram-XARHJDSH.mjs\");\n  return { id: id2, diagram: diagram2 };\n}, \"loader\");\nvar plugin2 = {\n  id: id2,\n  detector: detector2,\n  loader: loader2\n};\nvar flowDetector_default = plugin2;\n\n// src/diagrams/flowchart/flowDetector-v2.ts\nvar id3 = \"flowchart-v2\";\nvar detector3 = /* @__PURE__ */ __name((txt, config) => {\n  if (config?.flowchart?.defaultRenderer === \"dagre-d3\") {\n    return false;\n  }\n  if (config?.flowchart?.defaultRenderer === \"elk\") {\n    config.layout = \"elk\";\n  }\n  if (/^\\s*graph/.test(txt) && config?.flowchart?.defaultRenderer === \"dagre-wrapper\") {\n    return true;\n  }\n  return /^\\s*flowchart/.test(txt);\n}, \"detector\");\nvar loader3 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/flowDiagram-XARHJDSH.mjs\");\n  return { id: id3, diagram: diagram2 };\n}, \"loader\");\nvar plugin3 = {\n  id: id3,\n  detector: detector3,\n  loader: loader3\n};\nvar flowDetector_v2_default = plugin3;\n\n// src/diagrams/er/erDetector.ts\nvar id4 = \"er\";\nvar detector4 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*erDiagram/.test(txt);\n}, \"detector\");\nvar loader4 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/erDiagram-AK44R45H.mjs\");\n  return { id: id4, diagram: diagram2 };\n}, \"loader\");\nvar plugin4 = {\n  id: id4,\n  detector: detector4,\n  loader: loader4\n};\nvar erDetector_default = plugin4;\n\n// src/diagrams/git/gitGraphDetector.ts\nvar id5 = \"gitGraph\";\nvar detector5 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*gitGraph/.test(txt);\n}, \"detector\");\nvar loader5 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/gitGraphDiagram-XHLTLO3W.mjs\");\n  return { id: id5, diagram: diagram2 };\n}, \"loader\");\nvar plugin5 = {\n  id: id5,\n  detector: detector5,\n  loader: loader5\n};\nvar gitGraphDetector_default = plugin5;\n\n// src/diagrams/gantt/ganttDetector.ts\nvar id6 = \"gantt\";\nvar detector6 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*gantt/.test(txt);\n}, \"detector\");\nvar loader6 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/ganttDiagram-H5QQZTZ5.mjs\");\n  return { id: id6, diagram: diagram2 };\n}, \"loader\");\nvar plugin6 = {\n  id: id6,\n  detector: detector6,\n  loader: loader6\n};\nvar ganttDetector_default = plugin6;\n\n// src/diagrams/info/infoDetector.ts\nvar id7 = \"info\";\nvar detector7 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*info/.test(txt);\n}, \"detector\");\nvar loader7 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/infoDiagram-TP2HPDHO.mjs\");\n  return { id: id7, diagram: diagram2 };\n}, \"loader\");\nvar info = {\n  id: id7,\n  detector: detector7,\n  loader: loader7\n};\n\n// src/diagrams/pie/pieDetector.ts\nvar id8 = \"pie\";\nvar detector8 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*pie/.test(txt);\n}, \"detector\");\nvar loader8 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/pieDiagram-FPR3CNQC.mjs\");\n  return { id: id8, diagram: diagram2 };\n}, \"loader\");\nvar pie = {\n  id: id8,\n  detector: detector8,\n  loader: loader8\n};\n\n// src/diagrams/quadrant-chart/quadrantDetector.ts\nvar id9 = \"quadrantChart\";\nvar detector9 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*quadrantChart/.test(txt);\n}, \"detector\");\nvar loader9 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/quadrantDiagram-RLP5YTJ2.mjs\");\n  return { id: id9, diagram: diagram2 };\n}, \"loader\");\nvar plugin7 = {\n  id: id9,\n  detector: detector9,\n  loader: loader9\n};\nvar quadrantDetector_default = plugin7;\n\n// src/diagrams/xychart/xychartDetector.ts\nvar id10 = \"xychart\";\nvar detector10 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*xychart-beta/.test(txt);\n}, \"detector\");\nvar loader10 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/xychartDiagram-674MFTBU.mjs\");\n  return { id: id10, diagram: diagram2 };\n}, \"loader\");\nvar plugin8 = {\n  id: id10,\n  detector: detector10,\n  loader: loader10\n};\nvar xychartDetector_default = plugin8;\n\n// src/diagrams/requirement/requirementDetector.ts\nvar id11 = \"requirement\";\nvar detector11 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*requirement(Diagram)?/.test(txt);\n}, \"detector\");\nvar loader11 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/requirementDiagram-P5NVWGNK.mjs\");\n  return { id: id11, diagram: diagram2 };\n}, \"loader\");\nvar plugin9 = {\n  id: id11,\n  detector: detector11,\n  loader: loader11\n};\nvar requirementDetector_default = plugin9;\n\n// src/diagrams/sequence/sequenceDetector.ts\nvar id12 = \"sequence\";\nvar detector12 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*sequenceDiagram/.test(txt);\n}, \"detector\");\nvar loader12 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/sequenceDiagram-6SLVIXKN.mjs\");\n  return { id: id12, diagram: diagram2 };\n}, \"loader\");\nvar plugin10 = {\n  id: id12,\n  detector: detector12,\n  loader: loader12\n};\nvar sequenceDetector_default = plugin10;\n\n// src/diagrams/class/classDetector.ts\nvar id13 = \"class\";\nvar detector13 = /* @__PURE__ */ __name((txt, config) => {\n  if (config?.class?.defaultRenderer === \"dagre-wrapper\") {\n    return false;\n  }\n  return /^\\s*classDiagram/.test(txt);\n}, \"detector\");\nvar loader13 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/classDiagram-LB37KKQG.mjs\");\n  return { id: id13, diagram: diagram2 };\n}, \"loader\");\nvar plugin11 = {\n  id: id13,\n  detector: detector13,\n  loader: loader13\n};\nvar classDetector_default = plugin11;\n\n// src/diagrams/class/classDetector-V2.ts\nvar id14 = \"classDiagram\";\nvar detector14 = /* @__PURE__ */ __name((txt, config) => {\n  if (/^\\s*classDiagram/.test(txt) && config?.class?.defaultRenderer === \"dagre-wrapper\") {\n    return true;\n  }\n  return /^\\s*classDiagram-v2/.test(txt);\n}, \"detector\");\nvar loader14 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/classDiagram-v2-KFQJBC22.mjs\");\n  return { id: id14, diagram: diagram2 };\n}, \"loader\");\nvar plugin12 = {\n  id: id14,\n  detector: detector14,\n  loader: loader14\n};\nvar classDetector_V2_default = plugin12;\n\n// src/diagrams/state/stateDetector.ts\nvar id15 = \"state\";\nvar detector15 = /* @__PURE__ */ __name((txt, config) => {\n  if (config?.state?.defaultRenderer === \"dagre-wrapper\") {\n    return false;\n  }\n  return /^\\s*stateDiagram/.test(txt);\n}, \"detector\");\nvar loader15 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/stateDiagram-WI5ZVJ5I.mjs\");\n  return { id: id15, diagram: diagram2 };\n}, \"loader\");\nvar plugin13 = {\n  id: id15,\n  detector: detector15,\n  loader: loader15\n};\nvar stateDetector_default = plugin13;\n\n// src/diagrams/state/stateDetector-V2.ts\nvar id16 = \"stateDiagram\";\nvar detector16 = /* @__PURE__ */ __name((txt, config) => {\n  if (/^\\s*stateDiagram-v2/.test(txt)) {\n    return true;\n  }\n  if (/^\\s*stateDiagram/.test(txt) && config?.state?.defaultRenderer === \"dagre-wrapper\") {\n    return true;\n  }\n  return false;\n}, \"detector\");\nvar loader16 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/stateDiagram-v2-KVDSFUFK.mjs\");\n  return { id: id16, diagram: diagram2 };\n}, \"loader\");\nvar plugin14 = {\n  id: id16,\n  detector: detector16,\n  loader: loader16\n};\nvar stateDetector_V2_default = plugin14;\n\n// src/diagrams/user-journey/journeyDetector.ts\nvar id17 = \"journey\";\nvar detector17 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*journey/.test(txt);\n}, \"detector\");\nvar loader17 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/journeyDiagram-VHRN44N3.mjs\");\n  return { id: id17, diagram: diagram2 };\n}, \"loader\");\nvar plugin15 = {\n  id: id17,\n  detector: detector17,\n  loader: loader17\n};\nvar journeyDetector_default = plugin15;\n\n// src/diagrams/error/errorRenderer.ts\nvar draw = /* @__PURE__ */ __name((_text, id27, version) => {\n  log.debug(\"rendering svg for syntax error\\n\");\n  const svg = selectSvgElement(id27);\n  const g = svg.append(\"g\");\n  svg.attr(\"viewBox\", \"0 0 2412 512\");\n  configureSvgSize(svg, 100, 512, true);\n  g.append(\"path\").attr(\"class\", \"error-icon\").attr(\n    \"d\",\n    \"m411.313,123.313c6.25-6.25 6.25-16.375 0-22.625s-16.375-6.25-22.625,0l-32,32-9.375,9.375-20.688-20.688c-12.484-12.5-32.766-12.5-45.25,0l-16,16c-1.261,1.261-2.304,2.648-3.31,4.051-21.739-8.561-45.324-13.426-70.065-13.426-105.867,0-192,86.133-192,192s86.133,192 192,192 192-86.133 192-192c0-24.741-4.864-48.327-13.426-70.065 1.402-1.007 2.79-2.049 4.051-3.31l16-16c12.5-12.492 12.5-32.758 0-45.25l-20.688-20.688 9.375-9.375 32.001-31.999zm-219.313,100.687c-52.938,0-96,43.063-96,96 0,8.836-7.164,16-16,16s-16-7.164-16-16c0-70.578 57.422-128 128-128 8.836,0 16,7.164 16,16s-7.164,16-16,16z\"\n  );\n  g.append(\"path\").attr(\"class\", \"error-icon\").attr(\n    \"d\",\n    \"m459.02,148.98c-6.25-6.25-16.375-6.25-22.625,0s-6.25,16.375 0,22.625l16,16c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688 6.25-6.25 6.25-16.375 0-22.625l-16.001-16z\"\n  );\n  g.append(\"path\").attr(\"class\", \"error-icon\").attr(\n    \"d\",\n    \"m340.395,75.605c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688 6.25-6.25 6.25-16.375 0-22.625l-16-16c-6.25-6.25-16.375-6.25-22.625,0s-6.25,16.375 0,22.625l15.999,16z\"\n  );\n  g.append(\"path\").attr(\"class\", \"error-icon\").attr(\n    \"d\",\n    \"m400,64c8.844,0 16-7.164 16-16v-32c0-8.836-7.156-16-16-16-8.844,0-16,7.164-16,16v32c0,8.836 7.156,16 16,16z\"\n  );\n  g.append(\"path\").attr(\"class\", \"error-icon\").attr(\n    \"d\",\n    \"m496,96.586h-32c-8.844,0-16,7.164-16,16 0,8.836 7.156,16 16,16h32c8.844,0 16-7.164 16-16 0-8.836-7.156-16-16-16z\"\n  );\n  g.append(\"path\").attr(\"class\", \"error-icon\").attr(\n    \"d\",\n    \"m436.98,75.605c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688l32-32c6.25-6.25 6.25-16.375 0-22.625s-16.375-6.25-22.625,0l-32,32c-6.251,6.25-6.251,16.375-0.001,22.625z\"\n  );\n  g.append(\"text\").attr(\"class\", \"error-text\").attr(\"x\", 1440).attr(\"y\", 250).attr(\"font-size\", \"150px\").style(\"text-anchor\", \"middle\").text(\"Syntax error in text\");\n  g.append(\"text\").attr(\"class\", \"error-text\").attr(\"x\", 1250).attr(\"y\", 400).attr(\"font-size\", \"100px\").style(\"text-anchor\", \"middle\").text(`mermaid version ${version}`);\n}, \"draw\");\nvar renderer = { draw };\nvar errorRenderer_default = renderer;\n\n// src/diagrams/error/errorDiagram.ts\nvar diagram = {\n  db: {},\n  renderer,\n  parser: {\n    parse: /* @__PURE__ */ __name(() => {\n      return;\n    }, \"parse\")\n  }\n};\nvar errorDiagram_default = diagram;\n\n// src/diagrams/flowchart/elk/detector.ts\nvar id18 = \"flowchart-elk\";\nvar detector18 = /* @__PURE__ */ __name((txt, config = {}) => {\n  if (\n    // If diagram explicitly states flowchart-elk\n    /^\\s*flowchart-elk/.test(txt) || // If a flowchart/graph diagram has their default renderer set to elk\n    /^\\s*flowchart|graph/.test(txt) && config?.flowchart?.defaultRenderer === \"elk\"\n  ) {\n    config.layout = \"elk\";\n    return true;\n  }\n  return false;\n}, \"detector\");\nvar loader18 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/flowDiagram-XARHJDSH.mjs\");\n  return { id: id18, diagram: diagram2 };\n}, \"loader\");\nvar plugin16 = {\n  id: id18,\n  detector: detector18,\n  loader: loader18\n};\nvar detector_default = plugin16;\n\n// src/diagrams/timeline/detector.ts\nvar id19 = \"timeline\";\nvar detector19 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*timeline/.test(txt);\n}, \"detector\");\nvar loader19 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/timeline-definition-65575674.mjs\");\n  return { id: id19, diagram: diagram2 };\n}, \"loader\");\nvar plugin17 = {\n  id: id19,\n  detector: detector19,\n  loader: loader19\n};\nvar detector_default2 = plugin17;\n\n// src/diagrams/mindmap/detector.ts\nvar id20 = \"mindmap\";\nvar detector20 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*mindmap/.test(txt);\n}, \"detector\");\nvar loader20 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/mindmap-definition-TI5ONXTW.mjs\");\n  return { id: id20, diagram: diagram2 };\n}, \"loader\");\nvar plugin18 = {\n  id: id20,\n  detector: detector20,\n  loader: loader20\n};\nvar detector_default3 = plugin18;\n\n// src/diagrams/kanban/detector.ts\nvar id21 = \"kanban\";\nvar detector21 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*kanban/.test(txt);\n}, \"detector\");\nvar loader21 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/kanban-definition-K5J3OUUV.mjs\");\n  return { id: id21, diagram: diagram2 };\n}, \"loader\");\nvar plugin19 = {\n  id: id21,\n  detector: detector21,\n  loader: loader21\n};\nvar detector_default4 = plugin19;\n\n// src/diagrams/sankey/sankeyDetector.ts\nvar id22 = \"sankey\";\nvar detector22 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*sankey-beta/.test(txt);\n}, \"detector\");\nvar loader22 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/sankeyDiagram-C6NZRJHT.mjs\");\n  return { id: id22, diagram: diagram2 };\n}, \"loader\");\nvar plugin20 = {\n  id: id22,\n  detector: detector22,\n  loader: loader22\n};\nvar sankeyDetector_default = plugin20;\n\n// src/diagrams/packet/detector.ts\nvar id23 = \"packet\";\nvar detector23 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*packet-beta/.test(txt);\n}, \"detector\");\nvar loader23 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/diagram-BIPOGRU5.mjs\");\n  return { id: id23, diagram: diagram2 };\n}, \"loader\");\nvar packet = {\n  id: id23,\n  detector: detector23,\n  loader: loader23\n};\n\n// src/diagrams/radar/detector.ts\nvar id24 = \"radar\";\nvar detector24 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*radar-beta/.test(txt);\n}, \"detector\");\nvar loader24 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/diagram-YF4VECWA.mjs\");\n  return { id: id24, diagram: diagram2 };\n}, \"loader\");\nvar radar = {\n  id: id24,\n  detector: detector24,\n  loader: loader24\n};\n\n// src/diagrams/block/blockDetector.ts\nvar id25 = \"block\";\nvar detector25 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*block-beta/.test(txt);\n}, \"detector\");\nvar loader25 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/blockDiagram-XZSR5OGQ.mjs\");\n  return { id: id25, diagram: diagram2 };\n}, \"loader\");\nvar plugin21 = {\n  id: id25,\n  detector: detector25,\n  loader: loader25\n};\nvar blockDetector_default = plugin21;\n\n// src/diagrams/architecture/architectureDetector.ts\nvar id26 = \"architecture\";\nvar detector26 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*architecture/.test(txt);\n}, \"detector\");\nvar loader26 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/architectureDiagram-RWNHDUBN.mjs\");\n  return { id: id26, diagram: diagram2 };\n}, \"loader\");\nvar architecture = {\n  id: id26,\n  detector: detector26,\n  loader: loader26\n};\nvar architectureDetector_default = architecture;\n\n// src/diagram-api/diagram-orchestration.ts\nvar hasLoadedDiagrams = false;\nvar addDiagrams = /* @__PURE__ */ __name(() => {\n  if (hasLoadedDiagrams) {\n    return;\n  }\n  hasLoadedDiagrams = true;\n  registerDiagram(\"error\", errorDiagram_default, (text) => {\n    return text.toLowerCase().trim() === \"error\";\n  });\n  registerDiagram(\n    \"---\",\n    // --- diagram type may appear if YAML front-matter is not parsed correctly\n    {\n      db: {\n        clear: /* @__PURE__ */ __name(() => {\n        }, \"clear\")\n      },\n      styles: {},\n      // should never be used\n      renderer: {\n        draw: /* @__PURE__ */ __name(() => {\n        }, \"draw\")\n      },\n      parser: {\n        parse: /* @__PURE__ */ __name(() => {\n          throw new Error(\n            \"Diagrams beginning with --- are not valid. If you were trying to use a YAML front-matter, please ensure that you've correctly opened and closed the YAML front-matter with un-indented `---` blocks\"\n          );\n        }, \"parse\")\n      },\n      init: /* @__PURE__ */ __name(() => null, \"init\")\n      // no op\n    },\n    (text) => {\n      return text.toLowerCase().trimStart().startsWith(\"---\");\n    }\n  );\n  registerLazyLoadedDiagrams(\n    c4Detector_default,\n    detector_default4,\n    classDetector_V2_default,\n    classDetector_default,\n    erDetector_default,\n    ganttDetector_default,\n    info,\n    pie,\n    requirementDetector_default,\n    sequenceDetector_default,\n    detector_default,\n    flowDetector_v2_default,\n    flowDetector_default,\n    detector_default3,\n    detector_default2,\n    gitGraphDetector_default,\n    stateDetector_V2_default,\n    stateDetector_default,\n    journeyDetector_default,\n    quadrantDetector_default,\n    sankeyDetector_default,\n    packet,\n    xychartDetector_default,\n    blockDetector_default,\n    architectureDetector_default,\n    radar\n  );\n}, \"addDiagrams\");\n\n// src/diagram-api/loadDiagram.ts\nvar loadRegisteredDiagrams = /* @__PURE__ */ __name(async () => {\n  log.debug(`Loading registered diagrams`);\n  const results = await Promise.allSettled(\n    Object.entries(detectors).map(async ([key, { detector: detector27, loader: loader27 }]) => {\n      if (loader27) {\n        try {\n          getDiagram(key);\n        } catch {\n          try {\n            const { diagram: diagram2, id: id27 } = await loader27();\n            registerDiagram(id27, diagram2, detector27);\n          } catch (err) {\n            log.error(`Failed to load external diagram with key ${key}. Removing from detectors.`);\n            delete detectors[key];\n            throw err;\n          }\n        }\n      }\n    })\n  );\n  const failed = results.filter((result) => result.status === \"rejected\");\n  if (failed.length > 0) {\n    log.error(`Failed to load ${failed.length} external diagrams`);\n    for (const res of failed) {\n      log.error(res);\n    }\n    throw new Error(`Failed to load ${failed.length} external diagrams`);\n  }\n}, \"loadRegisteredDiagrams\");\n\n// ../../node_modules/.pnpm/stylis@4.3.6/node_modules/stylis/src/Enum.js\nvar COMMENT = \"comm\";\nvar RULESET = \"rule\";\nvar DECLARATION = \"decl\";\nvar IMPORT = \"@import\";\nvar NAMESPACE = \"@namespace\";\nvar KEYFRAMES = \"@keyframes\";\nvar LAYER = \"@layer\";\n\n// ../../node_modules/.pnpm/stylis@4.3.6/node_modules/stylis/src/Utility.js\nvar abs = Math.abs;\nvar from = String.fromCharCode;\nfunction trim(value) {\n  return value.trim();\n}\n__name(trim, \"trim\");\nfunction replace(value, pattern, replacement) {\n  return value.replace(pattern, replacement);\n}\n__name(replace, \"replace\");\nfunction indexof(value, search, position2) {\n  return value.indexOf(search, position2);\n}\n__name(indexof, \"indexof\");\nfunction charat(value, index) {\n  return value.charCodeAt(index) | 0;\n}\n__name(charat, \"charat\");\nfunction substr(value, begin, end) {\n  return value.slice(begin, end);\n}\n__name(substr, \"substr\");\nfunction strlen(value) {\n  return value.length;\n}\n__name(strlen, \"strlen\");\nfunction sizeof(value) {\n  return value.length;\n}\n__name(sizeof, \"sizeof\");\nfunction append(value, array) {\n  return array.push(value), value;\n}\n__name(append, \"append\");\n\n// ../../node_modules/.pnpm/stylis@4.3.6/node_modules/stylis/src/Tokenizer.js\nvar line = 1;\nvar column = 1;\nvar length = 0;\nvar position = 0;\nvar character = 0;\nvar characters = \"\";\nfunction node(value, root, parent, type, props, children, length2, siblings) {\n  return { value, root, parent, type, props, children, line, column, length: length2, return: \"\", siblings };\n}\n__name(node, \"node\");\nfunction char() {\n  return character;\n}\n__name(char, \"char\");\nfunction prev() {\n  character = position > 0 ? charat(characters, --position) : 0;\n  if (column--, character === 10)\n    column = 1, line--;\n  return character;\n}\n__name(prev, \"prev\");\nfunction next() {\n  character = position < length ? charat(characters, position++) : 0;\n  if (column++, character === 10)\n    column = 1, line++;\n  return character;\n}\n__name(next, \"next\");\nfunction peek() {\n  return charat(characters, position);\n}\n__name(peek, \"peek\");\nfunction caret() {\n  return position;\n}\n__name(caret, \"caret\");\nfunction slice(begin, end) {\n  return substr(characters, begin, end);\n}\n__name(slice, \"slice\");\nfunction token(type) {\n  switch (type) {\n    // \\0 \\t \\n \\r \\s whitespace token\n    case 0:\n    case 9:\n    case 10:\n    case 13:\n    case 32:\n      return 5;\n    // ! + , / > @ ~ isolate token\n    case 33:\n    case 43:\n    case 44:\n    case 47:\n    case 62:\n    case 64:\n    case 126:\n    // ; { } breakpoint token\n    case 59:\n    case 123:\n    case 125:\n      return 4;\n    // : accompanied token\n    case 58:\n      return 3;\n    // \" ' ( [ opening delimit token\n    case 34:\n    case 39:\n    case 40:\n    case 91:\n      return 2;\n    // ) ] closing delimit token\n    case 41:\n    case 93:\n      return 1;\n  }\n  return 0;\n}\n__name(token, \"token\");\nfunction alloc(value) {\n  return line = column = 1, length = strlen(characters = value), position = 0, [];\n}\n__name(alloc, \"alloc\");\nfunction dealloc(value) {\n  return characters = \"\", value;\n}\n__name(dealloc, \"dealloc\");\nfunction delimit(type) {\n  return trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));\n}\n__name(delimit, \"delimit\");\nfunction whitespace(type) {\n  while (character = peek())\n    if (character < 33)\n      next();\n    else\n      break;\n  return token(type) > 2 || token(character) > 3 ? \"\" : \" \";\n}\n__name(whitespace, \"whitespace\");\nfunction escaping(index, count) {\n  while (--count && next())\n    if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97)\n      break;\n  return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32));\n}\n__name(escaping, \"escaping\");\nfunction delimiter(type) {\n  while (next())\n    switch (character) {\n      // ] ) \" '\n      case type:\n        return position;\n      // \" '\n      case 34:\n      case 39:\n        if (type !== 34 && type !== 39)\n          delimiter(character);\n        break;\n      // (\n      case 40:\n        if (type === 41)\n          delimiter(type);\n        break;\n      // \\\n      case 92:\n        next();\n        break;\n    }\n  return position;\n}\n__name(delimiter, \"delimiter\");\nfunction commenter(type, index) {\n  while (next())\n    if (type + character === 47 + 10)\n      break;\n    else if (type + character === 42 + 42 && peek() === 47)\n      break;\n  return \"/*\" + slice(index, position - 1) + \"*\" + from(type === 47 ? type : next());\n}\n__name(commenter, \"commenter\");\nfunction identifier(index) {\n  while (!token(peek()))\n    next();\n  return slice(index, position);\n}\n__name(identifier, \"identifier\");\n\n// ../../node_modules/.pnpm/stylis@4.3.6/node_modules/stylis/src/Parser.js\nfunction compile(value) {\n  return dealloc(parse(\"\", null, null, null, [\"\"], value = alloc(value), 0, [0], value));\n}\n__name(compile, \"compile\");\nfunction parse(value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n  var index = 0;\n  var offset = 0;\n  var length2 = pseudo;\n  var atrule = 0;\n  var property = 0;\n  var previous = 0;\n  var variable = 1;\n  var scanning = 1;\n  var ampersand = 1;\n  var character2 = 0;\n  var type = \"\";\n  var props = rules;\n  var children = rulesets;\n  var reference = rule;\n  var characters2 = type;\n  while (scanning)\n    switch (previous = character2, character2 = next()) {\n      // (\n      case 40:\n        if (previous != 108 && charat(characters2, length2 - 1) == 58) {\n          if (indexof(characters2 += replace(delimit(character2), \"&\", \"&\\f\"), \"&\\f\", abs(index ? points[index - 1] : 0)) != -1)\n            ampersand = -1;\n          break;\n        }\n      // \" ' [\n      case 34:\n      case 39:\n      case 91:\n        characters2 += delimit(character2);\n        break;\n      // \\t \\n \\r \\s\n      case 9:\n      case 10:\n      case 13:\n      case 32:\n        characters2 += whitespace(previous);\n        break;\n      // \\\n      case 92:\n        characters2 += escaping(caret() - 1, 7);\n        continue;\n      // /\n      case 47:\n        switch (peek()) {\n          case 42:\n          case 47:\n            append(comment(commenter(next(), caret()), root, parent, declarations), declarations);\n            if ((token(previous || 1) == 5 || token(peek() || 1) == 5) && strlen(characters2) && substr(characters2, -1, void 0) !== \" \") characters2 += \" \";\n            break;\n          default:\n            characters2 += \"/\";\n        }\n        break;\n      // {\n      case 123 * variable:\n        points[index++] = strlen(characters2) * ampersand;\n      // } ; \\0\n      case 125 * variable:\n      case 59:\n      case 0:\n        switch (character2) {\n          // \\0 }\n          case 0:\n          case 125:\n            scanning = 0;\n          // ;\n          case 59 + offset:\n            if (ampersand == -1) characters2 = replace(characters2, /\\f/g, \"\");\n            if (property > 0 && (strlen(characters2) - length2 || variable === 0 && previous === 47))\n              append(property > 32 ? declaration(characters2 + \";\", rule, parent, length2 - 1, declarations) : declaration(replace(characters2, \" \", \"\") + \";\", rule, parent, length2 - 2, declarations), declarations);\n            break;\n          // @ ;\n          case 59:\n            characters2 += \";\";\n          // { rule/at-rule\n          default:\n            append(reference = ruleset(characters2, root, parent, index, offset, rules, points, type, props = [], children = [], length2, rulesets), rulesets);\n            if (character2 === 123)\n              if (offset === 0)\n                parse(characters2, root, reference, reference, props, rulesets, length2, points, children);\n              else {\n                switch (atrule) {\n                  // c(ontainer)\n                  case 99:\n                    if (charat(characters2, 3) === 110) break;\n                  // l(ayer)\n                  case 108:\n                    if (charat(characters2, 2) === 97) break;\n                  default:\n                    offset = 0;\n                  // d(ocument) m(edia) s(upports)\n                  case 100:\n                  case 109:\n                  case 115:\n                }\n                if (offset) parse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length2, children), children), rules, children, length2, points, rule ? props : children);\n                else parse(characters2, reference, reference, reference, [\"\"], children, 0, points, children);\n              }\n        }\n        index = offset = property = 0, variable = ampersand = 1, type = characters2 = \"\", length2 = pseudo;\n        break;\n      // :\n      case 58:\n        length2 = 1 + strlen(characters2), property = previous;\n      default:\n        if (variable < 1) {\n          if (character2 == 123)\n            --variable;\n          else if (character2 == 125 && variable++ == 0 && prev() == 125)\n            continue;\n        }\n        switch (characters2 += from(character2), character2 * variable) {\n          // &\n          case 38:\n            ampersand = offset > 0 ? 1 : (characters2 += \"\\f\", -1);\n            break;\n          // ,\n          case 44:\n            points[index++] = (strlen(characters2) - 1) * ampersand, ampersand = 1;\n            break;\n          // @\n          case 64:\n            if (peek() === 45)\n              characters2 += delimit(next());\n            atrule = peek(), offset = length2 = strlen(type = characters2 += identifier(caret())), character2++;\n            break;\n          // -\n          case 45:\n            if (previous === 45 && strlen(characters2) == 2)\n              variable = 0;\n        }\n    }\n  return rulesets;\n}\n__name(parse, \"parse\");\nfunction ruleset(value, root, parent, index, offset, rules, points, type, props, children, length2, siblings) {\n  var post = offset - 1;\n  var rule = offset === 0 ? rules : [\"\"];\n  var size = sizeof(rule);\n  for (var i = 0, j = 0, k = 0; i < index; ++i)\n    for (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n      if (z = trim(j > 0 ? rule[x] + \" \" + y : replace(y, /&\\f/g, rule[x])))\n        props[k++] = z;\n  return node(value, root, parent, offset === 0 ? RULESET : type, props, children, length2, siblings);\n}\n__name(ruleset, \"ruleset\");\nfunction comment(value, root, parent, siblings) {\n  return node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0, siblings);\n}\n__name(comment, \"comment\");\nfunction declaration(value, root, parent, length2, siblings) {\n  return node(value, root, parent, DECLARATION, substr(value, 0, length2), substr(value, length2 + 1, -1), length2, siblings);\n}\n__name(declaration, \"declaration\");\n\n// ../../node_modules/.pnpm/stylis@4.3.6/node_modules/stylis/src/Serializer.js\nfunction serialize(children, callback) {\n  var output = \"\";\n  for (var i = 0; i < children.length; i++)\n    output += callback(children[i], i, children, callback) || \"\";\n  return output;\n}\n__name(serialize, \"serialize\");\nfunction stringify(element, index, children, callback) {\n  switch (element.type) {\n    case LAYER:\n      if (element.children.length) break;\n    case IMPORT:\n    case NAMESPACE:\n    case DECLARATION:\n      return element.return = element.return || element.value;\n    case COMMENT:\n      return \"\";\n    case KEYFRAMES:\n      return element.return = element.value + \"{\" + serialize(element.children, callback) + \"}\";\n    case RULESET:\n      if (!strlen(element.value = element.props.join(\",\"))) return \"\";\n  }\n  return strlen(children = serialize(element.children, callback)) ? element.return = element.value + \"{\" + children + \"}\" : \"\";\n}\n__name(stringify, \"stringify\");\n\n// src/accessibility.ts\nvar SVG_ROLE = \"graphics-document document\";\nfunction setA11yDiagramInfo(svg, diagramType) {\n  svg.attr(\"role\", SVG_ROLE);\n  if (diagramType !== \"\") {\n    svg.attr(\"aria-roledescription\", diagramType);\n  }\n}\n__name(setA11yDiagramInfo, \"setA11yDiagramInfo\");\nfunction addSVGa11yTitleDescription(svg, a11yTitle, a11yDesc, baseId) {\n  if (svg.insert === void 0) {\n    return;\n  }\n  if (a11yDesc) {\n    const descId = `chart-desc-${baseId}`;\n    svg.attr(\"aria-describedby\", descId);\n    svg.insert(\"desc\", \":first-child\").attr(\"id\", descId).text(a11yDesc);\n  }\n  if (a11yTitle) {\n    const titleId = `chart-title-${baseId}`;\n    svg.attr(\"aria-labelledby\", titleId);\n    svg.insert(\"title\", \":first-child\").attr(\"id\", titleId).text(a11yTitle);\n  }\n}\n__name(addSVGa11yTitleDescription, \"addSVGa11yTitleDescription\");\n\n// src/Diagram.ts\nvar Diagram = class _Diagram {\n  constructor(type, text, db, parser, renderer2) {\n    this.type = type;\n    this.text = text;\n    this.db = db;\n    this.parser = parser;\n    this.renderer = renderer2;\n  }\n  static {\n    __name(this, \"Diagram\");\n  }\n  static async fromText(text, metadata = {}) {\n    const config = getConfig();\n    const type = detectType(text, config);\n    text = encodeEntities(text) + \"\\n\";\n    try {\n      getDiagram(type);\n    } catch {\n      const loader27 = getDiagramLoader(type);\n      if (!loader27) {\n        throw new UnknownDiagramError(`Diagram ${type} not found.`);\n      }\n      const { id: id27, diagram: diagram2 } = await loader27();\n      registerDiagram(id27, diagram2);\n    }\n    const { db, parser, renderer: renderer2, init: init2 } = getDiagram(type);\n    if (parser.parser) {\n      parser.parser.yy = db;\n    }\n    db.clear?.();\n    init2?.(config);\n    if (metadata.title) {\n      db.setDiagramTitle?.(metadata.title);\n    }\n    await parser.parse(text);\n    return new _Diagram(type, text, db, parser, renderer2);\n  }\n  async render(id27, version) {\n    await this.renderer.draw(this.text, id27, version, this);\n  }\n  getParser() {\n    return this.parser;\n  }\n  getType() {\n    return this.type;\n  }\n};\n\n// src/interactionDb.ts\nvar interactionFunctions = [];\nvar attachFunctions = /* @__PURE__ */ __name(() => {\n  interactionFunctions.forEach((f) => {\n    f();\n  });\n  interactionFunctions = [];\n}, \"attachFunctions\");\n\n// src/diagram-api/comments.ts\nvar cleanupComments = /* @__PURE__ */ __name((text) => {\n  return text.replace(/^\\s*%%(?!{)[^\\n]+\\n?/gm, \"\").trimStart();\n}, \"cleanupComments\");\n\n// src/diagram-api/frontmatter.ts\nfunction extractFrontMatter(text) {\n  const matches = text.match(frontMatterRegex);\n  if (!matches) {\n    return {\n      text,\n      metadata: {}\n    };\n  }\n  let parsed = load(matches[1], {\n    // To support config, we need JSON schema.\n    // https://www.yaml.org/spec/1.2/spec.html#id2803231\n    schema: JSON_SCHEMA\n  }) ?? {};\n  parsed = typeof parsed === \"object\" && !Array.isArray(parsed) ? parsed : {};\n  const metadata = {};\n  if (parsed.displayMode) {\n    metadata.displayMode = parsed.displayMode.toString();\n  }\n  if (parsed.title) {\n    metadata.title = parsed.title.toString();\n  }\n  if (parsed.config) {\n    metadata.config = parsed.config;\n  }\n  return {\n    text: text.slice(matches[0].length),\n    metadata\n  };\n}\n__name(extractFrontMatter, \"extractFrontMatter\");\n\n// src/preprocess.ts\nvar cleanupText = /* @__PURE__ */ __name((code) => {\n  return code.replace(/\\r\\n?/g, \"\\n\").replace(\n    /<(\\w+)([^>]*)>/g,\n    (match, tag, attributes) => \"<\" + tag + attributes.replace(/=\"([^\"]*)\"/g, \"='$1'\") + \">\"\n  );\n}, \"cleanupText\");\nvar processFrontmatter = /* @__PURE__ */ __name((code) => {\n  const { text, metadata } = extractFrontMatter(code);\n  const { displayMode, title, config = {} } = metadata;\n  if (displayMode) {\n    if (!config.gantt) {\n      config.gantt = {};\n    }\n    config.gantt.displayMode = displayMode;\n  }\n  return { title, config, text };\n}, \"processFrontmatter\");\nvar processDirectives = /* @__PURE__ */ __name((code) => {\n  const initDirective = utils_default.detectInit(code) ?? {};\n  const wrapDirectives = utils_default.detectDirective(code, \"wrap\");\n  if (Array.isArray(wrapDirectives)) {\n    initDirective.wrap = wrapDirectives.some(({ type }) => type === \"wrap\");\n  } else if (wrapDirectives?.type === \"wrap\") {\n    initDirective.wrap = true;\n  }\n  return {\n    text: removeDirectives(code),\n    directive: initDirective\n  };\n}, \"processDirectives\");\nfunction preprocessDiagram(code) {\n  const cleanedCode = cleanupText(code);\n  const frontMatterResult = processFrontmatter(cleanedCode);\n  const directiveResult = processDirectives(frontMatterResult.text);\n  const config = cleanAndMerge(frontMatterResult.config, directiveResult.directive);\n  code = cleanupComments(directiveResult.text);\n  return {\n    code,\n    title: frontMatterResult.title,\n    config\n  };\n}\n__name(preprocessDiagram, \"preprocessDiagram\");\n\n// src/utils/base64.ts\nfunction toBase64(str) {\n  const utf8Bytes = new TextEncoder().encode(str);\n  const utf8Str = Array.from(utf8Bytes, (byte) => String.fromCodePoint(byte)).join(\"\");\n  return btoa(utf8Str);\n}\n__name(toBase64, \"toBase64\");\n\n// src/mermaidAPI.ts\nvar MAX_TEXTLENGTH = 5e4;\nvar MAX_TEXTLENGTH_EXCEEDED_MSG = \"graph TB;a[Maximum text size in diagram exceeded];style a fill:#faa\";\nvar SECURITY_LVL_SANDBOX = \"sandbox\";\nvar SECURITY_LVL_LOOSE = \"loose\";\nvar XMLNS_SVG_STD = \"http://www.w3.org/2000/svg\";\nvar XMLNS_XLINK_STD = \"http://www.w3.org/1999/xlink\";\nvar XMLNS_XHTML_STD = \"http://www.w3.org/1999/xhtml\";\nvar IFRAME_WIDTH = \"100%\";\nvar IFRAME_HEIGHT = \"100%\";\nvar IFRAME_STYLES = \"border:0;margin:0;\";\nvar IFRAME_BODY_STYLE = \"margin:0\";\nvar IFRAME_SANDBOX_OPTS = \"allow-top-navigation-by-user-activation allow-popups\";\nvar IFRAME_NOT_SUPPORTED_MSG = 'The \"iframe\" tag is not supported by your browser.';\nvar DOMPURIFY_TAGS = [\"foreignobject\"];\nvar DOMPURIFY_ATTR = [\"dominant-baseline\"];\nfunction processAndSetConfigs(text) {\n  const processed = preprocessDiagram(text);\n  reset();\n  addDirective(processed.config ?? {});\n  return processed;\n}\n__name(processAndSetConfigs, \"processAndSetConfigs\");\nasync function parse2(text, parseOptions) {\n  addDiagrams();\n  try {\n    const { code, config } = processAndSetConfigs(text);\n    const diagram2 = await getDiagramFromText(code);\n    return { diagramType: diagram2.type, config };\n  } catch (error) {\n    if (parseOptions?.suppressErrors) {\n      return false;\n    }\n    throw error;\n  }\n}\n__name(parse2, \"parse\");\nvar cssImportantStyles = /* @__PURE__ */ __name((cssClass, element, cssClasses = []) => {\n  return `\n.${cssClass} ${element} { ${cssClasses.join(\" !important; \")} !important; }`;\n}, \"cssImportantStyles\");\nvar createCssStyles = /* @__PURE__ */ __name((config, classDefs = /* @__PURE__ */ new Map()) => {\n  let cssStyles = \"\";\n  if (config.themeCSS !== void 0) {\n    cssStyles += `\n${config.themeCSS}`;\n  }\n  if (config.fontFamily !== void 0) {\n    cssStyles += `\n:root { --mermaid-font-family: ${config.fontFamily}}`;\n  }\n  if (config.altFontFamily !== void 0) {\n    cssStyles += `\n:root { --mermaid-alt-font-family: ${config.altFontFamily}}`;\n  }\n  if (classDefs instanceof Map) {\n    const htmlLabels = config.htmlLabels ?? config.flowchart?.htmlLabels;\n    const cssHtmlElements = [\"> *\", \"span\"];\n    const cssShapeElements = [\"rect\", \"polygon\", \"ellipse\", \"circle\", \"path\"];\n    const cssElements = htmlLabels ? cssHtmlElements : cssShapeElements;\n    classDefs.forEach((styleClassDef) => {\n      if (!isEmpty_default(styleClassDef.styles)) {\n        cssElements.forEach((cssElement) => {\n          cssStyles += cssImportantStyles(styleClassDef.id, cssElement, styleClassDef.styles);\n        });\n      }\n      if (!isEmpty_default(styleClassDef.textStyles)) {\n        cssStyles += cssImportantStyles(\n          styleClassDef.id,\n          \"tspan\",\n          (styleClassDef?.textStyles || []).map((s) => s.replace(\"color\", \"fill\"))\n        );\n      }\n    });\n  }\n  return cssStyles;\n}, \"createCssStyles\");\nvar createUserStyles = /* @__PURE__ */ __name((config, graphType, classDefs, svgId) => {\n  const userCSSstyles = createCssStyles(config, classDefs);\n  const allStyles = styles_default(graphType, userCSSstyles, config.themeVariables);\n  return serialize(compile(`${svgId}{${allStyles}}`), stringify);\n}, \"createUserStyles\");\nvar cleanUpSvgCode = /* @__PURE__ */ __name((svgCode = \"\", inSandboxMode, useArrowMarkerUrls) => {\n  let cleanedUpSvg = svgCode;\n  if (!useArrowMarkerUrls && !inSandboxMode) {\n    cleanedUpSvg = cleanedUpSvg.replace(\n      /marker-end=\"url\\([\\d+./:=?A-Za-z-]*?#/g,\n      'marker-end=\"url(#'\n    );\n  }\n  cleanedUpSvg = decodeEntities(cleanedUpSvg);\n  cleanedUpSvg = cleanedUpSvg.replace(/<br>/g, \"<br/>\");\n  return cleanedUpSvg;\n}, \"cleanUpSvgCode\");\nvar putIntoIFrame = /* @__PURE__ */ __name((svgCode = \"\", svgElement) => {\n  const height = svgElement?.viewBox?.baseVal?.height ? svgElement.viewBox.baseVal.height + \"px\" : IFRAME_HEIGHT;\n  const base64encodedSrc = toBase64(`<body style=\"${IFRAME_BODY_STYLE}\">${svgCode}</body>`);\n  return `<iframe style=\"width:${IFRAME_WIDTH};height:${height};${IFRAME_STYLES}\" src=\"data:text/html;charset=UTF-8;base64,${base64encodedSrc}\" sandbox=\"${IFRAME_SANDBOX_OPTS}\">\n  ${IFRAME_NOT_SUPPORTED_MSG}\n</iframe>`;\n}, \"putIntoIFrame\");\nvar appendDivSvgG = /* @__PURE__ */ __name((parentRoot, id27, enclosingDivId, divStyle, svgXlink) => {\n  const enclosingDiv = parentRoot.append(\"div\");\n  enclosingDiv.attr(\"id\", enclosingDivId);\n  if (divStyle) {\n    enclosingDiv.attr(\"style\", divStyle);\n  }\n  const svgNode = enclosingDiv.append(\"svg\").attr(\"id\", id27).attr(\"width\", \"100%\").attr(\"xmlns\", XMLNS_SVG_STD);\n  if (svgXlink) {\n    svgNode.attr(\"xmlns:xlink\", svgXlink);\n  }\n  svgNode.append(\"g\");\n  return parentRoot;\n}, \"appendDivSvgG\");\nfunction sandboxedIframe(parentNode, iFrameId) {\n  return parentNode.append(\"iframe\").attr(\"id\", iFrameId).attr(\"style\", \"width: 100%; height: 100%;\").attr(\"sandbox\", \"\");\n}\n__name(sandboxedIframe, \"sandboxedIframe\");\nvar removeExistingElements = /* @__PURE__ */ __name((doc, id27, divId, iFrameId) => {\n  doc.getElementById(id27)?.remove();\n  doc.getElementById(divId)?.remove();\n  doc.getElementById(iFrameId)?.remove();\n}, \"removeExistingElements\");\nvar render = /* @__PURE__ */ __name(async function(id27, text, svgContainingElement) {\n  addDiagrams();\n  const processed = processAndSetConfigs(text);\n  text = processed.code;\n  const config = getConfig();\n  log.debug(config);\n  if (text.length > (config?.maxTextSize ?? MAX_TEXTLENGTH)) {\n    text = MAX_TEXTLENGTH_EXCEEDED_MSG;\n  }\n  const idSelector = \"#\" + id27;\n  const iFrameID = \"i\" + id27;\n  const iFrameID_selector = \"#\" + iFrameID;\n  const enclosingDivID = \"d\" + id27;\n  const enclosingDivID_selector = \"#\" + enclosingDivID;\n  const removeTempElements = /* @__PURE__ */ __name(() => {\n    const tmpElementSelector = isSandboxed ? iFrameID_selector : enclosingDivID_selector;\n    const node2 = select_default(tmpElementSelector).node();\n    if (node2 && \"remove\" in node2) {\n      node2.remove();\n    }\n  }, \"removeTempElements\");\n  let root = select_default(\"body\");\n  const isSandboxed = config.securityLevel === SECURITY_LVL_SANDBOX;\n  const isLooseSecurityLevel = config.securityLevel === SECURITY_LVL_LOOSE;\n  const fontFamily = config.fontFamily;\n  if (svgContainingElement !== void 0) {\n    if (svgContainingElement) {\n      svgContainingElement.innerHTML = \"\";\n    }\n    if (isSandboxed) {\n      const iframe = sandboxedIframe(select_default(svgContainingElement), iFrameID);\n      root = select_default(iframe.nodes()[0].contentDocument.body);\n      root.node().style.margin = 0;\n    } else {\n      root = select_default(svgContainingElement);\n    }\n    appendDivSvgG(root, id27, enclosingDivID, `font-family: ${fontFamily}`, XMLNS_XLINK_STD);\n  } else {\n    removeExistingElements(document, id27, enclosingDivID, iFrameID);\n    if (isSandboxed) {\n      const iframe = sandboxedIframe(select_default(\"body\"), iFrameID);\n      root = select_default(iframe.nodes()[0].contentDocument.body);\n      root.node().style.margin = 0;\n    } else {\n      root = select_default(\"body\");\n    }\n    appendDivSvgG(root, id27, enclosingDivID);\n  }\n  let diag;\n  let parseEncounteredException;\n  try {\n    diag = await Diagram.fromText(text, { title: processed.title });\n  } catch (error) {\n    if (config.suppressErrorRendering) {\n      removeTempElements();\n      throw error;\n    }\n    diag = await Diagram.fromText(\"error\");\n    parseEncounteredException = error;\n  }\n  const element = root.select(enclosingDivID_selector).node();\n  const diagramType = diag.type;\n  const svg = element.firstChild;\n  const firstChild = svg.firstChild;\n  const diagramClassDefs = diag.renderer.getClasses?.(text, diag);\n  const rules = createUserStyles(config, diagramType, diagramClassDefs, idSelector);\n  const style1 = document.createElement(\"style\");\n  style1.innerHTML = rules;\n  svg.insertBefore(style1, firstChild);\n  try {\n    await diag.renderer.draw(text, id27, package_default.version, diag);\n  } catch (e) {\n    if (config.suppressErrorRendering) {\n      removeTempElements();\n    } else {\n      errorRenderer_default.draw(text, id27, package_default.version);\n    }\n    throw e;\n  }\n  const svgNode = root.select(`${enclosingDivID_selector} svg`);\n  const a11yTitle = diag.db.getAccTitle?.();\n  const a11yDescr = diag.db.getAccDescription?.();\n  addA11yInfo(diagramType, svgNode, a11yTitle, a11yDescr);\n  root.select(`[id=\"${id27}\"]`).selectAll(\"foreignobject > *\").attr(\"xmlns\", XMLNS_XHTML_STD);\n  let svgCode = root.select(enclosingDivID_selector).node().innerHTML;\n  log.debug(\"config.arrowMarkerAbsolute\", config.arrowMarkerAbsolute);\n  svgCode = cleanUpSvgCode(svgCode, isSandboxed, evaluate(config.arrowMarkerAbsolute));\n  if (isSandboxed) {\n    const svgEl = root.select(enclosingDivID_selector + \" svg\").node();\n    svgCode = putIntoIFrame(svgCode, svgEl);\n  } else if (!isLooseSecurityLevel) {\n    svgCode = purify.sanitize(svgCode, {\n      ADD_TAGS: DOMPURIFY_TAGS,\n      ADD_ATTR: DOMPURIFY_ATTR,\n      HTML_INTEGRATION_POINTS: { foreignobject: true }\n    });\n  }\n  attachFunctions();\n  if (parseEncounteredException) {\n    throw parseEncounteredException;\n  }\n  removeTempElements();\n  return {\n    diagramType,\n    svg: svgCode,\n    bindFunctions: diag.db.bindFunctions\n  };\n}, \"render\");\nfunction initialize(userOptions = {}) {\n  const options = assignWithDepth_default({}, userOptions);\n  if (options?.fontFamily && !options.themeVariables?.fontFamily) {\n    if (!options.themeVariables) {\n      options.themeVariables = {};\n    }\n    options.themeVariables.fontFamily = options.fontFamily;\n  }\n  saveConfigFromInitialize(options);\n  if (options?.theme && options.theme in themes_default) {\n    options.themeVariables = themes_default[options.theme].getThemeVariables(\n      options.themeVariables\n    );\n  } else if (options) {\n    options.themeVariables = themes_default.default.getThemeVariables(options.themeVariables);\n  }\n  const config = typeof options === \"object\" ? setSiteConfig(options) : getSiteConfig();\n  setLogLevel(config.logLevel);\n  addDiagrams();\n}\n__name(initialize, \"initialize\");\nvar getDiagramFromText = /* @__PURE__ */ __name((text, metadata = {}) => {\n  const { code } = preprocessDiagram(text);\n  return Diagram.fromText(code, metadata);\n}, \"getDiagramFromText\");\nfunction addA11yInfo(diagramType, svgNode, a11yTitle, a11yDescr) {\n  setA11yDiagramInfo(svgNode, diagramType);\n  addSVGa11yTitleDescription(svgNode, a11yTitle, a11yDescr, svgNode.attr(\"id\"));\n}\n__name(addA11yInfo, \"addA11yInfo\");\nvar mermaidAPI = Object.freeze({\n  render,\n  parse: parse2,\n  getDiagramFromText,\n  initialize,\n  getConfig,\n  setConfig,\n  getSiteConfig,\n  updateSiteConfig,\n  reset: /* @__PURE__ */ __name(() => {\n    reset();\n  }, \"reset\"),\n  globalReset: /* @__PURE__ */ __name(() => {\n    reset(defaultConfig);\n  }, \"globalReset\"),\n  defaultConfig\n});\nsetLogLevel(getConfig().logLevel);\nreset(getConfig());\n\n// src/mermaid.ts\nvar handleError = /* @__PURE__ */ __name((error, errors, parseError) => {\n  log.warn(error);\n  if (isDetailedError(error)) {\n    if (parseError) {\n      parseError(error.str, error.hash);\n    }\n    errors.push({ ...error, message: error.str, error });\n  } else {\n    if (parseError) {\n      parseError(error);\n    }\n    if (error instanceof Error) {\n      errors.push({\n        str: error.message,\n        message: error.message,\n        hash: error.name,\n        error\n      });\n    }\n  }\n}, \"handleError\");\nvar run = /* @__PURE__ */ __name(async function(options = {\n  querySelector: \".mermaid\"\n}) {\n  try {\n    await runThrowsErrors(options);\n  } catch (e) {\n    if (isDetailedError(e)) {\n      log.error(e.str);\n    }\n    if (mermaid.parseError) {\n      mermaid.parseError(e);\n    }\n    if (!options.suppressErrors) {\n      log.error(\"Use the suppressErrors option to suppress these errors\");\n      throw e;\n    }\n  }\n}, \"run\");\nvar runThrowsErrors = /* @__PURE__ */ __name(async function({ postRenderCallback, querySelector, nodes } = {\n  querySelector: \".mermaid\"\n}) {\n  const conf = mermaidAPI.getConfig();\n  log.debug(`${!postRenderCallback ? \"No \" : \"\"}Callback function found`);\n  let nodesToProcess;\n  if (nodes) {\n    nodesToProcess = nodes;\n  } else if (querySelector) {\n    nodesToProcess = document.querySelectorAll(querySelector);\n  } else {\n    throw new Error(\"Nodes and querySelector are both undefined\");\n  }\n  log.debug(`Found ${nodesToProcess.length} diagrams`);\n  if (conf?.startOnLoad !== void 0) {\n    log.debug(\"Start On Load: \" + conf?.startOnLoad);\n    mermaidAPI.updateSiteConfig({ startOnLoad: conf?.startOnLoad });\n  }\n  const idGenerator = new utils_default.InitIDGenerator(conf.deterministicIds, conf.deterministicIDSeed);\n  let txt;\n  const errors = [];\n  for (const element of Array.from(nodesToProcess)) {\n    log.info(\"Rendering diagram: \" + element.id);\n    if (element.getAttribute(\"data-processed\")) {\n      continue;\n    }\n    element.setAttribute(\"data-processed\", \"true\");\n    const id27 = `mermaid-${idGenerator.next()}`;\n    txt = element.innerHTML;\n    txt = dedent(utils_default.entityDecode(txt)).trim().replace(/<br\\s*\\/?>/gi, \"<br/>\");\n    const init2 = utils_default.detectInit(txt);\n    if (init2) {\n      log.debug(\"Detected early reinit: \", init2);\n    }\n    try {\n      const { svg, bindFunctions } = await render2(id27, txt, element);\n      element.innerHTML = svg;\n      if (postRenderCallback) {\n        await postRenderCallback(id27);\n      }\n      if (bindFunctions) {\n        bindFunctions(element);\n      }\n    } catch (error) {\n      handleError(error, errors, mermaid.parseError);\n    }\n  }\n  if (errors.length > 0) {\n    throw errors[0];\n  }\n}, \"runThrowsErrors\");\nvar initialize2 = /* @__PURE__ */ __name(function(config) {\n  mermaidAPI.initialize(config);\n}, \"initialize\");\nvar init = /* @__PURE__ */ __name(async function(config, nodes, callback) {\n  log.warn(\"mermaid.init is deprecated. Please use run instead.\");\n  if (config) {\n    initialize2(config);\n  }\n  const runOptions = { postRenderCallback: callback, querySelector: \".mermaid\" };\n  if (typeof nodes === \"string\") {\n    runOptions.querySelector = nodes;\n  } else if (nodes) {\n    if (nodes instanceof HTMLElement) {\n      runOptions.nodes = [nodes];\n    } else {\n      runOptions.nodes = nodes;\n    }\n  }\n  await run(runOptions);\n}, \"init\");\nvar registerExternalDiagrams = /* @__PURE__ */ __name(async (diagrams, {\n  lazyLoad = true\n} = {}) => {\n  addDiagrams();\n  registerLazyLoadedDiagrams(...diagrams);\n  if (lazyLoad === false) {\n    await loadRegisteredDiagrams();\n  }\n}, \"registerExternalDiagrams\");\nvar contentLoaded = /* @__PURE__ */ __name(function() {\n  if (mermaid.startOnLoad) {\n    const { startOnLoad } = mermaidAPI.getConfig();\n    if (startOnLoad) {\n      mermaid.run().catch((err) => log.error(\"Mermaid failed to initialize\", err));\n    }\n  }\n}, \"contentLoaded\");\nif (typeof document !== \"undefined\") {\n  window.addEventListener(\"load\", contentLoaded, false);\n}\nvar setParseErrorHandler = /* @__PURE__ */ __name(function(parseErrorHandler) {\n  mermaid.parseError = parseErrorHandler;\n}, \"setParseErrorHandler\");\nvar executionQueue = [];\nvar executionQueueRunning = false;\nvar executeQueue = /* @__PURE__ */ __name(async () => {\n  if (executionQueueRunning) {\n    return;\n  }\n  executionQueueRunning = true;\n  while (executionQueue.length > 0) {\n    const f = executionQueue.shift();\n    if (f) {\n      try {\n        await f();\n      } catch (e) {\n        log.error(\"Error executing queue\", e);\n      }\n    }\n  }\n  executionQueueRunning = false;\n}, \"executeQueue\");\nvar parse3 = /* @__PURE__ */ __name(async (text, parseOptions) => {\n  return new Promise((resolve, reject) => {\n    const performCall = /* @__PURE__ */ __name(() => new Promise((res, rej) => {\n      mermaidAPI.parse(text, parseOptions).then(\n        (r) => {\n          res(r);\n          resolve(r);\n        },\n        (e) => {\n          log.error(\"Error parsing\", e);\n          mermaid.parseError?.(e);\n          rej(e);\n          reject(e);\n        }\n      );\n    }), \"performCall\");\n    executionQueue.push(performCall);\n    executeQueue().catch(reject);\n  });\n}, \"parse\");\nvar render2 = /* @__PURE__ */ __name((id27, text, container) => {\n  return new Promise((resolve, reject) => {\n    const performCall = /* @__PURE__ */ __name(() => new Promise((res, rej) => {\n      mermaidAPI.render(id27, text, container).then(\n        (r) => {\n          res(r);\n          resolve(r);\n        },\n        (e) => {\n          log.error(\"Error parsing\", e);\n          mermaid.parseError?.(e);\n          rej(e);\n          reject(e);\n        }\n      );\n    }), \"performCall\");\n    executionQueue.push(performCall);\n    executeQueue().catch(reject);\n  });\n}, \"render\");\nvar mermaid = {\n  startOnLoad: true,\n  mermaidAPI,\n  parse: parse3,\n  render: render2,\n  init,\n  run,\n  registerExternalDiagrams,\n  registerLayoutLoaders,\n  initialize: initialize2,\n  parseError: void 0,\n  contentLoaded,\n  setParseErrorHandler,\n  detectType,\n  registerIconPacks\n};\nvar mermaid_default = mermaid;\nexport {\n  mermaid_default as default\n};\n/*! Check if previously processed */\n/*!\n * Wait for document loaded before starting the execution\n */\n",
      "start": 1743409709049,
      "end": 1743409709055,
      "sourcemaps": null
    },
    {
      "name": "unplugin-vue-markdown",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "pre"
    },
    {
      "name": "slidev:flags",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "pre"
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "slidev:layout-wrapper",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "slidev:context-injection",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "slidev:hmr-patch",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "normal"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1743409709055,
      "end": 1743409709055,
      "order": "post"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1743409709055,
      "end": 1743409709056,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import {\n  package_default\n} from \"./chunks/mermaid.esm/chunk-5EMSI65K.mjs\";\nimport {\n  selectSvgElement\n} from \"./chunks/mermaid.esm/chunk-YIX7P6T4.mjs\";\nimport {\n  JSON_SCHEMA,\n  load\n} from \"./chunks/mermaid.esm/chunk-W3YOBQ4T.mjs\";\nimport {\n  registerLayoutLoaders\n} from \"./chunks/mermaid.esm/chunk-H62MP5RN.mjs\";\nimport \"./chunks/mermaid.esm/chunk-AGEMWPJR.mjs\";\nimport \"./chunks/mermaid.esm/chunk-ZVRJXRH7.mjs\";\nimport {\n  registerIconPacks\n} from \"./chunks/mermaid.esm/chunk-Q7X626QO.mjs\";\nimport \"./chunks/mermaid.esm/chunk-VKJI5BFR.mjs\";\nimport \"./chunks/mermaid.esm/chunk-SVWLYT5M.mjs\";\nimport {\n  dedent\n} from \"./chunks/mermaid.esm/chunk-STFVS7YW.mjs\";\nimport {\n  cleanAndMerge,\n  decodeEntities,\n  encodeEntities,\n  isDetailedError,\n  removeDirectives,\n  utils_default\n} from \"./chunks/mermaid.esm/chunk-YFKFDTKC.mjs\";\nimport \"./chunks/mermaid.esm/chunk-GKOISANM.mjs\";\nimport {\n  UnknownDiagramError,\n  addDirective,\n  assignWithDepth_default,\n  configureSvgSize,\n  defaultConfig,\n  detectType,\n  detectors,\n  evaluate,\n  frontMatterRegex,\n  getConfig,\n  getDiagram,\n  getDiagramLoader,\n  getSiteConfig,\n  log,\n  purify,\n  registerDiagram,\n  registerLazyLoadedDiagrams,\n  reset,\n  saveConfigFromInitialize,\n  select_default,\n  setConfig,\n  setLogLevel,\n  setSiteConfig,\n  styles_default,\n  themes_default,\n  updateSiteConfig\n} from \"./chunks/mermaid.esm/chunk-3L32CQKD.mjs\";\nimport {\n  isEmpty_default\n} from \"./chunks/mermaid.esm/chunk-GRZAG2UZ.mjs\";\nimport \"./chunks/mermaid.esm/chunk-HD3LK5B5.mjs\";\nimport {\n  __name\n} from \"./chunks/mermaid.esm/chunk-DLQEHMXD.mjs\";\n\n// src/diagrams/c4/c4Detector.ts\nvar id = \"c4\";\nvar detector = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*C4Context|C4Container|C4Component|C4Dynamic|C4Deployment/.test(txt);\n}, \"detector\");\nvar loader = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/c4Diagram-6R2MQUNL.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id, diagram: diagram2 };\n}, \"loader\");\nvar plugin = {\n  id,\n  detector,\n  loader\n};\nvar c4Detector_default = plugin;\n\n// src/diagrams/flowchart/flowDetector.ts\nvar id2 = \"flowchart\";\nvar detector2 = /* @__PURE__ */ __name((txt, config) => {\n  if (config?.flowchart?.defaultRenderer === \"dagre-wrapper\" || config?.flowchart?.defaultRenderer === \"elk\") {\n    return false;\n  }\n  return /^\\s*graph/.test(txt);\n}, \"detector\");\nvar loader2 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/flowDiagram-XARHJDSH.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id2, diagram: diagram2 };\n}, \"loader\");\nvar plugin2 = {\n  id: id2,\n  detector: detector2,\n  loader: loader2\n};\nvar flowDetector_default = plugin2;\n\n// src/diagrams/flowchart/flowDetector-v2.ts\nvar id3 = \"flowchart-v2\";\nvar detector3 = /* @__PURE__ */ __name((txt, config) => {\n  if (config?.flowchart?.defaultRenderer === \"dagre-d3\") {\n    return false;\n  }\n  if (config?.flowchart?.defaultRenderer === \"elk\") {\n    config.layout = \"elk\";\n  }\n  if (/^\\s*graph/.test(txt) && config?.flowchart?.defaultRenderer === \"dagre-wrapper\") {\n    return true;\n  }\n  return /^\\s*flowchart/.test(txt);\n}, \"detector\");\nvar loader3 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/flowDiagram-XARHJDSH.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id3, diagram: diagram2 };\n}, \"loader\");\nvar plugin3 = {\n  id: id3,\n  detector: detector3,\n  loader: loader3\n};\nvar flowDetector_v2_default = plugin3;\n\n// src/diagrams/er/erDetector.ts\nvar id4 = \"er\";\nvar detector4 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*erDiagram/.test(txt);\n}, \"detector\");\nvar loader4 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/erDiagram-AK44R45H.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id4, diagram: diagram2 };\n}, \"loader\");\nvar plugin4 = {\n  id: id4,\n  detector: detector4,\n  loader: loader4\n};\nvar erDetector_default = plugin4;\n\n// src/diagrams/git/gitGraphDetector.ts\nvar id5 = \"gitGraph\";\nvar detector5 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*gitGraph/.test(txt);\n}, \"detector\");\nvar loader5 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/gitGraphDiagram-XHLTLO3W.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id5, diagram: diagram2 };\n}, \"loader\");\nvar plugin5 = {\n  id: id5,\n  detector: detector5,\n  loader: loader5\n};\nvar gitGraphDetector_default = plugin5;\n\n// src/diagrams/gantt/ganttDetector.ts\nvar id6 = \"gantt\";\nvar detector6 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*gantt/.test(txt);\n}, \"detector\");\nvar loader6 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/ganttDiagram-H5QQZTZ5.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id6, diagram: diagram2 };\n}, \"loader\");\nvar plugin6 = {\n  id: id6,\n  detector: detector6,\n  loader: loader6\n};\nvar ganttDetector_default = plugin6;\n\n// src/diagrams/info/infoDetector.ts\nvar id7 = \"info\";\nvar detector7 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*info/.test(txt);\n}, \"detector\");\nvar loader7 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/infoDiagram-TP2HPDHO.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id7, diagram: diagram2 };\n}, \"loader\");\nvar info = {\n  id: id7,\n  detector: detector7,\n  loader: loader7\n};\n\n// src/diagrams/pie/pieDetector.ts\nvar id8 = \"pie\";\nvar detector8 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*pie/.test(txt);\n}, \"detector\");\nvar loader8 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/pieDiagram-FPR3CNQC.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id8, diagram: diagram2 };\n}, \"loader\");\nvar pie = {\n  id: id8,\n  detector: detector8,\n  loader: loader8\n};\n\n// src/diagrams/quadrant-chart/quadrantDetector.ts\nvar id9 = \"quadrantChart\";\nvar detector9 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*quadrantChart/.test(txt);\n}, \"detector\");\nvar loader9 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/quadrantDiagram-RLP5YTJ2.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id9, diagram: diagram2 };\n}, \"loader\");\nvar plugin7 = {\n  id: id9,\n  detector: detector9,\n  loader: loader9\n};\nvar quadrantDetector_default = plugin7;\n\n// src/diagrams/xychart/xychartDetector.ts\nvar id10 = \"xychart\";\nvar detector10 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*xychart-beta/.test(txt);\n}, \"detector\");\nvar loader10 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/xychartDiagram-674MFTBU.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id10, diagram: diagram2 };\n}, \"loader\");\nvar plugin8 = {\n  id: id10,\n  detector: detector10,\n  loader: loader10\n};\nvar xychartDetector_default = plugin8;\n\n// src/diagrams/requirement/requirementDetector.ts\nvar id11 = \"requirement\";\nvar detector11 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*requirement(Diagram)?/.test(txt);\n}, \"detector\");\nvar loader11 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/requirementDiagram-P5NVWGNK.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id11, diagram: diagram2 };\n}, \"loader\");\nvar plugin9 = {\n  id: id11,\n  detector: detector11,\n  loader: loader11\n};\nvar requirementDetector_default = plugin9;\n\n// src/diagrams/sequence/sequenceDetector.ts\nvar id12 = \"sequence\";\nvar detector12 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*sequenceDiagram/.test(txt);\n}, \"detector\");\nvar loader12 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/sequenceDiagram-6SLVIXKN.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id12, diagram: diagram2 };\n}, \"loader\");\nvar plugin10 = {\n  id: id12,\n  detector: detector12,\n  loader: loader12\n};\nvar sequenceDetector_default = plugin10;\n\n// src/diagrams/class/classDetector.ts\nvar id13 = \"class\";\nvar detector13 = /* @__PURE__ */ __name((txt, config) => {\n  if (config?.class?.defaultRenderer === \"dagre-wrapper\") {\n    return false;\n  }\n  return /^\\s*classDiagram/.test(txt);\n}, \"detector\");\nvar loader13 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/classDiagram-LB37KKQG.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id13, diagram: diagram2 };\n}, \"loader\");\nvar plugin11 = {\n  id: id13,\n  detector: detector13,\n  loader: loader13\n};\nvar classDetector_default = plugin11;\n\n// src/diagrams/class/classDetector-V2.ts\nvar id14 = \"classDiagram\";\nvar detector14 = /* @__PURE__ */ __name((txt, config) => {\n  if (/^\\s*classDiagram/.test(txt) && config?.class?.defaultRenderer === \"dagre-wrapper\") {\n    return true;\n  }\n  return /^\\s*classDiagram-v2/.test(txt);\n}, \"detector\");\nvar loader14 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/classDiagram-v2-KFQJBC22.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id14, diagram: diagram2 };\n}, \"loader\");\nvar plugin12 = {\n  id: id14,\n  detector: detector14,\n  loader: loader14\n};\nvar classDetector_V2_default = plugin12;\n\n// src/diagrams/state/stateDetector.ts\nvar id15 = \"state\";\nvar detector15 = /* @__PURE__ */ __name((txt, config) => {\n  if (config?.state?.defaultRenderer === \"dagre-wrapper\") {\n    return false;\n  }\n  return /^\\s*stateDiagram/.test(txt);\n}, \"detector\");\nvar loader15 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/stateDiagram-WI5ZVJ5I.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id15, diagram: diagram2 };\n}, \"loader\");\nvar plugin13 = {\n  id: id15,\n  detector: detector15,\n  loader: loader15\n};\nvar stateDetector_default = plugin13;\n\n// src/diagrams/state/stateDetector-V2.ts\nvar id16 = \"stateDiagram\";\nvar detector16 = /* @__PURE__ */ __name((txt, config) => {\n  if (/^\\s*stateDiagram-v2/.test(txt)) {\n    return true;\n  }\n  if (/^\\s*stateDiagram/.test(txt) && config?.state?.defaultRenderer === \"dagre-wrapper\") {\n    return true;\n  }\n  return false;\n}, \"detector\");\nvar loader16 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/stateDiagram-v2-KVDSFUFK.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id16, diagram: diagram2 };\n}, \"loader\");\nvar plugin14 = {\n  id: id16,\n  detector: detector16,\n  loader: loader16\n};\nvar stateDetector_V2_default = plugin14;\n\n// src/diagrams/user-journey/journeyDetector.ts\nvar id17 = \"journey\";\nvar detector17 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*journey/.test(txt);\n}, \"detector\");\nvar loader17 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/journeyDiagram-VHRN44N3.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id17, diagram: diagram2 };\n}, \"loader\");\nvar plugin15 = {\n  id: id17,\n  detector: detector17,\n  loader: loader17\n};\nvar journeyDetector_default = plugin15;\n\n// src/diagrams/error/errorRenderer.ts\nvar draw = /* @__PURE__ */ __name((_text, id27, version) => {\n  log.debug(\"rendering svg for syntax error\\n\");\n  const svg = selectSvgElement(id27);\n  const g = svg.append(\"g\");\n  svg.attr(\"viewBox\", \"0 0 2412 512\");\n  configureSvgSize(svg, 100, 512, true);\n  g.append(\"path\").attr(\"class\", \"error-icon\").attr(\n    \"d\",\n    \"m411.313,123.313c6.25-6.25 6.25-16.375 0-22.625s-16.375-6.25-22.625,0l-32,32-9.375,9.375-20.688-20.688c-12.484-12.5-32.766-12.5-45.25,0l-16,16c-1.261,1.261-2.304,2.648-3.31,4.051-21.739-8.561-45.324-13.426-70.065-13.426-105.867,0-192,86.133-192,192s86.133,192 192,192 192-86.133 192-192c0-24.741-4.864-48.327-13.426-70.065 1.402-1.007 2.79-2.049 4.051-3.31l16-16c12.5-12.492 12.5-32.758 0-45.25l-20.688-20.688 9.375-9.375 32.001-31.999zm-219.313,100.687c-52.938,0-96,43.063-96,96 0,8.836-7.164,16-16,16s-16-7.164-16-16c0-70.578 57.422-128 128-128 8.836,0 16,7.164 16,16s-7.164,16-16,16z\"\n  );\n  g.append(\"path\").attr(\"class\", \"error-icon\").attr(\n    \"d\",\n    \"m459.02,148.98c-6.25-6.25-16.375-6.25-22.625,0s-6.25,16.375 0,22.625l16,16c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688 6.25-6.25 6.25-16.375 0-22.625l-16.001-16z\"\n  );\n  g.append(\"path\").attr(\"class\", \"error-icon\").attr(\n    \"d\",\n    \"m340.395,75.605c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688 6.25-6.25 6.25-16.375 0-22.625l-16-16c-6.25-6.25-16.375-6.25-22.625,0s-6.25,16.375 0,22.625l15.999,16z\"\n  );\n  g.append(\"path\").attr(\"class\", \"error-icon\").attr(\n    \"d\",\n    \"m400,64c8.844,0 16-7.164 16-16v-32c0-8.836-7.156-16-16-16-8.844,0-16,7.164-16,16v32c0,8.836 7.156,16 16,16z\"\n  );\n  g.append(\"path\").attr(\"class\", \"error-icon\").attr(\n    \"d\",\n    \"m496,96.586h-32c-8.844,0-16,7.164-16,16 0,8.836 7.156,16 16,16h32c8.844,0 16-7.164 16-16 0-8.836-7.156-16-16-16z\"\n  );\n  g.append(\"path\").attr(\"class\", \"error-icon\").attr(\n    \"d\",\n    \"m436.98,75.605c3.125,3.125 7.219,4.688 11.313,4.688 4.094,0 8.188-1.563 11.313-4.688l32-32c6.25-6.25 6.25-16.375 0-22.625s-16.375-6.25-22.625,0l-32,32c-6.251,6.25-6.251,16.375-0.001,22.625z\"\n  );\n  g.append(\"text\").attr(\"class\", \"error-text\").attr(\"x\", 1440).attr(\"y\", 250).attr(\"font-size\", \"150px\").style(\"text-anchor\", \"middle\").text(\"Syntax error in text\");\n  g.append(\"text\").attr(\"class\", \"error-text\").attr(\"x\", 1250).attr(\"y\", 400).attr(\"font-size\", \"100px\").style(\"text-anchor\", \"middle\").text(`mermaid version ${version}`);\n}, \"draw\");\nvar renderer = { draw };\nvar errorRenderer_default = renderer;\n\n// src/diagrams/error/errorDiagram.ts\nvar diagram = {\n  db: {},\n  renderer,\n  parser: {\n    parse: /* @__PURE__ */ __name(() => {\n      return;\n    }, \"parse\")\n  }\n};\nvar errorDiagram_default = diagram;\n\n// src/diagrams/flowchart/elk/detector.ts\nvar id18 = \"flowchart-elk\";\nvar detector18 = /* @__PURE__ */ __name((txt, config = {}) => {\n  if (\n    // If diagram explicitly states flowchart-elk\n    /^\\s*flowchart-elk/.test(txt) || // If a flowchart/graph diagram has their default renderer set to elk\n    /^\\s*flowchart|graph/.test(txt) && config?.flowchart?.defaultRenderer === \"elk\"\n  ) {\n    config.layout = \"elk\";\n    return true;\n  }\n  return false;\n}, \"detector\");\nvar loader18 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/flowDiagram-XARHJDSH.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id18, diagram: diagram2 };\n}, \"loader\");\nvar plugin16 = {\n  id: id18,\n  detector: detector18,\n  loader: loader18\n};\nvar detector_default = plugin16;\n\n// src/diagrams/timeline/detector.ts\nvar id19 = \"timeline\";\nvar detector19 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*timeline/.test(txt);\n}, \"detector\");\nvar loader19 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/timeline-definition-65575674.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id19, diagram: diagram2 };\n}, \"loader\");\nvar plugin17 = {\n  id: id19,\n  detector: detector19,\n  loader: loader19\n};\nvar detector_default2 = plugin17;\n\n// src/diagrams/mindmap/detector.ts\nvar id20 = \"mindmap\";\nvar detector20 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*mindmap/.test(txt);\n}, \"detector\");\nvar loader20 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/mindmap-definition-TI5ONXTW.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id20, diagram: diagram2 };\n}, \"loader\");\nvar plugin18 = {\n  id: id20,\n  detector: detector20,\n  loader: loader20\n};\nvar detector_default3 = plugin18;\n\n// src/diagrams/kanban/detector.ts\nvar id21 = \"kanban\";\nvar detector21 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*kanban/.test(txt);\n}, \"detector\");\nvar loader21 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/kanban-definition-K5J3OUUV.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id21, diagram: diagram2 };\n}, \"loader\");\nvar plugin19 = {\n  id: id21,\n  detector: detector21,\n  loader: loader21\n};\nvar detector_default4 = plugin19;\n\n// src/diagrams/sankey/sankeyDetector.ts\nvar id22 = \"sankey\";\nvar detector22 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*sankey-beta/.test(txt);\n}, \"detector\");\nvar loader22 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/sankeyDiagram-C6NZRJHT.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id22, diagram: diagram2 };\n}, \"loader\");\nvar plugin20 = {\n  id: id22,\n  detector: detector22,\n  loader: loader22\n};\nvar sankeyDetector_default = plugin20;\n\n// src/diagrams/packet/detector.ts\nvar id23 = \"packet\";\nvar detector23 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*packet-beta/.test(txt);\n}, \"detector\");\nvar loader23 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/diagram-BIPOGRU5.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id23, diagram: diagram2 };\n}, \"loader\");\nvar packet = {\n  id: id23,\n  detector: detector23,\n  loader: loader23\n};\n\n// src/diagrams/radar/detector.ts\nvar id24 = \"radar\";\nvar detector24 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*radar-beta/.test(txt);\n}, \"detector\");\nvar loader24 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/diagram-YF4VECWA.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id24, diagram: diagram2 };\n}, \"loader\");\nvar radar = {\n  id: id24,\n  detector: detector24,\n  loader: loader24\n};\n\n// src/diagrams/block/blockDetector.ts\nvar id25 = \"block\";\nvar detector25 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*block-beta/.test(txt);\n}, \"detector\");\nvar loader25 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/blockDiagram-XZSR5OGQ.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id25, diagram: diagram2 };\n}, \"loader\");\nvar plugin21 = {\n  id: id25,\n  detector: detector25,\n  loader: loader25\n};\nvar blockDetector_default = plugin21;\n\n// src/diagrams/architecture/architectureDetector.ts\nvar id26 = \"architecture\";\nvar detector26 = /* @__PURE__ */ __name((txt) => {\n  return /^\\s*architecture/.test(txt);\n}, \"detector\");\nvar loader26 = /* @__PURE__ */ __name(async () => {\n  const { diagram: diagram2 } = await __vitePreload(async () => { const { diagram: diagram2 } = await import(\"./chunks/mermaid.esm/architectureDiagram-RWNHDUBN.mjs\");return { diagram: diagram2 }},__VITE_IS_MODERN__?__VITE_PRELOAD__:void 0);\n  return { id: id26, diagram: diagram2 };\n}, \"loader\");\nvar architecture = {\n  id: id26,\n  detector: detector26,\n  loader: loader26\n};\nvar architectureDetector_default = architecture;\n\n// src/diagram-api/diagram-orchestration.ts\nvar hasLoadedDiagrams = false;\nvar addDiagrams = /* @__PURE__ */ __name(() => {\n  if (hasLoadedDiagrams) {\n    return;\n  }\n  hasLoadedDiagrams = true;\n  registerDiagram(\"error\", errorDiagram_default, (text) => {\n    return text.toLowerCase().trim() === \"error\";\n  });\n  registerDiagram(\n    \"---\",\n    // --- diagram type may appear if YAML front-matter is not parsed correctly\n    {\n      db: {\n        clear: /* @__PURE__ */ __name(() => {\n        }, \"clear\")\n      },\n      styles: {},\n      // should never be used\n      renderer: {\n        draw: /* @__PURE__ */ __name(() => {\n        }, \"draw\")\n      },\n      parser: {\n        parse: /* @__PURE__ */ __name(() => {\n          throw new Error(\n            \"Diagrams beginning with --- are not valid. If you were trying to use a YAML front-matter, please ensure that you've correctly opened and closed the YAML front-matter with un-indented `---` blocks\"\n          );\n        }, \"parse\")\n      },\n      init: /* @__PURE__ */ __name(() => null, \"init\")\n      // no op\n    },\n    (text) => {\n      return text.toLowerCase().trimStart().startsWith(\"---\");\n    }\n  );\n  registerLazyLoadedDiagrams(\n    c4Detector_default,\n    detector_default4,\n    classDetector_V2_default,\n    classDetector_default,\n    erDetector_default,\n    ganttDetector_default,\n    info,\n    pie,\n    requirementDetector_default,\n    sequenceDetector_default,\n    detector_default,\n    flowDetector_v2_default,\n    flowDetector_default,\n    detector_default3,\n    detector_default2,\n    gitGraphDetector_default,\n    stateDetector_V2_default,\n    stateDetector_default,\n    journeyDetector_default,\n    quadrantDetector_default,\n    sankeyDetector_default,\n    packet,\n    xychartDetector_default,\n    blockDetector_default,\n    architectureDetector_default,\n    radar\n  );\n}, \"addDiagrams\");\n\n// src/diagram-api/loadDiagram.ts\nvar loadRegisteredDiagrams = /* @__PURE__ */ __name(async () => {\n  log.debug(`Loading registered diagrams`);\n  const results = await Promise.allSettled(\n    Object.entries(detectors).map(async ([key, { detector: detector27, loader: loader27 }]) => {\n      if (loader27) {\n        try {\n          getDiagram(key);\n        } catch {\n          try {\n            const { diagram: diagram2, id: id27 } = await loader27();\n            registerDiagram(id27, diagram2, detector27);\n          } catch (err) {\n            log.error(`Failed to load external diagram with key ${key}. Removing from detectors.`);\n            delete detectors[key];\n            throw err;\n          }\n        }\n      }\n    })\n  );\n  const failed = results.filter((result) => result.status === \"rejected\");\n  if (failed.length > 0) {\n    log.error(`Failed to load ${failed.length} external diagrams`);\n    for (const res of failed) {\n      log.error(res);\n    }\n    throw new Error(`Failed to load ${failed.length} external diagrams`);\n  }\n}, \"loadRegisteredDiagrams\");\n\n// ../../node_modules/.pnpm/stylis@4.3.6/node_modules/stylis/src/Enum.js\nvar COMMENT = \"comm\";\nvar RULESET = \"rule\";\nvar DECLARATION = \"decl\";\nvar IMPORT = \"@import\";\nvar NAMESPACE = \"@namespace\";\nvar KEYFRAMES = \"@keyframes\";\nvar LAYER = \"@layer\";\n\n// ../../node_modules/.pnpm/stylis@4.3.6/node_modules/stylis/src/Utility.js\nvar abs = Math.abs;\nvar from = String.fromCharCode;\nfunction trim(value) {\n  return value.trim();\n}\n__name(trim, \"trim\");\nfunction replace(value, pattern, replacement) {\n  return value.replace(pattern, replacement);\n}\n__name(replace, \"replace\");\nfunction indexof(value, search, position2) {\n  return value.indexOf(search, position2);\n}\n__name(indexof, \"indexof\");\nfunction charat(value, index) {\n  return value.charCodeAt(index) | 0;\n}\n__name(charat, \"charat\");\nfunction substr(value, begin, end) {\n  return value.slice(begin, end);\n}\n__name(substr, \"substr\");\nfunction strlen(value) {\n  return value.length;\n}\n__name(strlen, \"strlen\");\nfunction sizeof(value) {\n  return value.length;\n}\n__name(sizeof, \"sizeof\");\nfunction append(value, array) {\n  return array.push(value), value;\n}\n__name(append, \"append\");\n\n// ../../node_modules/.pnpm/stylis@4.3.6/node_modules/stylis/src/Tokenizer.js\nvar line = 1;\nvar column = 1;\nvar length = 0;\nvar position = 0;\nvar character = 0;\nvar characters = \"\";\nfunction node(value, root, parent, type, props, children, length2, siblings) {\n  return { value, root, parent, type, props, children, line, column, length: length2, return: \"\", siblings };\n}\n__name(node, \"node\");\nfunction char() {\n  return character;\n}\n__name(char, \"char\");\nfunction prev() {\n  character = position > 0 ? charat(characters, --position) : 0;\n  if (column--, character === 10)\n    column = 1, line--;\n  return character;\n}\n__name(prev, \"prev\");\nfunction next() {\n  character = position < length ? charat(characters, position++) : 0;\n  if (column++, character === 10)\n    column = 1, line++;\n  return character;\n}\n__name(next, \"next\");\nfunction peek() {\n  return charat(characters, position);\n}\n__name(peek, \"peek\");\nfunction caret() {\n  return position;\n}\n__name(caret, \"caret\");\nfunction slice(begin, end) {\n  return substr(characters, begin, end);\n}\n__name(slice, \"slice\");\nfunction token(type) {\n  switch (type) {\n    // \\0 \\t \\n \\r \\s whitespace token\n    case 0:\n    case 9:\n    case 10:\n    case 13:\n    case 32:\n      return 5;\n    // ! + , / > @ ~ isolate token\n    case 33:\n    case 43:\n    case 44:\n    case 47:\n    case 62:\n    case 64:\n    case 126:\n    // ; { } breakpoint token\n    case 59:\n    case 123:\n    case 125:\n      return 4;\n    // : accompanied token\n    case 58:\n      return 3;\n    // \" ' ( [ opening delimit token\n    case 34:\n    case 39:\n    case 40:\n    case 91:\n      return 2;\n    // ) ] closing delimit token\n    case 41:\n    case 93:\n      return 1;\n  }\n  return 0;\n}\n__name(token, \"token\");\nfunction alloc(value) {\n  return line = column = 1, length = strlen(characters = value), position = 0, [];\n}\n__name(alloc, \"alloc\");\nfunction dealloc(value) {\n  return characters = \"\", value;\n}\n__name(dealloc, \"dealloc\");\nfunction delimit(type) {\n  return trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));\n}\n__name(delimit, \"delimit\");\nfunction whitespace(type) {\n  while (character = peek())\n    if (character < 33)\n      next();\n    else\n      break;\n  return token(type) > 2 || token(character) > 3 ? \"\" : \" \";\n}\n__name(whitespace, \"whitespace\");\nfunction escaping(index, count) {\n  while (--count && next())\n    if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97)\n      break;\n  return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32));\n}\n__name(escaping, \"escaping\");\nfunction delimiter(type) {\n  while (next())\n    switch (character) {\n      // ] ) \" '\n      case type:\n        return position;\n      // \" '\n      case 34:\n      case 39:\n        if (type !== 34 && type !== 39)\n          delimiter(character);\n        break;\n      // (\n      case 40:\n        if (type === 41)\n          delimiter(type);\n        break;\n      // \\\n      case 92:\n        next();\n        break;\n    }\n  return position;\n}\n__name(delimiter, \"delimiter\");\nfunction commenter(type, index) {\n  while (next())\n    if (type + character === 47 + 10)\n      break;\n    else if (type + character === 42 + 42 && peek() === 47)\n      break;\n  return \"/*\" + slice(index, position - 1) + \"*\" + from(type === 47 ? type : next());\n}\n__name(commenter, \"commenter\");\nfunction identifier(index) {\n  while (!token(peek()))\n    next();\n  return slice(index, position);\n}\n__name(identifier, \"identifier\");\n\n// ../../node_modules/.pnpm/stylis@4.3.6/node_modules/stylis/src/Parser.js\nfunction compile(value) {\n  return dealloc(parse(\"\", null, null, null, [\"\"], value = alloc(value), 0, [0], value));\n}\n__name(compile, \"compile\");\nfunction parse(value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {\n  var index = 0;\n  var offset = 0;\n  var length2 = pseudo;\n  var atrule = 0;\n  var property = 0;\n  var previous = 0;\n  var variable = 1;\n  var scanning = 1;\n  var ampersand = 1;\n  var character2 = 0;\n  var type = \"\";\n  var props = rules;\n  var children = rulesets;\n  var reference = rule;\n  var characters2 = type;\n  while (scanning)\n    switch (previous = character2, character2 = next()) {\n      // (\n      case 40:\n        if (previous != 108 && charat(characters2, length2 - 1) == 58) {\n          if (indexof(characters2 += replace(delimit(character2), \"&\", \"&\\f\"), \"&\\f\", abs(index ? points[index - 1] : 0)) != -1)\n            ampersand = -1;\n          break;\n        }\n      // \" ' [\n      case 34:\n      case 39:\n      case 91:\n        characters2 += delimit(character2);\n        break;\n      // \\t \\n \\r \\s\n      case 9:\n      case 10:\n      case 13:\n      case 32:\n        characters2 += whitespace(previous);\n        break;\n      // \\\n      case 92:\n        characters2 += escaping(caret() - 1, 7);\n        continue;\n      // /\n      case 47:\n        switch (peek()) {\n          case 42:\n          case 47:\n            append(comment(commenter(next(), caret()), root, parent, declarations), declarations);\n            if ((token(previous || 1) == 5 || token(peek() || 1) == 5) && strlen(characters2) && substr(characters2, -1, void 0) !== \" \") characters2 += \" \";\n            break;\n          default:\n            characters2 += \"/\";\n        }\n        break;\n      // {\n      case 123 * variable:\n        points[index++] = strlen(characters2) * ampersand;\n      // } ; \\0\n      case 125 * variable:\n      case 59:\n      case 0:\n        switch (character2) {\n          // \\0 }\n          case 0:\n          case 125:\n            scanning = 0;\n          // ;\n          case 59 + offset:\n            if (ampersand == -1) characters2 = replace(characters2, /\\f/g, \"\");\n            if (property > 0 && (strlen(characters2) - length2 || variable === 0 && previous === 47))\n              append(property > 32 ? declaration(characters2 + \";\", rule, parent, length2 - 1, declarations) : declaration(replace(characters2, \" \", \"\") + \";\", rule, parent, length2 - 2, declarations), declarations);\n            break;\n          // @ ;\n          case 59:\n            characters2 += \";\";\n          // { rule/at-rule\n          default:\n            append(reference = ruleset(characters2, root, parent, index, offset, rules, points, type, props = [], children = [], length2, rulesets), rulesets);\n            if (character2 === 123)\n              if (offset === 0)\n                parse(characters2, root, reference, reference, props, rulesets, length2, points, children);\n              else {\n                switch (atrule) {\n                  // c(ontainer)\n                  case 99:\n                    if (charat(characters2, 3) === 110) break;\n                  // l(ayer)\n                  case 108:\n                    if (charat(characters2, 2) === 97) break;\n                  default:\n                    offset = 0;\n                  // d(ocument) m(edia) s(upports)\n                  case 100:\n                  case 109:\n                  case 115:\n                }\n                if (offset) parse(value, reference, reference, rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length2, children), children), rules, children, length2, points, rule ? props : children);\n                else parse(characters2, reference, reference, reference, [\"\"], children, 0, points, children);\n              }\n        }\n        index = offset = property = 0, variable = ampersand = 1, type = characters2 = \"\", length2 = pseudo;\n        break;\n      // :\n      case 58:\n        length2 = 1 + strlen(characters2), property = previous;\n      default:\n        if (variable < 1) {\n          if (character2 == 123)\n            --variable;\n          else if (character2 == 125 && variable++ == 0 && prev() == 125)\n            continue;\n        }\n        switch (characters2 += from(character2), character2 * variable) {\n          // &\n          case 38:\n            ampersand = offset > 0 ? 1 : (characters2 += \"\\f\", -1);\n            break;\n          // ,\n          case 44:\n            points[index++] = (strlen(characters2) - 1) * ampersand, ampersand = 1;\n            break;\n          // @\n          case 64:\n            if (peek() === 45)\n              characters2 += delimit(next());\n            atrule = peek(), offset = length2 = strlen(type = characters2 += identifier(caret())), character2++;\n            break;\n          // -\n          case 45:\n            if (previous === 45 && strlen(characters2) == 2)\n              variable = 0;\n        }\n    }\n  return rulesets;\n}\n__name(parse, \"parse\");\nfunction ruleset(value, root, parent, index, offset, rules, points, type, props, children, length2, siblings) {\n  var post = offset - 1;\n  var rule = offset === 0 ? rules : [\"\"];\n  var size = sizeof(rule);\n  for (var i = 0, j = 0, k = 0; i < index; ++i)\n    for (var x = 0, y = substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)\n      if (z = trim(j > 0 ? rule[x] + \" \" + y : replace(y, /&\\f/g, rule[x])))\n        props[k++] = z;\n  return node(value, root, parent, offset === 0 ? RULESET : type, props, children, length2, siblings);\n}\n__name(ruleset, \"ruleset\");\nfunction comment(value, root, parent, siblings) {\n  return node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0, siblings);\n}\n__name(comment, \"comment\");\nfunction declaration(value, root, parent, length2, siblings) {\n  return node(value, root, parent, DECLARATION, substr(value, 0, length2), substr(value, length2 + 1, -1), length2, siblings);\n}\n__name(declaration, \"declaration\");\n\n// ../../node_modules/.pnpm/stylis@4.3.6/node_modules/stylis/src/Serializer.js\nfunction serialize(children, callback) {\n  var output = \"\";\n  for (var i = 0; i < children.length; i++)\n    output += callback(children[i], i, children, callback) || \"\";\n  return output;\n}\n__name(serialize, \"serialize\");\nfunction stringify(element, index, children, callback) {\n  switch (element.type) {\n    case LAYER:\n      if (element.children.length) break;\n    case IMPORT:\n    case NAMESPACE:\n    case DECLARATION:\n      return element.return = element.return || element.value;\n    case COMMENT:\n      return \"\";\n    case KEYFRAMES:\n      return element.return = element.value + \"{\" + serialize(element.children, callback) + \"}\";\n    case RULESET:\n      if (!strlen(element.value = element.props.join(\",\"))) return \"\";\n  }\n  return strlen(children = serialize(element.children, callback)) ? element.return = element.value + \"{\" + children + \"}\" : \"\";\n}\n__name(stringify, \"stringify\");\n\n// src/accessibility.ts\nvar SVG_ROLE = \"graphics-document document\";\nfunction setA11yDiagramInfo(svg, diagramType) {\n  svg.attr(\"role\", SVG_ROLE);\n  if (diagramType !== \"\") {\n    svg.attr(\"aria-roledescription\", diagramType);\n  }\n}\n__name(setA11yDiagramInfo, \"setA11yDiagramInfo\");\nfunction addSVGa11yTitleDescription(svg, a11yTitle, a11yDesc, baseId) {\n  if (svg.insert === void 0) {\n    return;\n  }\n  if (a11yDesc) {\n    const descId = `chart-desc-${baseId}`;\n    svg.attr(\"aria-describedby\", descId);\n    svg.insert(\"desc\", \":first-child\").attr(\"id\", descId).text(a11yDesc);\n  }\n  if (a11yTitle) {\n    const titleId = `chart-title-${baseId}`;\n    svg.attr(\"aria-labelledby\", titleId);\n    svg.insert(\"title\", \":first-child\").attr(\"id\", titleId).text(a11yTitle);\n  }\n}\n__name(addSVGa11yTitleDescription, \"addSVGa11yTitleDescription\");\n\n// src/Diagram.ts\nvar Diagram = class _Diagram {\n  constructor(type, text, db, parser, renderer2) {\n    this.type = type;\n    this.text = text;\n    this.db = db;\n    this.parser = parser;\n    this.renderer = renderer2;\n  }\n  static {\n    __name(this, \"Diagram\");\n  }\n  static async fromText(text, metadata = {}) {\n    const config = getConfig();\n    const type = detectType(text, config);\n    text = encodeEntities(text) + \"\\n\";\n    try {\n      getDiagram(type);\n    } catch {\n      const loader27 = getDiagramLoader(type);\n      if (!loader27) {\n        throw new UnknownDiagramError(`Diagram ${type} not found.`);\n      }\n      const { id: id27, diagram: diagram2 } = await loader27();\n      registerDiagram(id27, diagram2);\n    }\n    const { db, parser, renderer: renderer2, init: init2 } = getDiagram(type);\n    if (parser.parser) {\n      parser.parser.yy = db;\n    }\n    db.clear?.();\n    init2?.(config);\n    if (metadata.title) {\n      db.setDiagramTitle?.(metadata.title);\n    }\n    await parser.parse(text);\n    return new _Diagram(type, text, db, parser, renderer2);\n  }\n  async render(id27, version) {\n    await this.renderer.draw(this.text, id27, version, this);\n  }\n  getParser() {\n    return this.parser;\n  }\n  getType() {\n    return this.type;\n  }\n};\n\n// src/interactionDb.ts\nvar interactionFunctions = [];\nvar attachFunctions = /* @__PURE__ */ __name(() => {\n  interactionFunctions.forEach((f) => {\n    f();\n  });\n  interactionFunctions = [];\n}, \"attachFunctions\");\n\n// src/diagram-api/comments.ts\nvar cleanupComments = /* @__PURE__ */ __name((text) => {\n  return text.replace(/^\\s*%%(?!{)[^\\n]+\\n?/gm, \"\").trimStart();\n}, \"cleanupComments\");\n\n// src/diagram-api/frontmatter.ts\nfunction extractFrontMatter(text) {\n  const matches = text.match(frontMatterRegex);\n  if (!matches) {\n    return {\n      text,\n      metadata: {}\n    };\n  }\n  let parsed = load(matches[1], {\n    // To support config, we need JSON schema.\n    // https://www.yaml.org/spec/1.2/spec.html#id2803231\n    schema: JSON_SCHEMA\n  }) ?? {};\n  parsed = typeof parsed === \"object\" && !Array.isArray(parsed) ? parsed : {};\n  const metadata = {};\n  if (parsed.displayMode) {\n    metadata.displayMode = parsed.displayMode.toString();\n  }\n  if (parsed.title) {\n    metadata.title = parsed.title.toString();\n  }\n  if (parsed.config) {\n    metadata.config = parsed.config;\n  }\n  return {\n    text: text.slice(matches[0].length),\n    metadata\n  };\n}\n__name(extractFrontMatter, \"extractFrontMatter\");\n\n// src/preprocess.ts\nvar cleanupText = /* @__PURE__ */ __name((code) => {\n  return code.replace(/\\r\\n?/g, \"\\n\").replace(\n    /<(\\w+)([^>]*)>/g,\n    (match, tag, attributes) => \"<\" + tag + attributes.replace(/=\"([^\"]*)\"/g, \"='$1'\") + \">\"\n  );\n}, \"cleanupText\");\nvar processFrontmatter = /* @__PURE__ */ __name((code) => {\n  const { text, metadata } = extractFrontMatter(code);\n  const { displayMode, title, config = {} } = metadata;\n  if (displayMode) {\n    if (!config.gantt) {\n      config.gantt = {};\n    }\n    config.gantt.displayMode = displayMode;\n  }\n  return { title, config, text };\n}, \"processFrontmatter\");\nvar processDirectives = /* @__PURE__ */ __name((code) => {\n  const initDirective = utils_default.detectInit(code) ?? {};\n  const wrapDirectives = utils_default.detectDirective(code, \"wrap\");\n  if (Array.isArray(wrapDirectives)) {\n    initDirective.wrap = wrapDirectives.some(({ type }) => type === \"wrap\");\n  } else if (wrapDirectives?.type === \"wrap\") {\n    initDirective.wrap = true;\n  }\n  return {\n    text: removeDirectives(code),\n    directive: initDirective\n  };\n}, \"processDirectives\");\nfunction preprocessDiagram(code) {\n  const cleanedCode = cleanupText(code);\n  const frontMatterResult = processFrontmatter(cleanedCode);\n  const directiveResult = processDirectives(frontMatterResult.text);\n  const config = cleanAndMerge(frontMatterResult.config, directiveResult.directive);\n  code = cleanupComments(directiveResult.text);\n  return {\n    code,\n    title: frontMatterResult.title,\n    config\n  };\n}\n__name(preprocessDiagram, \"preprocessDiagram\");\n\n// src/utils/base64.ts\nfunction toBase64(str) {\n  const utf8Bytes = new TextEncoder().encode(str);\n  const utf8Str = Array.from(utf8Bytes, (byte) => String.fromCodePoint(byte)).join(\"\");\n  return btoa(utf8Str);\n}\n__name(toBase64, \"toBase64\");\n\n// src/mermaidAPI.ts\nvar MAX_TEXTLENGTH = 5e4;\nvar MAX_TEXTLENGTH_EXCEEDED_MSG = \"graph TB;a[Maximum text size in diagram exceeded];style a fill:#faa\";\nvar SECURITY_LVL_SANDBOX = \"sandbox\";\nvar SECURITY_LVL_LOOSE = \"loose\";\nvar XMLNS_SVG_STD = \"http://www.w3.org/2000/svg\";\nvar XMLNS_XLINK_STD = \"http://www.w3.org/1999/xlink\";\nvar XMLNS_XHTML_STD = \"http://www.w3.org/1999/xhtml\";\nvar IFRAME_WIDTH = \"100%\";\nvar IFRAME_HEIGHT = \"100%\";\nvar IFRAME_STYLES = \"border:0;margin:0;\";\nvar IFRAME_BODY_STYLE = \"margin:0\";\nvar IFRAME_SANDBOX_OPTS = \"allow-top-navigation-by-user-activation allow-popups\";\nvar IFRAME_NOT_SUPPORTED_MSG = 'The \"iframe\" tag is not supported by your browser.';\nvar DOMPURIFY_TAGS = [\"foreignobject\"];\nvar DOMPURIFY_ATTR = [\"dominant-baseline\"];\nfunction processAndSetConfigs(text) {\n  const processed = preprocessDiagram(text);\n  reset();\n  addDirective(processed.config ?? {});\n  return processed;\n}\n__name(processAndSetConfigs, \"processAndSetConfigs\");\nasync function parse2(text, parseOptions) {\n  addDiagrams();\n  try {\n    const { code, config } = processAndSetConfigs(text);\n    const diagram2 = await getDiagramFromText(code);\n    return { diagramType: diagram2.type, config };\n  } catch (error) {\n    if (parseOptions?.suppressErrors) {\n      return false;\n    }\n    throw error;\n  }\n}\n__name(parse2, \"parse\");\nvar cssImportantStyles = /* @__PURE__ */ __name((cssClass, element, cssClasses = []) => {\n  return `\n.${cssClass} ${element} { ${cssClasses.join(\" !important; \")} !important; }`;\n}, \"cssImportantStyles\");\nvar createCssStyles = /* @__PURE__ */ __name((config, classDefs = /* @__PURE__ */ new Map()) => {\n  let cssStyles = \"\";\n  if (config.themeCSS !== void 0) {\n    cssStyles += `\n${config.themeCSS}`;\n  }\n  if (config.fontFamily !== void 0) {\n    cssStyles += `\n:root { --mermaid-font-family: ${config.fontFamily}}`;\n  }\n  if (config.altFontFamily !== void 0) {\n    cssStyles += `\n:root { --mermaid-alt-font-family: ${config.altFontFamily}}`;\n  }\n  if (classDefs instanceof Map) {\n    const htmlLabels = config.htmlLabels ?? config.flowchart?.htmlLabels;\n    const cssHtmlElements = [\"> *\", \"span\"];\n    const cssShapeElements = [\"rect\", \"polygon\", \"ellipse\", \"circle\", \"path\"];\n    const cssElements = htmlLabels ? cssHtmlElements : cssShapeElements;\n    classDefs.forEach((styleClassDef) => {\n      if (!isEmpty_default(styleClassDef.styles)) {\n        cssElements.forEach((cssElement) => {\n          cssStyles += cssImportantStyles(styleClassDef.id, cssElement, styleClassDef.styles);\n        });\n      }\n      if (!isEmpty_default(styleClassDef.textStyles)) {\n        cssStyles += cssImportantStyles(\n          styleClassDef.id,\n          \"tspan\",\n          (styleClassDef?.textStyles || []).map((s) => s.replace(\"color\", \"fill\"))\n        );\n      }\n    });\n  }\n  return cssStyles;\n}, \"createCssStyles\");\nvar createUserStyles = /* @__PURE__ */ __name((config, graphType, classDefs, svgId) => {\n  const userCSSstyles = createCssStyles(config, classDefs);\n  const allStyles = styles_default(graphType, userCSSstyles, config.themeVariables);\n  return serialize(compile(`${svgId}{${allStyles}}`), stringify);\n}, \"createUserStyles\");\nvar cleanUpSvgCode = /* @__PURE__ */ __name((svgCode = \"\", inSandboxMode, useArrowMarkerUrls) => {\n  let cleanedUpSvg = svgCode;\n  if (!useArrowMarkerUrls && !inSandboxMode) {\n    cleanedUpSvg = cleanedUpSvg.replace(\n      /marker-end=\"url\\([\\d+./:=?A-Za-z-]*?#/g,\n      'marker-end=\"url(#'\n    );\n  }\n  cleanedUpSvg = decodeEntities(cleanedUpSvg);\n  cleanedUpSvg = cleanedUpSvg.replace(/<br>/g, \"<br/>\");\n  return cleanedUpSvg;\n}, \"cleanUpSvgCode\");\nvar putIntoIFrame = /* @__PURE__ */ __name((svgCode = \"\", svgElement) => {\n  const height = svgElement?.viewBox?.baseVal?.height ? svgElement.viewBox.baseVal.height + \"px\" : IFRAME_HEIGHT;\n  const base64encodedSrc = toBase64(`<body style=\"${IFRAME_BODY_STYLE}\">${svgCode}</body>`);\n  return `<iframe style=\"width:${IFRAME_WIDTH};height:${height};${IFRAME_STYLES}\" src=\"data:text/html;charset=UTF-8;base64,${base64encodedSrc}\" sandbox=\"${IFRAME_SANDBOX_OPTS}\">\n  ${IFRAME_NOT_SUPPORTED_MSG}\n</iframe>`;\n}, \"putIntoIFrame\");\nvar appendDivSvgG = /* @__PURE__ */ __name((parentRoot, id27, enclosingDivId, divStyle, svgXlink) => {\n  const enclosingDiv = parentRoot.append(\"div\");\n  enclosingDiv.attr(\"id\", enclosingDivId);\n  if (divStyle) {\n    enclosingDiv.attr(\"style\", divStyle);\n  }\n  const svgNode = enclosingDiv.append(\"svg\").attr(\"id\", id27).attr(\"width\", \"100%\").attr(\"xmlns\", XMLNS_SVG_STD);\n  if (svgXlink) {\n    svgNode.attr(\"xmlns:xlink\", svgXlink);\n  }\n  svgNode.append(\"g\");\n  return parentRoot;\n}, \"appendDivSvgG\");\nfunction sandboxedIframe(parentNode, iFrameId) {\n  return parentNode.append(\"iframe\").attr(\"id\", iFrameId).attr(\"style\", \"width: 100%; height: 100%;\").attr(\"sandbox\", \"\");\n}\n__name(sandboxedIframe, \"sandboxedIframe\");\nvar removeExistingElements = /* @__PURE__ */ __name((doc, id27, divId, iFrameId) => {\n  doc.getElementById(id27)?.remove();\n  doc.getElementById(divId)?.remove();\n  doc.getElementById(iFrameId)?.remove();\n}, \"removeExistingElements\");\nvar render = /* @__PURE__ */ __name(async function(id27, text, svgContainingElement) {\n  addDiagrams();\n  const processed = processAndSetConfigs(text);\n  text = processed.code;\n  const config = getConfig();\n  log.debug(config);\n  if (text.length > (config?.maxTextSize ?? MAX_TEXTLENGTH)) {\n    text = MAX_TEXTLENGTH_EXCEEDED_MSG;\n  }\n  const idSelector = \"#\" + id27;\n  const iFrameID = \"i\" + id27;\n  const iFrameID_selector = \"#\" + iFrameID;\n  const enclosingDivID = \"d\" + id27;\n  const enclosingDivID_selector = \"#\" + enclosingDivID;\n  const removeTempElements = /* @__PURE__ */ __name(() => {\n    const tmpElementSelector = isSandboxed ? iFrameID_selector : enclosingDivID_selector;\n    const node2 = select_default(tmpElementSelector).node();\n    if (node2 && \"remove\" in node2) {\n      node2.remove();\n    }\n  }, \"removeTempElements\");\n  let root = select_default(\"body\");\n  const isSandboxed = config.securityLevel === SECURITY_LVL_SANDBOX;\n  const isLooseSecurityLevel = config.securityLevel === SECURITY_LVL_LOOSE;\n  const fontFamily = config.fontFamily;\n  if (svgContainingElement !== void 0) {\n    if (svgContainingElement) {\n      svgContainingElement.innerHTML = \"\";\n    }\n    if (isSandboxed) {\n      const iframe = sandboxedIframe(select_default(svgContainingElement), iFrameID);\n      root = select_default(iframe.nodes()[0].contentDocument.body);\n      root.node().style.margin = 0;\n    } else {\n      root = select_default(svgContainingElement);\n    }\n    appendDivSvgG(root, id27, enclosingDivID, `font-family: ${fontFamily}`, XMLNS_XLINK_STD);\n  } else {\n    removeExistingElements(document, id27, enclosingDivID, iFrameID);\n    if (isSandboxed) {\n      const iframe = sandboxedIframe(select_default(\"body\"), iFrameID);\n      root = select_default(iframe.nodes()[0].contentDocument.body);\n      root.node().style.margin = 0;\n    } else {\n      root = select_default(\"body\");\n    }\n    appendDivSvgG(root, id27, enclosingDivID);\n  }\n  let diag;\n  let parseEncounteredException;\n  try {\n    diag = await Diagram.fromText(text, { title: processed.title });\n  } catch (error) {\n    if (config.suppressErrorRendering) {\n      removeTempElements();\n      throw error;\n    }\n    diag = await Diagram.fromText(\"error\");\n    parseEncounteredException = error;\n  }\n  const element = root.select(enclosingDivID_selector).node();\n  const diagramType = diag.type;\n  const svg = element.firstChild;\n  const firstChild = svg.firstChild;\n  const diagramClassDefs = diag.renderer.getClasses?.(text, diag);\n  const rules = createUserStyles(config, diagramType, diagramClassDefs, idSelector);\n  const style1 = document.createElement(\"style\");\n  style1.innerHTML = rules;\n  svg.insertBefore(style1, firstChild);\n  try {\n    await diag.renderer.draw(text, id27, package_default.version, diag);\n  } catch (e) {\n    if (config.suppressErrorRendering) {\n      removeTempElements();\n    } else {\n      errorRenderer_default.draw(text, id27, package_default.version);\n    }\n    throw e;\n  }\n  const svgNode = root.select(`${enclosingDivID_selector} svg`);\n  const a11yTitle = diag.db.getAccTitle?.();\n  const a11yDescr = diag.db.getAccDescription?.();\n  addA11yInfo(diagramType, svgNode, a11yTitle, a11yDescr);\n  root.select(`[id=\"${id27}\"]`).selectAll(\"foreignobject > *\").attr(\"xmlns\", XMLNS_XHTML_STD);\n  let svgCode = root.select(enclosingDivID_selector).node().innerHTML;\n  log.debug(\"config.arrowMarkerAbsolute\", config.arrowMarkerAbsolute);\n  svgCode = cleanUpSvgCode(svgCode, isSandboxed, evaluate(config.arrowMarkerAbsolute));\n  if (isSandboxed) {\n    const svgEl = root.select(enclosingDivID_selector + \" svg\").node();\n    svgCode = putIntoIFrame(svgCode, svgEl);\n  } else if (!isLooseSecurityLevel) {\n    svgCode = purify.sanitize(svgCode, {\n      ADD_TAGS: DOMPURIFY_TAGS,\n      ADD_ATTR: DOMPURIFY_ATTR,\n      HTML_INTEGRATION_POINTS: { foreignobject: true }\n    });\n  }\n  attachFunctions();\n  if (parseEncounteredException) {\n    throw parseEncounteredException;\n  }\n  removeTempElements();\n  return {\n    diagramType,\n    svg: svgCode,\n    bindFunctions: diag.db.bindFunctions\n  };\n}, \"render\");\nfunction initialize(userOptions = {}) {\n  const options = assignWithDepth_default({}, userOptions);\n  if (options?.fontFamily && !options.themeVariables?.fontFamily) {\n    if (!options.themeVariables) {\n      options.themeVariables = {};\n    }\n    options.themeVariables.fontFamily = options.fontFamily;\n  }\n  saveConfigFromInitialize(options);\n  if (options?.theme && options.theme in themes_default) {\n    options.themeVariables = themes_default[options.theme].getThemeVariables(\n      options.themeVariables\n    );\n  } else if (options) {\n    options.themeVariables = themes_default.default.getThemeVariables(options.themeVariables);\n  }\n  const config = typeof options === \"object\" ? setSiteConfig(options) : getSiteConfig();\n  setLogLevel(config.logLevel);\n  addDiagrams();\n}\n__name(initialize, \"initialize\");\nvar getDiagramFromText = /* @__PURE__ */ __name((text, metadata = {}) => {\n  const { code } = preprocessDiagram(text);\n  return Diagram.fromText(code, metadata);\n}, \"getDiagramFromText\");\nfunction addA11yInfo(diagramType, svgNode, a11yTitle, a11yDescr) {\n  setA11yDiagramInfo(svgNode, diagramType);\n  addSVGa11yTitleDescription(svgNode, a11yTitle, a11yDescr, svgNode.attr(\"id\"));\n}\n__name(addA11yInfo, \"addA11yInfo\");\nvar mermaidAPI = Object.freeze({\n  render,\n  parse: parse2,\n  getDiagramFromText,\n  initialize,\n  getConfig,\n  setConfig,\n  getSiteConfig,\n  updateSiteConfig,\n  reset: /* @__PURE__ */ __name(() => {\n    reset();\n  }, \"reset\"),\n  globalReset: /* @__PURE__ */ __name(() => {\n    reset(defaultConfig);\n  }, \"globalReset\"),\n  defaultConfig\n});\nsetLogLevel(getConfig().logLevel);\nreset(getConfig());\n\n// src/mermaid.ts\nvar handleError = /* @__PURE__ */ __name((error, errors, parseError) => {\n  log.warn(error);\n  if (isDetailedError(error)) {\n    if (parseError) {\n      parseError(error.str, error.hash);\n    }\n    errors.push({ ...error, message: error.str, error });\n  } else {\n    if (parseError) {\n      parseError(error);\n    }\n    if (error instanceof Error) {\n      errors.push({\n        str: error.message,\n        message: error.message,\n        hash: error.name,\n        error\n      });\n    }\n  }\n}, \"handleError\");\nvar run = /* @__PURE__ */ __name(async function(options = {\n  querySelector: \".mermaid\"\n}) {\n  try {\n    await runThrowsErrors(options);\n  } catch (e) {\n    if (isDetailedError(e)) {\n      log.error(e.str);\n    }\n    if (mermaid.parseError) {\n      mermaid.parseError(e);\n    }\n    if (!options.suppressErrors) {\n      log.error(\"Use the suppressErrors option to suppress these errors\");\n      throw e;\n    }\n  }\n}, \"run\");\nvar runThrowsErrors = /* @__PURE__ */ __name(async function({ postRenderCallback, querySelector, nodes } = {\n  querySelector: \".mermaid\"\n}) {\n  const conf = mermaidAPI.getConfig();\n  log.debug(`${!postRenderCallback ? \"No \" : \"\"}Callback function found`);\n  let nodesToProcess;\n  if (nodes) {\n    nodesToProcess = nodes;\n  } else if (querySelector) {\n    nodesToProcess = document.querySelectorAll(querySelector);\n  } else {\n    throw new Error(\"Nodes and querySelector are both undefined\");\n  }\n  log.debug(`Found ${nodesToProcess.length} diagrams`);\n  if (conf?.startOnLoad !== void 0) {\n    log.debug(\"Start On Load: \" + conf?.startOnLoad);\n    mermaidAPI.updateSiteConfig({ startOnLoad: conf?.startOnLoad });\n  }\n  const idGenerator = new utils_default.InitIDGenerator(conf.deterministicIds, conf.deterministicIDSeed);\n  let txt;\n  const errors = [];\n  for (const element of Array.from(nodesToProcess)) {\n    log.info(\"Rendering diagram: \" + element.id);\n    if (element.getAttribute(\"data-processed\")) {\n      continue;\n    }\n    element.setAttribute(\"data-processed\", \"true\");\n    const id27 = `mermaid-${idGenerator.next()}`;\n    txt = element.innerHTML;\n    txt = dedent(utils_default.entityDecode(txt)).trim().replace(/<br\\s*\\/?>/gi, \"<br/>\");\n    const init2 = utils_default.detectInit(txt);\n    if (init2) {\n      log.debug(\"Detected early reinit: \", init2);\n    }\n    try {\n      const { svg, bindFunctions } = await render2(id27, txt, element);\n      element.innerHTML = svg;\n      if (postRenderCallback) {\n        await postRenderCallback(id27);\n      }\n      if (bindFunctions) {\n        bindFunctions(element);\n      }\n    } catch (error) {\n      handleError(error, errors, mermaid.parseError);\n    }\n  }\n  if (errors.length > 0) {\n    throw errors[0];\n  }\n}, \"runThrowsErrors\");\nvar initialize2 = /* @__PURE__ */ __name(function(config) {\n  mermaidAPI.initialize(config);\n}, \"initialize\");\nvar init = /* @__PURE__ */ __name(async function(config, nodes, callback) {\n  log.warn(\"mermaid.init is deprecated. Please use run instead.\");\n  if (config) {\n    initialize2(config);\n  }\n  const runOptions = { postRenderCallback: callback, querySelector: \".mermaid\" };\n  if (typeof nodes === \"string\") {\n    runOptions.querySelector = nodes;\n  } else if (nodes) {\n    if (nodes instanceof HTMLElement) {\n      runOptions.nodes = [nodes];\n    } else {\n      runOptions.nodes = nodes;\n    }\n  }\n  await run(runOptions);\n}, \"init\");\nvar registerExternalDiagrams = /* @__PURE__ */ __name(async (diagrams, {\n  lazyLoad = true\n} = {}) => {\n  addDiagrams();\n  registerLazyLoadedDiagrams(...diagrams);\n  if (lazyLoad === false) {\n    await loadRegisteredDiagrams();\n  }\n}, \"registerExternalDiagrams\");\nvar contentLoaded = /* @__PURE__ */ __name(function() {\n  if (mermaid.startOnLoad) {\n    const { startOnLoad } = mermaidAPI.getConfig();\n    if (startOnLoad) {\n      mermaid.run().catch((err) => log.error(\"Mermaid failed to initialize\", err));\n    }\n  }\n}, \"contentLoaded\");\nif (typeof document !== \"undefined\") {\n  window.addEventListener(\"load\", contentLoaded, false);\n}\nvar setParseErrorHandler = /* @__PURE__ */ __name(function(parseErrorHandler) {\n  mermaid.parseError = parseErrorHandler;\n}, \"setParseErrorHandler\");\nvar executionQueue = [];\nvar executionQueueRunning = false;\nvar executeQueue = /* @__PURE__ */ __name(async () => {\n  if (executionQueueRunning) {\n    return;\n  }\n  executionQueueRunning = true;\n  while (executionQueue.length > 0) {\n    const f = executionQueue.shift();\n    if (f) {\n      try {\n        await f();\n      } catch (e) {\n        log.error(\"Error executing queue\", e);\n      }\n    }\n  }\n  executionQueueRunning = false;\n}, \"executeQueue\");\nvar parse3 = /* @__PURE__ */ __name(async (text, parseOptions) => {\n  return new Promise((resolve, reject) => {\n    const performCall = /* @__PURE__ */ __name(() => new Promise((res, rej) => {\n      mermaidAPI.parse(text, parseOptions).then(\n        (r) => {\n          res(r);\n          resolve(r);\n        },\n        (e) => {\n          log.error(\"Error parsing\", e);\n          mermaid.parseError?.(e);\n          rej(e);\n          reject(e);\n        }\n      );\n    }), \"performCall\");\n    executionQueue.push(performCall);\n    executeQueue().catch(reject);\n  });\n}, \"parse\");\nvar render2 = /* @__PURE__ */ __name((id27, text, container) => {\n  return new Promise((resolve, reject) => {\n    const performCall = /* @__PURE__ */ __name(() => new Promise((res, rej) => {\n      mermaidAPI.render(id27, text, container).then(\n        (r) => {\n          res(r);\n          resolve(r);\n        },\n        (e) => {\n          log.error(\"Error parsing\", e);\n          mermaid.parseError?.(e);\n          rej(e);\n          reject(e);\n        }\n      );\n    }), \"performCall\");\n    executionQueue.push(performCall);\n    executeQueue().catch(reject);\n  });\n}, \"render\");\nvar mermaid = {\n  startOnLoad: true,\n  mermaidAPI,\n  parse: parse3,\n  render: render2,\n  init,\n  run,\n  registerExternalDiagrams,\n  registerLayoutLoaders,\n  initialize: initialize2,\n  parseError: void 0,\n  contentLoaded,\n  setParseErrorHandler,\n  detectType,\n  registerIconPacks\n};\nvar mermaid_default = mermaid;\nexport {\n  mermaid_default as default\n};\n/*! Check if previously processed */\n/*!\n * Wait for document loaded before starting the execution\n */\n",
      "start": 1743409709056,
      "end": 1743409709056,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1743409709056,
      "end": 1743409709056,
      "order": "normal"
    }
  ]
}
