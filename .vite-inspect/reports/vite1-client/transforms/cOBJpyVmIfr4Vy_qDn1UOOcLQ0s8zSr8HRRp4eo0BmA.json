{
  "resolvedId": "/Users/stevenhill/gce_git_tutorial/node_modules/unhead/dist/shared/unhead.DeCxexjU.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { d as defineHeadPlugin } from './unhead.CApf5sj3.mjs';\nimport { s as sortTags } from './unhead.DZbvapt-.mjs';\nimport { p as processTemplateParams } from './unhead.C13swrCa.mjs';\n\nconst formatKey = (k) => !k.includes(\":key\") ? k.split(\":\").join(\":key:\") : k;\nconst AliasSortingPlugin = defineHeadPlugin({\n  key: \"aliasSorting\",\n  hooks: {\n    \"tags:resolve\": (ctx) => {\n      let m = false;\n      for (const t of ctx.tags) {\n        const p = t.tagPriority;\n        if (!p)\n          continue;\n        const s = String(p);\n        if (s.startsWith(\"before:\")) {\n          const k = formatKey(s.slice(7));\n          const l = ctx.tagMap.get(k);\n          if (l) {\n            if (typeof l.tagPriority === \"number\")\n              t.tagPriority = l.tagPriority;\n            t._p = l._p - 1;\n            m = true;\n          }\n        } else if (s.startsWith(\"after:\")) {\n          const k = formatKey(s.slice(6));\n          const l = ctx.tagMap.get(k);\n          if (l) {\n            if (typeof l.tagPriority === \"number\")\n              t.tagPriority = l.tagPriority;\n            t._p = l._p + 1;\n            m = true;\n          }\n        }\n      }\n      if (m)\n        ctx.tags = ctx.tags.sort(sortTags);\n    }\n  }\n});\n\nconst DeprecationsPlugin = /* @__PURE__ */ defineHeadPlugin({\n  key: \"deprecations\",\n  hooks: {\n    \"entries:normalize\": ({ tags }) => {\n      for (const tag of tags) {\n        if (tag.props.children) {\n          tag.innerHTML = tag.props.children;\n          delete tag.props.children;\n        }\n        if (tag.props.hid) {\n          tag.key = tag.props.hid;\n          delete tag.props.hid;\n        }\n        if (tag.props.vmid) {\n          tag.key = tag.props.vmid;\n          delete tag.props.vmid;\n        }\n        if (tag.props.body) {\n          tag.tagPosition = \"bodyClose\";\n          delete tag.props.body;\n        }\n      }\n    }\n  }\n});\n\nasync function walkPromises(v) {\n  const type = typeof v;\n  if (type === \"function\") {\n    return v;\n  }\n  if (v instanceof Promise) {\n    return await v;\n  }\n  if (Array.isArray(v)) {\n    return await Promise.all(v.map((r) => walkPromises(r)));\n  }\n  if (v?.constructor === Object) {\n    const next = {};\n    for (const key of Object.keys(v)) {\n      next[key] = await walkPromises(v[key]);\n    }\n    return next;\n  }\n  return v;\n}\nconst PromisesPlugin = /* @__PURE__ */ defineHeadPlugin({\n  key: \"promises\",\n  hooks: {\n    \"entries:resolve\": async (ctx) => {\n      const promises = [];\n      for (const k in ctx.entries) {\n        if (!ctx.entries[k]._promisesProcessed) {\n          promises.push(\n            walkPromises(ctx.entries[k].input).then((val) => {\n              ctx.entries[k].input = val;\n              ctx.entries[k]._promisesProcessed = true;\n            })\n          );\n        }\n      }\n      await Promise.all(promises);\n    }\n  }\n});\n\nconst SupportedAttrs = {\n  meta: \"content\",\n  link: \"href\",\n  htmlAttrs: \"lang\"\n};\nconst contentAttrs = [\"innerHTML\", \"textContent\"];\nconst TemplateParamsPlugin = /* @__PURE__ */ defineHeadPlugin((head) => {\n  return {\n    key: \"template-params\",\n    hooks: {\n      \"entries:normalize\": (ctx) => {\n        const params = ctx.tags.filter((t) => t.tag === \"templateParams\" && t.mode === \"server\")?.[0]?.props || {};\n        if (Object.keys(params).length) {\n          head._ssrPayload = {\n            templateParams: {\n              ...head._ssrPayload?.templateParams || {},\n              ...params\n            }\n          };\n        }\n      },\n      \"tags:resolve\": ({ tagMap, tags }) => {\n        const params = tagMap.get(\"templateParams\")?.props || {};\n        const sep = params.separator || \"|\";\n        delete params.separator;\n        params.pageTitle = processTemplateParams(\n          // find templateParams\n          params.pageTitle || head._title || \"\",\n          params,\n          sep\n        );\n        for (const tag of tags) {\n          if (tag.processTemplateParams === false) {\n            continue;\n          }\n          const v = SupportedAttrs[tag.tag];\n          if (v && typeof tag.props[v] === \"string\") {\n            tag.props[v] = processTemplateParams(tag.props[v], params, sep);\n          } else if (tag.processTemplateParams || tag.tag === \"titleTemplate\" || tag.tag === \"title\") {\n            for (const p of contentAttrs) {\n              if (typeof tag[p] === \"string\")\n                tag[p] = processTemplateParams(tag[p], params, sep, tag.tag === \"script\" && tag.props.type.endsWith(\"json\"));\n            }\n          }\n        }\n        head._templateParams = params;\n        head._separator = sep;\n      },\n      \"tags:afterResolve\": ({ tagMap }) => {\n        const title = tagMap.get(\"title\");\n        if (title?.textContent && title.processTemplateParams !== false) {\n          title.textContent = processTemplateParams(title.textContent, head._templateParams, head._separator);\n        }\n      }\n    }\n  };\n});\n\nexport { AliasSortingPlugin as A, DeprecationsPlugin as D, PromisesPlugin as P, TemplateParamsPlugin as T };\n",
      "start": 1743409708441,
      "end": 1743409708452,
      "sourcemaps": null
    },
    {
      "name": "unplugin-vue-markdown",
      "start": 1743409708452,
      "end": 1743409708452,
      "order": "pre"
    },
    {
      "name": "slidev:flags",
      "start": 1743409708452,
      "end": 1743409708452,
      "order": "pre"
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1743409708452,
      "end": 1743409708452,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "slidev:layout-wrapper",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "slidev:context-injection",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "slidev:hmr-patch",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "post"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1743409708453,
      "end": 1743409708453,
      "order": "normal"
    }
  ]
}
