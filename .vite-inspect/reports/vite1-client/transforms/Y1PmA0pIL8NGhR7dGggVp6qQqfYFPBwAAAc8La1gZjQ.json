{
  "resolvedId": "/Users/stevenhill/gce_git_tutorial/node_modules/yaml/browser/dist/schema/yaml-1.1/int.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n",
      "start": 1743409708665,
      "end": 1743409708669,
      "sourcemaps": null
    },
    {
      "name": "unplugin-vue-markdown",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "pre"
    },
    {
      "name": "slidev:flags",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "pre"
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "slidev:layout-wrapper",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "slidev:context-injection",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "slidev:hmr-patch",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "post"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1743409708669,
      "end": 1743409708669,
      "order": "normal"
    }
  ]
}
