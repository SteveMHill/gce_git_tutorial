{
  "resolvedId": "/Users/stevenhill/gce_git_tutorial/node_modules/@slidev/client/internals/DragControl.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = [\"data-drag-id\"]\n\nimport type { Pausable } from '@vueuse/core'\nimport type { DragElementState } from '../composables/useDragElements'\nimport { clamp } from '@antfu/utils'\nimport { useIntervalFn } from '@vueuse/core'\nimport { computed, inject, ref, watchEffect } from 'vue'\nimport { useSlideBounds } from '../composables/useSlideBounds'\nimport { injectionSlideScale } from '../constants'\nimport { slideHeight, slideWidth } from '../env'\nimport { magicKeys } from '../state'\n\nconst ctrlSize = 10\nconst minRemain = 10\n\nconst ctrlClasses = `absolute border border-gray bg-gray dark:border-gray-500 dark:bg-gray-800 bg-opacity-30 `\n\nconst moveInterval = 20\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'DragControl',\n  props: {\n    data: {}\n  },\n  setup(__props: any) {\n\n\nconst { dragId, zoom, autoHeight, x0, y0, width, height, rotate, isArrow } = __props.data\n\nconst slideScale = inject(injectionSlideScale, ref(1))\nconst scale = computed(() => slideScale.value * zoom.value)\nconst { left: slideLeft, top: slideTop } = useSlideBounds()\n\nconst minSize = isArrow ? Number.NEGATIVE_INFINITY : 40\nconst rotateRad = computed(() => rotate.value * Math.PI / 180)\nconst rotateSin = computed(() => Math.sin(rotateRad.value))\nconst rotateCos = computed(() => Math.cos(rotateRad.value))\n\nconst boundingWidth = computed(() => width.value * rotateCos.value + height.value * rotateSin.value)\nconst boundingHeight = computed(() => width.value * rotateSin.value + height.value * rotateCos.value)\n\nconst boundingLeft = computed(() => x0.value - boundingWidth.value / 2)\nconst boundingTop = computed(() => y0.value - boundingHeight.value / 2)\nconst boundingRight = computed(() => x0.value + boundingWidth.value / 2)\nconst boundingBottom = computed(() => y0.value + boundingHeight.value / 2)\n\nconst arrowRevX = computed(() => isArrow && width.value < 0)\nconst arrowRevY = computed(() => isArrow && height.value < 0)\n\nlet currentDrag: {\n  x0: number\n  y0: number\n  width: number\n  height: number\n  rotate: number\n  dx0: number\n  dy0: number\n  ltx: number\n  lty: number\n  rtx: number\n  rty: number\n  lbx: number\n  lby: number\n  rbx: number\n  rby: number\n} | null = null\n\nfunction onPointerdown(ev: PointerEvent) {\n  if (ev.buttons !== 1)\n    return\n\n  ev.preventDefault()\n  ev.stopPropagation()\n  const el = ev.target as HTMLElement\n  const elBounds = el.getBoundingClientRect()\n\n  const cross1x = width.value * rotateCos.value - height.value * rotateSin.value\n  const cross1y = width.value * rotateSin.value + height.value * rotateCos.value\n  const cross2x = width.value * rotateCos.value + height.value * rotateSin.value\n  const cross2y = -width.value * rotateSin.value + height.value * rotateCos.value\n\n  currentDrag = {\n    x0: x0.value,\n    y0: y0.value,\n    width: width.value,\n    height: height.value,\n    rotate: rotate.value,\n    dx0: ev.clientX - (elBounds.left + elBounds.right) / 2,\n    dy0: ev.clientY - (elBounds.top + elBounds.bottom) / 2,\n    ltx: x0.value - cross1x / 2,\n    lty: y0.value - cross1y / 2,\n    rtx: x0.value + cross2x / 2,\n    rty: y0.value - cross2y / 2,\n    lbx: x0.value - cross2x / 2,\n    lby: y0.value + cross2y / 2,\n    rbx: x0.value + cross1x / 2,\n    rby: y0.value + cross1y / 2,\n  };\n\n  (ev.currentTarget as HTMLElement).setPointerCapture(ev.pointerId)\n}\n\nfunction onPointermove(ev: PointerEvent) {\n  if (!currentDrag || ev.buttons !== 1)\n    return\n\n  ev.preventDefault()\n  ev.stopPropagation()\n\n  const x = (ev.clientX - slideLeft.value - currentDrag.dx0) / scale.value\n  const y = (ev.clientY - slideTop.value - currentDrag.dy0) / scale.value\n\n  x0.value = clamp(x, -boundingWidth.value / 2 + minRemain, slideWidth.value + boundingWidth.value / 2 - minRemain)\n  y0.value = clamp(y, -boundingHeight.value / 2 + minRemain, slideHeight.value + boundingHeight.value / 2 - minRemain)\n}\n\nfunction onPointerup(ev: PointerEvent) {\n  if (!currentDrag)\n    return\n\n  ev.preventDefault()\n  ev.stopPropagation()\n\n  currentDrag = null\n}\n\nfunction getCornerProps(isLeft: boolean, isTop: boolean) {\n  return {\n    onPointerdown,\n    onPointermove: (ev: PointerEvent) => {\n      if (!currentDrag || ev.buttons !== 1)\n        return\n\n      ev.preventDefault()\n      ev.stopPropagation()\n\n      let x = (ev.clientX - slideLeft.value) / scale.value\n      let y = (ev.clientY - slideTop.value) / scale.value\n\n      const { ltx, lty, rtx, rty, lbx, lby, rbx, rby } = currentDrag\n\n      const ratio = currentDrag.width / currentDrag.height\n      const wMin = Math.max(minSize, minSize * ratio)\n      function getSize(w1: number, h1: number) {\n        if (ev.shiftKey) {\n          const w = Math.max(w1, h1 * ratio, wMin)\n          const h = w / ratio\n          return { w, h }\n        }\n        else {\n          return { w: Math.max(w1, minSize), h: Math.max(h1, minSize) }\n        }\n      }\n\n      if (isLeft) {\n        if (isTop) {\n          const w1 = (rbx - x) * rotateCos.value + (rby - y) * rotateSin.value\n          const h1 = -(rbx - x) * rotateSin.value + (rby - y) * rotateCos.value\n          const { w, h } = getSize(w1, h1)\n          x = rbx - w * rotateCos.value + h * rotateSin.value\n          y = rby - w * rotateSin.value - h * rotateCos.value\n        }\n        else {\n          const w1 = (rtx - x) * rotateCos.value - (y - rty) * rotateSin.value\n          const h1 = (rtx - x) * rotateSin.value + (y - rty) * rotateCos.value\n          const { w, h } = getSize(w1, h1)\n          x = rtx - w * rotateCos.value - h * rotateSin.value\n          y = rty - w * rotateSin.value + h * rotateCos.value\n        }\n      }\n      else {\n        if (isTop) {\n          const w1 = (x - lbx) * rotateCos.value - (lby - y) * rotateSin.value\n          const h1 = (x - lbx) * rotateSin.value + (lby - y) * rotateCos.value\n          const { w, h } = getSize(w1, h1)\n          x = lbx + w * rotateCos.value + h * rotateSin.value\n          y = lby + w * rotateSin.value - h * rotateCos.value\n        }\n        else {\n          const w1 = (x - ltx) * rotateCos.value + (y - lty) * rotateSin.value\n          const h1 = -(x - ltx) * rotateSin.value + (y - lty) * rotateCos.value\n          const { w, h } = getSize(w1, h1)\n          x = ltx + w * rotateCos.value - h * rotateSin.value\n          y = lty + w * rotateSin.value + h * rotateCos.value\n        }\n      }\n\n      if (isLeft) {\n        if (isTop) {\n          x0.value = (x + rbx) / 2\n          y0.value = (y + rby) / 2\n          width.value = (rbx - x) * rotateCos.value + (rby - y) * rotateSin.value\n          height.value = -(rbx - x) * rotateSin.value + (rby - y) * rotateCos.value\n        }\n        else {\n          x0.value = (x + rtx) / 2\n          y0.value = (y + rty) / 2\n          width.value = (rtx - x) * rotateCos.value - (y - rty) * rotateSin.value\n          height.value = (rtx - x) * rotateSin.value + (y - rty) * rotateCos.value\n        }\n      }\n      else {\n        if (isTop) {\n          x0.value = (x + lbx) / 2\n          y0.value = (y + lby) / 2\n          width.value = (x - lbx) * rotateCos.value - (lby - y) * rotateSin.value\n          height.value = (x - lbx) * rotateSin.value + (lby - y) * rotateCos.value\n        }\n        else {\n          x0.value = (x + ltx) / 2\n          y0.value = (y + lty) / 2\n          width.value = (x - ltx) * rotateCos.value + (y - lty) * rotateSin.value\n          height.value = -(x - ltx) * rotateSin.value + (y - lty) * rotateCos.value\n        }\n      }\n    },\n    onPointerup,\n    style: {\n      width: `${ctrlSize}px`,\n      height: `${ctrlSize}px`,\n      margin: `-${ctrlSize / 2}px`,\n      left: isLeft !== arrowRevX.value ? '0' : undefined,\n      right: isLeft !== arrowRevX.value ? undefined : '0',\n      top: isTop !== arrowRevY.value ? '0' : undefined,\n      bottom: isTop !== arrowRevY.value ? undefined : '0',\n      cursor: isArrow ? 'move' : +isLeft + +isTop === 1 ? 'nesw-resize' : 'nwse-resize',\n      borderRadius: isArrow ? '50%' : undefined,\n    },\n    class: ctrlClasses,\n  }\n}\n\nfunction getBorderProps(dir: 'l' | 'r' | 't' | 'b') {\n  return {\n    onPointerdown,\n    onPointermove: (ev: PointerEvent) => {\n      if (!currentDrag || ev.buttons !== 1)\n        return\n\n      ev.preventDefault()\n      ev.stopPropagation()\n\n      const x = (ev.clientX - slideLeft.value) / scale.value\n      const y = (ev.clientY - slideTop.value) / scale.value\n\n      const { ltx, lty, rtx, rty, lbx, lby, rbx, rby } = currentDrag\n\n      if (dir === 'l') {\n        const rx = (rtx + rbx) / 2\n        const ry = (rty + rby) / 2\n        width.value = Math.max((rx - x) * rotateCos.value + (ry - y) * rotateSin.value, minSize)\n        x0.value = rx - width.value * rotateCos.value / 2\n        y0.value = ry - width.value * rotateSin.value / 2\n      }\n      else if (dir === 'r') {\n        const lx = (ltx + lbx) / 2\n        const ly = (lty + lby) / 2\n        width.value = Math.max((x - lx) * rotateCos.value + (y - ly) * rotateSin.value, minSize)\n        x0.value = lx + width.value * rotateCos.value / 2\n        y0.value = ly + width.value * rotateSin.value / 2\n      }\n      else if (dir === 't') {\n        const bx = (lbx + rbx) / 2\n        const by = (lby + rby) / 2\n        height.value = Math.max((by - y) * rotateCos.value - (bx - x) * rotateSin.value, minSize)\n        x0.value = bx + height.value * rotateSin.value / 2\n        y0.value = by - height.value * rotateCos.value / 2\n      }\n      else if (dir === 'b') {\n        const tx = (ltx + rtx) / 2\n        const ty = (lty + rty) / 2\n        height.value = Math.max((y - ty) * rotateCos.value - (x - tx) * rotateSin.value, minSize)\n        x0.value = tx - height.value * rotateSin.value / 2\n        y0.value = ty + height.value * rotateCos.value / 2\n      }\n    },\n    onPointerup,\n    style: {\n      width: `${ctrlSize}px`,\n      height: `${ctrlSize}px`,\n      margin: `-${ctrlSize / 2}px`,\n      left: dir === 'l' ? '0' : dir === 'r' ? `100%` : `50%`,\n      top: dir === 't' ? '0' : dir === 'b' ? `100%` : `50%`,\n      cursor: 'lr'.includes(dir) ? 'ew-resize' : 'ns-resize',\n      borderRadius: '50%',\n    },\n    class: ctrlClasses,\n  }\n}\n\nfunction getRotateProps() {\n  return {\n    onPointerdown,\n    onPointermove: (ev: PointerEvent) => {\n      if (!currentDrag || ev.buttons !== 1)\n        return\n\n      ev.preventDefault()\n      ev.stopPropagation()\n\n      const x = (ev.clientX - slideLeft.value - currentDrag.dx0) / scale.value - ctrlSize / 4\n      const y = (ev.clientY - slideTop.value - currentDrag.dy0) / scale.value - ctrlSize / 4\n\n      let angle = Math.atan2(y - y0.value, x - x0.value) * 180 / Math.PI + 90\n\n      const commonAngles = [0, 90, 180, 270, 360]\n      for (const a of commonAngles) {\n        if (Math.abs(angle - a) < 5) {\n          angle = a % 360\n          break\n        }\n      }\n\n      rotate.value = angle\n    },\n    onPointerup,\n    style: {\n      width: `${ctrlSize}px`,\n      height: `${ctrlSize}px`,\n      margin: `-${ctrlSize / 2}px`,\n      left: '50%',\n      top: '-20px',\n      cursor: 'grab',\n      borderRadius: '50%',\n    },\n    class: ctrlClasses,\n  }\n}\n\nconst intervalFnOptions = {\n  immediate: false,\n  immediateCallback: false,\n}\nconst moveLeft = useIntervalFn(() => {\n  if (boundingRight.value <= minRemain)\n    return\n  x0.value--\n}, moveInterval, intervalFnOptions)\nconst moveRight = useIntervalFn(() => {\n  if (boundingLeft.value >= slideWidth.value - minRemain)\n    return\n  x0.value++\n}, moveInterval, intervalFnOptions)\nconst moveUp = useIntervalFn(() => {\n  if (boundingBottom.value <= minRemain)\n    return\n  y0.value--\n}, moveInterval, intervalFnOptions)\nconst moveDown = useIntervalFn(() => {\n  if (boundingTop.value >= slideHeight.value - minRemain)\n    return\n  y0.value++\n}, moveInterval, intervalFnOptions)\n\nwatchEffect(() => {\n  function shortcut(key: string, fn: Pausable) {\n    if (magicKeys[key].value)\n      fn.resume()\n    else fn.pause()\n  }\n  shortcut('left', moveLeft)\n  shortcut('right', moveRight)\n  shortcut('up', moveUp)\n  shortcut('down', moveDown)\n})\n\nreturn (_ctx: any,_cache: any) => {\n  return (Number.isFinite(_unref(x0)))\n    ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        id: \"drag-control-container\",\n        \"data-drag-id\": _unref(dragId),\n        style: _normalizeStyle({\n      position: 'absolute',\n      zIndex: 100,\n      left: `${_unref(zoom) * (_unref(x0) - Math.abs(_unref(width)) / 2)}px`,\n      top: `${_unref(zoom) * (_unref(y0) - Math.abs(_unref(height)) / 2)}px`,\n      width: `${_unref(zoom) * Math.abs(_unref(width))}px`,\n      height: `${_unref(zoom) * Math.abs(_unref(height))}px`,\n      transformOrigin: 'center center',\n      transform: `rotate(${_unref(rotate)}deg)`,\n    }),\n        onPointerdown: onPointerdown,\n        onPointermove: onPointermove,\n        onPointerup: onPointerup\n      }, [\n        _createElementVNode(\"div\", {\n          class: _normalizeClass([\"absolute inset-0 z-nav dark:b-gray-400\", _unref(isArrow) ? '' : 'b b-dark'])\n        }, [\n          (!_unref(autoHeight))\n            ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getCornerProps(true, true))), null, 16 /* FULL_PROPS */),\n                _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getCornerProps(false, false))), null, 16 /* FULL_PROPS */),\n                (!_unref(isArrow))\n                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                      _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getCornerProps(true, false))), null, 16 /* FULL_PROPS */),\n                      _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getCornerProps(false, true))), null, 16 /* FULL_PROPS */)\n                    ], 64 /* STABLE_FRAGMENT */))\n                  : _createCommentVNode(\"v-if\", true)\n              ], 64 /* STABLE_FRAGMENT */))\n            : _createCommentVNode(\"v-if\", true),\n          (!_unref(isArrow))\n            ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getBorderProps('l'))), null, 16 /* FULL_PROPS */),\n                _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getBorderProps('r'))), null, 16 /* FULL_PROPS */),\n                (!_unref(autoHeight))\n                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                      _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getBorderProps('t'))), null, 16 /* FULL_PROPS */),\n                      _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getBorderProps('b'))), null, 16 /* FULL_PROPS */)\n                    ], 64 /* STABLE_FRAGMENT */))\n                  : _createCommentVNode(\"v-if\", true),\n                _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getRotateProps())), null, 16 /* FULL_PROPS */),\n                _createElementVNode(\"div\", {\n                  class: \"absolute -top-15px w-0 b b-dashed b-dark dark:b-gray-400\",\n                  style: _normalizeStyle({\n            left: 'calc(50% - 1px)',\n            height: _unref(autoHeight) ? '14px' : '10px',\n          })\n                }, null, 4 /* STYLE */)\n              ], 64 /* STABLE_FRAGMENT */))\n            : _createCommentVNode(\"v-if\", true)\n        ], 2 /* CLASS */)\n      ], 44 /* STYLE, PROPS, NEED_HYDRATION */, _hoisted_1))\n    : _createCommentVNode(\"v-if\", true)\n}\n}\n\n})",
      "start": 1743409709042,
      "end": 1743409709042
    },
    {
      "name": "unplugin-vue-markdown",
      "start": 1743409709042,
      "end": 1743409709042,
      "order": "pre"
    },
    {
      "name": "slidev:flags",
      "start": 1743409709042,
      "end": 1743409709042,
      "order": "pre"
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1743409709042,
      "end": 1743409709042,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1743409709042,
      "end": 1743409709043,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1743409709043,
      "end": 1743409709043,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = [\"data-drag-id\"];\nimport { clamp } from \"@antfu/utils\";\nimport { useIntervalFn } from \"@vueuse/core\";\nimport { computed, inject, ref, watchEffect } from \"vue\";\nimport { useSlideBounds } from \"../composables/useSlideBounds\";\nimport { injectionSlideScale } from \"../constants\";\nimport { slideHeight, slideWidth } from \"../env\";\nimport { magicKeys } from \"../state\";\nconst ctrlSize = 10;\nconst minRemain = 10;\nconst ctrlClasses = `absolute border border-gray bg-gray dark:border-gray-500 dark:bg-gray-800 bg-opacity-30 `;\nconst moveInterval = 20;\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"DragControl\",\n  props: {\n    data: {}\n  },\n  setup(__props) {\n    const { dragId, zoom, autoHeight, x0, y0, width, height, rotate, isArrow } = __props.data;\n    const slideScale = inject(injectionSlideScale, ref(1));\n    const scale = computed(() => slideScale.value * zoom.value);\n    const { left: slideLeft, top: slideTop } = useSlideBounds();\n    const minSize = isArrow ? Number.NEGATIVE_INFINITY : 40;\n    const rotateRad = computed(() => rotate.value * Math.PI / 180);\n    const rotateSin = computed(() => Math.sin(rotateRad.value));\n    const rotateCos = computed(() => Math.cos(rotateRad.value));\n    const boundingWidth = computed(() => width.value * rotateCos.value + height.value * rotateSin.value);\n    const boundingHeight = computed(() => width.value * rotateSin.value + height.value * rotateCos.value);\n    const boundingLeft = computed(() => x0.value - boundingWidth.value / 2);\n    const boundingTop = computed(() => y0.value - boundingHeight.value / 2);\n    const boundingRight = computed(() => x0.value + boundingWidth.value / 2);\n    const boundingBottom = computed(() => y0.value + boundingHeight.value / 2);\n    const arrowRevX = computed(() => isArrow && width.value < 0);\n    const arrowRevY = computed(() => isArrow && height.value < 0);\n    let currentDrag = null;\n    function onPointerdown(ev) {\n      if (ev.buttons !== 1)\n        return;\n      ev.preventDefault();\n      ev.stopPropagation();\n      const el = ev.target;\n      const elBounds = el.getBoundingClientRect();\n      const cross1x = width.value * rotateCos.value - height.value * rotateSin.value;\n      const cross1y = width.value * rotateSin.value + height.value * rotateCos.value;\n      const cross2x = width.value * rotateCos.value + height.value * rotateSin.value;\n      const cross2y = -width.value * rotateSin.value + height.value * rotateCos.value;\n      currentDrag = {\n        x0: x0.value,\n        y0: y0.value,\n        width: width.value,\n        height: height.value,\n        rotate: rotate.value,\n        dx0: ev.clientX - (elBounds.left + elBounds.right) / 2,\n        dy0: ev.clientY - (elBounds.top + elBounds.bottom) / 2,\n        ltx: x0.value - cross1x / 2,\n        lty: y0.value - cross1y / 2,\n        rtx: x0.value + cross2x / 2,\n        rty: y0.value - cross2y / 2,\n        lbx: x0.value - cross2x / 2,\n        lby: y0.value + cross2y / 2,\n        rbx: x0.value + cross1x / 2,\n        rby: y0.value + cross1y / 2\n      };\n      ev.currentTarget.setPointerCapture(ev.pointerId);\n    }\n    function onPointermove(ev) {\n      if (!currentDrag || ev.buttons !== 1)\n        return;\n      ev.preventDefault();\n      ev.stopPropagation();\n      const x = (ev.clientX - slideLeft.value - currentDrag.dx0) / scale.value;\n      const y = (ev.clientY - slideTop.value - currentDrag.dy0) / scale.value;\n      x0.value = clamp(x, -boundingWidth.value / 2 + minRemain, slideWidth.value + boundingWidth.value / 2 - minRemain);\n      y0.value = clamp(y, -boundingHeight.value / 2 + minRemain, slideHeight.value + boundingHeight.value / 2 - minRemain);\n    }\n    function onPointerup(ev) {\n      if (!currentDrag)\n        return;\n      ev.preventDefault();\n      ev.stopPropagation();\n      currentDrag = null;\n    }\n    function getCornerProps(isLeft, isTop) {\n      return {\n        onPointerdown,\n        onPointermove: (ev) => {\n          if (!currentDrag || ev.buttons !== 1)\n            return;\n          ev.preventDefault();\n          ev.stopPropagation();\n          let x = (ev.clientX - slideLeft.value) / scale.value;\n          let y = (ev.clientY - slideTop.value) / scale.value;\n          const { ltx, lty, rtx, rty, lbx, lby, rbx, rby } = currentDrag;\n          const ratio = currentDrag.width / currentDrag.height;\n          const wMin = Math.max(minSize, minSize * ratio);\n          function getSize(w1, h1) {\n            if (ev.shiftKey) {\n              const w = Math.max(w1, h1 * ratio, wMin);\n              const h = w / ratio;\n              return { w, h };\n            } else {\n              return { w: Math.max(w1, minSize), h: Math.max(h1, minSize) };\n            }\n          }\n          if (isLeft) {\n            if (isTop) {\n              const w1 = (rbx - x) * rotateCos.value + (rby - y) * rotateSin.value;\n              const h1 = -(rbx - x) * rotateSin.value + (rby - y) * rotateCos.value;\n              const { w, h } = getSize(w1, h1);\n              x = rbx - w * rotateCos.value + h * rotateSin.value;\n              y = rby - w * rotateSin.value - h * rotateCos.value;\n            } else {\n              const w1 = (rtx - x) * rotateCos.value - (y - rty) * rotateSin.value;\n              const h1 = (rtx - x) * rotateSin.value + (y - rty) * rotateCos.value;\n              const { w, h } = getSize(w1, h1);\n              x = rtx - w * rotateCos.value - h * rotateSin.value;\n              y = rty - w * rotateSin.value + h * rotateCos.value;\n            }\n          } else {\n            if (isTop) {\n              const w1 = (x - lbx) * rotateCos.value - (lby - y) * rotateSin.value;\n              const h1 = (x - lbx) * rotateSin.value + (lby - y) * rotateCos.value;\n              const { w, h } = getSize(w1, h1);\n              x = lbx + w * rotateCos.value + h * rotateSin.value;\n              y = lby + w * rotateSin.value - h * rotateCos.value;\n            } else {\n              const w1 = (x - ltx) * rotateCos.value + (y - lty) * rotateSin.value;\n              const h1 = -(x - ltx) * rotateSin.value + (y - lty) * rotateCos.value;\n              const { w, h } = getSize(w1, h1);\n              x = ltx + w * rotateCos.value - h * rotateSin.value;\n              y = lty + w * rotateSin.value + h * rotateCos.value;\n            }\n          }\n          if (isLeft) {\n            if (isTop) {\n              x0.value = (x + rbx) / 2;\n              y0.value = (y + rby) / 2;\n              width.value = (rbx - x) * rotateCos.value + (rby - y) * rotateSin.value;\n              height.value = -(rbx - x) * rotateSin.value + (rby - y) * rotateCos.value;\n            } else {\n              x0.value = (x + rtx) / 2;\n              y0.value = (y + rty) / 2;\n              width.value = (rtx - x) * rotateCos.value - (y - rty) * rotateSin.value;\n              height.value = (rtx - x) * rotateSin.value + (y - rty) * rotateCos.value;\n            }\n          } else {\n            if (isTop) {\n              x0.value = (x + lbx) / 2;\n              y0.value = (y + lby) / 2;\n              width.value = (x - lbx) * rotateCos.value - (lby - y) * rotateSin.value;\n              height.value = (x - lbx) * rotateSin.value + (lby - y) * rotateCos.value;\n            } else {\n              x0.value = (x + ltx) / 2;\n              y0.value = (y + lty) / 2;\n              width.value = (x - ltx) * rotateCos.value + (y - lty) * rotateSin.value;\n              height.value = -(x - ltx) * rotateSin.value + (y - lty) * rotateCos.value;\n            }\n          }\n        },\n        onPointerup,\n        style: {\n          width: `${ctrlSize}px`,\n          height: `${ctrlSize}px`,\n          margin: `-${ctrlSize / 2}px`,\n          left: isLeft !== arrowRevX.value ? \"0\" : void 0,\n          right: isLeft !== arrowRevX.value ? void 0 : \"0\",\n          top: isTop !== arrowRevY.value ? \"0\" : void 0,\n          bottom: isTop !== arrowRevY.value ? void 0 : \"0\",\n          cursor: isArrow ? \"move\" : +isLeft + +isTop === 1 ? \"nesw-resize\" : \"nwse-resize\",\n          borderRadius: isArrow ? \"50%\" : void 0\n        },\n        class: ctrlClasses\n      };\n    }\n    function getBorderProps(dir) {\n      return {\n        onPointerdown,\n        onPointermove: (ev) => {\n          if (!currentDrag || ev.buttons !== 1)\n            return;\n          ev.preventDefault();\n          ev.stopPropagation();\n          const x = (ev.clientX - slideLeft.value) / scale.value;\n          const y = (ev.clientY - slideTop.value) / scale.value;\n          const { ltx, lty, rtx, rty, lbx, lby, rbx, rby } = currentDrag;\n          if (dir === \"l\") {\n            const rx = (rtx + rbx) / 2;\n            const ry = (rty + rby) / 2;\n            width.value = Math.max((rx - x) * rotateCos.value + (ry - y) * rotateSin.value, minSize);\n            x0.value = rx - width.value * rotateCos.value / 2;\n            y0.value = ry - width.value * rotateSin.value / 2;\n          } else if (dir === \"r\") {\n            const lx = (ltx + lbx) / 2;\n            const ly = (lty + lby) / 2;\n            width.value = Math.max((x - lx) * rotateCos.value + (y - ly) * rotateSin.value, minSize);\n            x0.value = lx + width.value * rotateCos.value / 2;\n            y0.value = ly + width.value * rotateSin.value / 2;\n          } else if (dir === \"t\") {\n            const bx = (lbx + rbx) / 2;\n            const by = (lby + rby) / 2;\n            height.value = Math.max((by - y) * rotateCos.value - (bx - x) * rotateSin.value, minSize);\n            x0.value = bx + height.value * rotateSin.value / 2;\n            y0.value = by - height.value * rotateCos.value / 2;\n          } else if (dir === \"b\") {\n            const tx = (ltx + rtx) / 2;\n            const ty = (lty + rty) / 2;\n            height.value = Math.max((y - ty) * rotateCos.value - (x - tx) * rotateSin.value, minSize);\n            x0.value = tx - height.value * rotateSin.value / 2;\n            y0.value = ty + height.value * rotateCos.value / 2;\n          }\n        },\n        onPointerup,\n        style: {\n          width: `${ctrlSize}px`,\n          height: `${ctrlSize}px`,\n          margin: `-${ctrlSize / 2}px`,\n          left: dir === \"l\" ? \"0\" : dir === \"r\" ? `100%` : `50%`,\n          top: dir === \"t\" ? \"0\" : dir === \"b\" ? `100%` : `50%`,\n          cursor: \"lr\".includes(dir) ? \"ew-resize\" : \"ns-resize\",\n          borderRadius: \"50%\"\n        },\n        class: ctrlClasses\n      };\n    }\n    function getRotateProps() {\n      return {\n        onPointerdown,\n        onPointermove: (ev) => {\n          if (!currentDrag || ev.buttons !== 1)\n            return;\n          ev.preventDefault();\n          ev.stopPropagation();\n          const x = (ev.clientX - slideLeft.value - currentDrag.dx0) / scale.value - ctrlSize / 4;\n          const y = (ev.clientY - slideTop.value - currentDrag.dy0) / scale.value - ctrlSize / 4;\n          let angle = Math.atan2(y - y0.value, x - x0.value) * 180 / Math.PI + 90;\n          const commonAngles = [0, 90, 180, 270, 360];\n          for (const a of commonAngles) {\n            if (Math.abs(angle - a) < 5) {\n              angle = a % 360;\n              break;\n            }\n          }\n          rotate.value = angle;\n        },\n        onPointerup,\n        style: {\n          width: `${ctrlSize}px`,\n          height: `${ctrlSize}px`,\n          margin: `-${ctrlSize / 2}px`,\n          left: \"50%\",\n          top: \"-20px\",\n          cursor: \"grab\",\n          borderRadius: \"50%\"\n        },\n        class: ctrlClasses\n      };\n    }\n    const intervalFnOptions = {\n      immediate: false,\n      immediateCallback: false\n    };\n    const moveLeft = useIntervalFn(() => {\n      if (boundingRight.value <= minRemain)\n        return;\n      x0.value--;\n    }, moveInterval, intervalFnOptions);\n    const moveRight = useIntervalFn(() => {\n      if (boundingLeft.value >= slideWidth.value - minRemain)\n        return;\n      x0.value++;\n    }, moveInterval, intervalFnOptions);\n    const moveUp = useIntervalFn(() => {\n      if (boundingBottom.value <= minRemain)\n        return;\n      y0.value--;\n    }, moveInterval, intervalFnOptions);\n    const moveDown = useIntervalFn(() => {\n      if (boundingTop.value >= slideHeight.value - minRemain)\n        return;\n      y0.value++;\n    }, moveInterval, intervalFnOptions);\n    watchEffect(() => {\n      function shortcut(key, fn) {\n        if (magicKeys[key].value)\n          fn.resume();\n        else fn.pause();\n      }\n      shortcut(\"left\", moveLeft);\n      shortcut(\"right\", moveRight);\n      shortcut(\"up\", moveUp);\n      shortcut(\"down\", moveDown);\n    });\n    return (_ctx, _cache) => {\n      return Number.isFinite(_unref(x0)) ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        id: \"drag-control-container\",\n        \"data-drag-id\": _unref(dragId),\n        style: _normalizeStyle({\n          position: \"absolute\",\n          zIndex: 100,\n          left: `${_unref(zoom) * (_unref(x0) - Math.abs(_unref(width)) / 2)}px`,\n          top: `${_unref(zoom) * (_unref(y0) - Math.abs(_unref(height)) / 2)}px`,\n          width: `${_unref(zoom) * Math.abs(_unref(width))}px`,\n          height: `${_unref(zoom) * Math.abs(_unref(height))}px`,\n          transformOrigin: \"center center\",\n          transform: `rotate(${_unref(rotate)}deg)`\n        }),\n        onPointerdown,\n        onPointermove,\n        onPointerup\n      }, [\n        _createElementVNode(\n          \"div\",\n          {\n            class: _normalizeClass([\"absolute inset-0 z-nav dark:b-gray-400\", _unref(isArrow) ? \"\" : \"b b-dark\"])\n          },\n          [\n            !_unref(autoHeight) ? (_openBlock(), _createElementBlock(\n              _Fragment,\n              { key: 0 },\n              [\n                _createElementVNode(\n                  \"div\",\n                  _normalizeProps(_guardReactiveProps(getCornerProps(true, true))),\n                  null,\n                  16\n                  /* FULL_PROPS */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _normalizeProps(_guardReactiveProps(getCornerProps(false, false))),\n                  null,\n                  16\n                  /* FULL_PROPS */\n                ),\n                !_unref(isArrow) ? (_openBlock(), _createElementBlock(\n                  _Fragment,\n                  { key: 0 },\n                  [\n                    _createElementVNode(\n                      \"div\",\n                      _normalizeProps(_guardReactiveProps(getCornerProps(true, false))),\n                      null,\n                      16\n                      /* FULL_PROPS */\n                    ),\n                    _createElementVNode(\n                      \"div\",\n                      _normalizeProps(_guardReactiveProps(getCornerProps(false, true))),\n                      null,\n                      16\n                      /* FULL_PROPS */\n                    )\n                  ],\n                  64\n                  /* STABLE_FRAGMENT */\n                )) : _createCommentVNode(\"v-if\", true)\n              ],\n              64\n              /* STABLE_FRAGMENT */\n            )) : _createCommentVNode(\"v-if\", true),\n            !_unref(isArrow) ? (_openBlock(), _createElementBlock(\n              _Fragment,\n              { key: 1 },\n              [\n                _createElementVNode(\n                  \"div\",\n                  _normalizeProps(_guardReactiveProps(getBorderProps(\"l\"))),\n                  null,\n                  16\n                  /* FULL_PROPS */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _normalizeProps(_guardReactiveProps(getBorderProps(\"r\"))),\n                  null,\n                  16\n                  /* FULL_PROPS */\n                ),\n                !_unref(autoHeight) ? (_openBlock(), _createElementBlock(\n                  _Fragment,\n                  { key: 0 },\n                  [\n                    _createElementVNode(\n                      \"div\",\n                      _normalizeProps(_guardReactiveProps(getBorderProps(\"t\"))),\n                      null,\n                      16\n                      /* FULL_PROPS */\n                    ),\n                    _createElementVNode(\n                      \"div\",\n                      _normalizeProps(_guardReactiveProps(getBorderProps(\"b\"))),\n                      null,\n                      16\n                      /* FULL_PROPS */\n                    )\n                  ],\n                  64\n                  /* STABLE_FRAGMENT */\n                )) : _createCommentVNode(\"v-if\", true),\n                _createElementVNode(\n                  \"div\",\n                  _normalizeProps(_guardReactiveProps(getRotateProps())),\n                  null,\n                  16\n                  /* FULL_PROPS */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  {\n                    class: \"absolute -top-15px w-0 b b-dashed b-dark dark:b-gray-400\",\n                    style: _normalizeStyle({\n                      left: \"calc(50% - 1px)\",\n                      height: _unref(autoHeight) ? \"14px\" : \"10px\"\n                    })\n                  },\n                  null,\n                  4\n                  /* STYLE */\n                )\n              ],\n              64\n              /* STABLE_FRAGMENT */\n            )) : _createCommentVNode(\"v-if\", true)\n          ],\n          2\n          /* CLASS */\n        )\n      ], 44, _hoisted_1)) : _createCommentVNode(\"v-if\", true);\n    };\n  }\n});\n",
      "start": 1743409709043,
      "end": 1743409709234,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/stevenhill/gce_git_tutorial/node_modules/@slidev/client/internals/DragControl.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = [\"data-drag-id\"]\n\nimport type { Pausable } from '@vueuse/core'\nimport type { DragElementState } from '../composables/useDragElements'\nimport { clamp } from '@antfu/utils'\nimport { useIntervalFn } from '@vueuse/core'\nimport { computed, inject, ref, watchEffect } from 'vue'\nimport { useSlideBounds } from '../composables/useSlideBounds'\nimport { injectionSlideScale } from '../constants'\nimport { slideHeight, slideWidth } from '../env'\nimport { magicKeys } from '../state'\n\nconst ctrlSize = 10\nconst minRemain = 10\n\nconst ctrlClasses = `absolute border border-gray bg-gray dark:border-gray-500 dark:bg-gray-800 bg-opacity-30 `\n\nconst moveInterval = 20\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'DragControl',\n  props: {\n    data: {}\n  },\n  setup(__props: any) {\n\n\nconst { dragId, zoom, autoHeight, x0, y0, width, height, rotate, isArrow } = __props.data\n\nconst slideScale = inject(injectionSlideScale, ref(1))\nconst scale = computed(() => slideScale.value * zoom.value)\nconst { left: slideLeft, top: slideTop } = useSlideBounds()\n\nconst minSize = isArrow ? Number.NEGATIVE_INFINITY : 40\nconst rotateRad = computed(() => rotate.value * Math.PI / 180)\nconst rotateSin = computed(() => Math.sin(rotateRad.value))\nconst rotateCos = computed(() => Math.cos(rotateRad.value))\n\nconst boundingWidth = computed(() => width.value * rotateCos.value + height.value * rotateSin.value)\nconst boundingHeight = computed(() => width.value * rotateSin.value + height.value * rotateCos.value)\n\nconst boundingLeft = computed(() => x0.value - boundingWidth.value / 2)\nconst boundingTop = computed(() => y0.value - boundingHeight.value / 2)\nconst boundingRight = computed(() => x0.value + boundingWidth.value / 2)\nconst boundingBottom = computed(() => y0.value + boundingHeight.value / 2)\n\nconst arrowRevX = computed(() => isArrow && width.value < 0)\nconst arrowRevY = computed(() => isArrow && height.value < 0)\n\nlet currentDrag: {\n  x0: number\n  y0: number\n  width: number\n  height: number\n  rotate: number\n  dx0: number\n  dy0: number\n  ltx: number\n  lty: number\n  rtx: number\n  rty: number\n  lbx: number\n  lby: number\n  rbx: number\n  rby: number\n} | null = null\n\nfunction onPointerdown(ev: PointerEvent) {\n  if (ev.buttons !== 1)\n    return\n\n  ev.preventDefault()\n  ev.stopPropagation()\n  const el = ev.target as HTMLElement\n  const elBounds = el.getBoundingClientRect()\n\n  const cross1x = width.value * rotateCos.value - height.value * rotateSin.value\n  const cross1y = width.value * rotateSin.value + height.value * rotateCos.value\n  const cross2x = width.value * rotateCos.value + height.value * rotateSin.value\n  const cross2y = -width.value * rotateSin.value + height.value * rotateCos.value\n\n  currentDrag = {\n    x0: x0.value,\n    y0: y0.value,\n    width: width.value,\n    height: height.value,\n    rotate: rotate.value,\n    dx0: ev.clientX - (elBounds.left + elBounds.right) / 2,\n    dy0: ev.clientY - (elBounds.top + elBounds.bottom) / 2,\n    ltx: x0.value - cross1x / 2,\n    lty: y0.value - cross1y / 2,\n    rtx: x0.value + cross2x / 2,\n    rty: y0.value - cross2y / 2,\n    lbx: x0.value - cross2x / 2,\n    lby: y0.value + cross2y / 2,\n    rbx: x0.value + cross1x / 2,\n    rby: y0.value + cross1y / 2,\n  };\n\n  (ev.currentTarget as HTMLElement).setPointerCapture(ev.pointerId)\n}\n\nfunction onPointermove(ev: PointerEvent) {\n  if (!currentDrag || ev.buttons !== 1)\n    return\n\n  ev.preventDefault()\n  ev.stopPropagation()\n\n  const x = (ev.clientX - slideLeft.value - currentDrag.dx0) / scale.value\n  const y = (ev.clientY - slideTop.value - currentDrag.dy0) / scale.value\n\n  x0.value = clamp(x, -boundingWidth.value / 2 + minRemain, slideWidth.value + boundingWidth.value / 2 - minRemain)\n  y0.value = clamp(y, -boundingHeight.value / 2 + minRemain, slideHeight.value + boundingHeight.value / 2 - minRemain)\n}\n\nfunction onPointerup(ev: PointerEvent) {\n  if (!currentDrag)\n    return\n\n  ev.preventDefault()\n  ev.stopPropagation()\n\n  currentDrag = null\n}\n\nfunction getCornerProps(isLeft: boolean, isTop: boolean) {\n  return {\n    onPointerdown,\n    onPointermove: (ev: PointerEvent) => {\n      if (!currentDrag || ev.buttons !== 1)\n        return\n\n      ev.preventDefault()\n      ev.stopPropagation()\n\n      let x = (ev.clientX - slideLeft.value) / scale.value\n      let y = (ev.clientY - slideTop.value) / scale.value\n\n      const { ltx, lty, rtx, rty, lbx, lby, rbx, rby } = currentDrag\n\n      const ratio = currentDrag.width / currentDrag.height\n      const wMin = Math.max(minSize, minSize * ratio)\n      function getSize(w1: number, h1: number) {\n        if (ev.shiftKey) {\n          const w = Math.max(w1, h1 * ratio, wMin)\n          const h = w / ratio\n          return { w, h }\n        }\n        else {\n          return { w: Math.max(w1, minSize), h: Math.max(h1, minSize) }\n        }\n      }\n\n      if (isLeft) {\n        if (isTop) {\n          const w1 = (rbx - x) * rotateCos.value + (rby - y) * rotateSin.value\n          const h1 = -(rbx - x) * rotateSin.value + (rby - y) * rotateCos.value\n          const { w, h } = getSize(w1, h1)\n          x = rbx - w * rotateCos.value + h * rotateSin.value\n          y = rby - w * rotateSin.value - h * rotateCos.value\n        }\n        else {\n          const w1 = (rtx - x) * rotateCos.value - (y - rty) * rotateSin.value\n          const h1 = (rtx - x) * rotateSin.value + (y - rty) * rotateCos.value\n          const { w, h } = getSize(w1, h1)\n          x = rtx - w * rotateCos.value - h * rotateSin.value\n          y = rty - w * rotateSin.value + h * rotateCos.value\n        }\n      }\n      else {\n        if (isTop) {\n          const w1 = (x - lbx) * rotateCos.value - (lby - y) * rotateSin.value\n          const h1 = (x - lbx) * rotateSin.value + (lby - y) * rotateCos.value\n          const { w, h } = getSize(w1, h1)\n          x = lbx + w * rotateCos.value + h * rotateSin.value\n          y = lby + w * rotateSin.value - h * rotateCos.value\n        }\n        else {\n          const w1 = (x - ltx) * rotateCos.value + (y - lty) * rotateSin.value\n          const h1 = -(x - ltx) * rotateSin.value + (y - lty) * rotateCos.value\n          const { w, h } = getSize(w1, h1)\n          x = ltx + w * rotateCos.value - h * rotateSin.value\n          y = lty + w * rotateSin.value + h * rotateCos.value\n        }\n      }\n\n      if (isLeft) {\n        if (isTop) {\n          x0.value = (x + rbx) / 2\n          y0.value = (y + rby) / 2\n          width.value = (rbx - x) * rotateCos.value + (rby - y) * rotateSin.value\n          height.value = -(rbx - x) * rotateSin.value + (rby - y) * rotateCos.value\n        }\n        else {\n          x0.value = (x + rtx) / 2\n          y0.value = (y + rty) / 2\n          width.value = (rtx - x) * rotateCos.value - (y - rty) * rotateSin.value\n          height.value = (rtx - x) * rotateSin.value + (y - rty) * rotateCos.value\n        }\n      }\n      else {\n        if (isTop) {\n          x0.value = (x + lbx) / 2\n          y0.value = (y + lby) / 2\n          width.value = (x - lbx) * rotateCos.value - (lby - y) * rotateSin.value\n          height.value = (x - lbx) * rotateSin.value + (lby - y) * rotateCos.value\n        }\n        else {\n          x0.value = (x + ltx) / 2\n          y0.value = (y + lty) / 2\n          width.value = (x - ltx) * rotateCos.value + (y - lty) * rotateSin.value\n          height.value = -(x - ltx) * rotateSin.value + (y - lty) * rotateCos.value\n        }\n      }\n    },\n    onPointerup,\n    style: {\n      width: `${ctrlSize}px`,\n      height: `${ctrlSize}px`,\n      margin: `-${ctrlSize / 2}px`,\n      left: isLeft !== arrowRevX.value ? '0' : undefined,\n      right: isLeft !== arrowRevX.value ? undefined : '0',\n      top: isTop !== arrowRevY.value ? '0' : undefined,\n      bottom: isTop !== arrowRevY.value ? undefined : '0',\n      cursor: isArrow ? 'move' : +isLeft + +isTop === 1 ? 'nesw-resize' : 'nwse-resize',\n      borderRadius: isArrow ? '50%' : undefined,\n    },\n    class: ctrlClasses,\n  }\n}\n\nfunction getBorderProps(dir: 'l' | 'r' | 't' | 'b') {\n  return {\n    onPointerdown,\n    onPointermove: (ev: PointerEvent) => {\n      if (!currentDrag || ev.buttons !== 1)\n        return\n\n      ev.preventDefault()\n      ev.stopPropagation()\n\n      const x = (ev.clientX - slideLeft.value) / scale.value\n      const y = (ev.clientY - slideTop.value) / scale.value\n\n      const { ltx, lty, rtx, rty, lbx, lby, rbx, rby } = currentDrag\n\n      if (dir === 'l') {\n        const rx = (rtx + rbx) / 2\n        const ry = (rty + rby) / 2\n        width.value = Math.max((rx - x) * rotateCos.value + (ry - y) * rotateSin.value, minSize)\n        x0.value = rx - width.value * rotateCos.value / 2\n        y0.value = ry - width.value * rotateSin.value / 2\n      }\n      else if (dir === 'r') {\n        const lx = (ltx + lbx) / 2\n        const ly = (lty + lby) / 2\n        width.value = Math.max((x - lx) * rotateCos.value + (y - ly) * rotateSin.value, minSize)\n        x0.value = lx + width.value * rotateCos.value / 2\n        y0.value = ly + width.value * rotateSin.value / 2\n      }\n      else if (dir === 't') {\n        const bx = (lbx + rbx) / 2\n        const by = (lby + rby) / 2\n        height.value = Math.max((by - y) * rotateCos.value - (bx - x) * rotateSin.value, minSize)\n        x0.value = bx + height.value * rotateSin.value / 2\n        y0.value = by - height.value * rotateCos.value / 2\n      }\n      else if (dir === 'b') {\n        const tx = (ltx + rtx) / 2\n        const ty = (lty + rty) / 2\n        height.value = Math.max((y - ty) * rotateCos.value - (x - tx) * rotateSin.value, minSize)\n        x0.value = tx - height.value * rotateSin.value / 2\n        y0.value = ty + height.value * rotateCos.value / 2\n      }\n    },\n    onPointerup,\n    style: {\n      width: `${ctrlSize}px`,\n      height: `${ctrlSize}px`,\n      margin: `-${ctrlSize / 2}px`,\n      left: dir === 'l' ? '0' : dir === 'r' ? `100%` : `50%`,\n      top: dir === 't' ? '0' : dir === 'b' ? `100%` : `50%`,\n      cursor: 'lr'.includes(dir) ? 'ew-resize' : 'ns-resize',\n      borderRadius: '50%',\n    },\n    class: ctrlClasses,\n  }\n}\n\nfunction getRotateProps() {\n  return {\n    onPointerdown,\n    onPointermove: (ev: PointerEvent) => {\n      if (!currentDrag || ev.buttons !== 1)\n        return\n\n      ev.preventDefault()\n      ev.stopPropagation()\n\n      const x = (ev.clientX - slideLeft.value - currentDrag.dx0) / scale.value - ctrlSize / 4\n      const y = (ev.clientY - slideTop.value - currentDrag.dy0) / scale.value - ctrlSize / 4\n\n      let angle = Math.atan2(y - y0.value, x - x0.value) * 180 / Math.PI + 90\n\n      const commonAngles = [0, 90, 180, 270, 360]\n      for (const a of commonAngles) {\n        if (Math.abs(angle - a) < 5) {\n          angle = a % 360\n          break\n        }\n      }\n\n      rotate.value = angle\n    },\n    onPointerup,\n    style: {\n      width: `${ctrlSize}px`,\n      height: `${ctrlSize}px`,\n      margin: `-${ctrlSize / 2}px`,\n      left: '50%',\n      top: '-20px',\n      cursor: 'grab',\n      borderRadius: '50%',\n    },\n    class: ctrlClasses,\n  }\n}\n\nconst intervalFnOptions = {\n  immediate: false,\n  immediateCallback: false,\n}\nconst moveLeft = useIntervalFn(() => {\n  if (boundingRight.value <= minRemain)\n    return\n  x0.value--\n}, moveInterval, intervalFnOptions)\nconst moveRight = useIntervalFn(() => {\n  if (boundingLeft.value >= slideWidth.value - minRemain)\n    return\n  x0.value++\n}, moveInterval, intervalFnOptions)\nconst moveUp = useIntervalFn(() => {\n  if (boundingBottom.value <= minRemain)\n    return\n  y0.value--\n}, moveInterval, intervalFnOptions)\nconst moveDown = useIntervalFn(() => {\n  if (boundingTop.value >= slideHeight.value - minRemain)\n    return\n  y0.value++\n}, moveInterval, intervalFnOptions)\n\nwatchEffect(() => {\n  function shortcut(key: string, fn: Pausable) {\n    if (magicKeys[key].value)\n      fn.resume()\n    else fn.pause()\n  }\n  shortcut('left', moveLeft)\n  shortcut('right', moveRight)\n  shortcut('up', moveUp)\n  shortcut('down', moveDown)\n})\n\nreturn (_ctx: any,_cache: any) => {\n  return (Number.isFinite(_unref(x0)))\n    ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        id: \"drag-control-container\",\n        \"data-drag-id\": _unref(dragId),\n        style: _normalizeStyle({\n      position: 'absolute',\n      zIndex: 100,\n      left: `${_unref(zoom) * (_unref(x0) - Math.abs(_unref(width)) / 2)}px`,\n      top: `${_unref(zoom) * (_unref(y0) - Math.abs(_unref(height)) / 2)}px`,\n      width: `${_unref(zoom) * Math.abs(_unref(width))}px`,\n      height: `${_unref(zoom) * Math.abs(_unref(height))}px`,\n      transformOrigin: 'center center',\n      transform: `rotate(${_unref(rotate)}deg)`,\n    }),\n        onPointerdown: onPointerdown,\n        onPointermove: onPointermove,\n        onPointerup: onPointerup\n      }, [\n        _createElementVNode(\"div\", {\n          class: _normalizeClass([\"absolute inset-0 z-nav dark:b-gray-400\", _unref(isArrow) ? '' : 'b b-dark'])\n        }, [\n          (!_unref(autoHeight))\n            ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getCornerProps(true, true))), null, 16 /* FULL_PROPS */),\n                _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getCornerProps(false, false))), null, 16 /* FULL_PROPS */),\n                (!_unref(isArrow))\n                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                      _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getCornerProps(true, false))), null, 16 /* FULL_PROPS */),\n                      _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getCornerProps(false, true))), null, 16 /* FULL_PROPS */)\n                    ], 64 /* STABLE_FRAGMENT */))\n                  : _createCommentVNode(\"v-if\", true)\n              ], 64 /* STABLE_FRAGMENT */))\n            : _createCommentVNode(\"v-if\", true),\n          (!_unref(isArrow))\n            ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getBorderProps('l'))), null, 16 /* FULL_PROPS */),\n                _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getBorderProps('r'))), null, 16 /* FULL_PROPS */),\n                (!_unref(autoHeight))\n                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                      _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getBorderProps('t'))), null, 16 /* FULL_PROPS */),\n                      _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getBorderProps('b'))), null, 16 /* FULL_PROPS */)\n                    ], 64 /* STABLE_FRAGMENT */))\n                  : _createCommentVNode(\"v-if\", true),\n                _createElementVNode(\"div\", _normalizeProps(_guardReactiveProps(getRotateProps())), null, 16 /* FULL_PROPS */),\n                _createElementVNode(\"div\", {\n                  class: \"absolute -top-15px w-0 b b-dashed b-dark dark:b-gray-400\",\n                  style: _normalizeStyle({\n            left: 'calc(50% - 1px)',\n            height: _unref(autoHeight) ? '14px' : '10px',\n          })\n                }, null, 4 /* STYLE */)\n              ], 64 /* STABLE_FRAGMENT */))\n            : _createCommentVNode(\"v-if\", true)\n        ], 2 /* CLASS */)\n      ], 44 /* STYLE, PROPS, NEED_HYDRATION */, _hoisted_1))\n    : _createCommentVNode(\"v-if\", true)\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1743409709235,
      "end": 1743409709235,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1743409709235,
      "end": 1743409709235,
      "order": "normal"
    },
    {
      "name": "slidev:layout-wrapper",
      "start": 1743409709235,
      "end": 1743409709235,
      "order": "normal"
    },
    {
      "name": "slidev:context-injection",
      "start": 1743409709235,
      "end": 1743409709235,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1743409709235,
      "end": 1743409709235,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1743409709235,
      "end": 1743409709235,
      "order": "normal"
    },
    {
      "name": "slidev:hmr-patch",
      "start": 1743409709235,
      "end": 1743409709235,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1743409709235,
      "end": 1743409709235,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1743409709235,
      "end": 1743409709235,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1743409709235,
      "end": 1743409709235,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1743409709235,
      "end": 1743409709235,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1743409709235,
      "end": 1743409709235,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1743409709235,
      "end": 1743409709235,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1743409709235,
      "end": 1743409709235,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1743409709235,
      "end": 1743409709235,
      "order": "normal"
    },
    {
      "name": "unplugin-vue-components",
      "result": "/* unplugin-vue-components disabled */import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = [\"data-drag-id\"];\nimport { clamp } from \"@antfu/utils\";\nimport { useIntervalFn } from \"@vueuse/core\";\nimport { computed, inject, ref, watchEffect } from \"vue\";\nimport { useSlideBounds } from \"../composables/useSlideBounds\";\nimport { injectionSlideScale } from \"../constants\";\nimport { slideHeight, slideWidth } from \"../env\";\nimport { magicKeys } from \"../state\";\nconst ctrlSize = 10;\nconst minRemain = 10;\nconst ctrlClasses = `absolute border border-gray bg-gray dark:border-gray-500 dark:bg-gray-800 bg-opacity-30 `;\nconst moveInterval = 20;\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"DragControl\",\n  props: {\n    data: {}\n  },\n  setup(__props) {\n    const { dragId, zoom, autoHeight, x0, y0, width, height, rotate, isArrow } = __props.data;\n    const slideScale = inject(injectionSlideScale, ref(1));\n    const scale = computed(() => slideScale.value * zoom.value);\n    const { left: slideLeft, top: slideTop } = useSlideBounds();\n    const minSize = isArrow ? Number.NEGATIVE_INFINITY : 40;\n    const rotateRad = computed(() => rotate.value * Math.PI / 180);\n    const rotateSin = computed(() => Math.sin(rotateRad.value));\n    const rotateCos = computed(() => Math.cos(rotateRad.value));\n    const boundingWidth = computed(() => width.value * rotateCos.value + height.value * rotateSin.value);\n    const boundingHeight = computed(() => width.value * rotateSin.value + height.value * rotateCos.value);\n    const boundingLeft = computed(() => x0.value - boundingWidth.value / 2);\n    const boundingTop = computed(() => y0.value - boundingHeight.value / 2);\n    const boundingRight = computed(() => x0.value + boundingWidth.value / 2);\n    const boundingBottom = computed(() => y0.value + boundingHeight.value / 2);\n    const arrowRevX = computed(() => isArrow && width.value < 0);\n    const arrowRevY = computed(() => isArrow && height.value < 0);\n    let currentDrag = null;\n    function onPointerdown(ev) {\n      if (ev.buttons !== 1)\n        return;\n      ev.preventDefault();\n      ev.stopPropagation();\n      const el = ev.target;\n      const elBounds = el.getBoundingClientRect();\n      const cross1x = width.value * rotateCos.value - height.value * rotateSin.value;\n      const cross1y = width.value * rotateSin.value + height.value * rotateCos.value;\n      const cross2x = width.value * rotateCos.value + height.value * rotateSin.value;\n      const cross2y = -width.value * rotateSin.value + height.value * rotateCos.value;\n      currentDrag = {\n        x0: x0.value,\n        y0: y0.value,\n        width: width.value,\n        height: height.value,\n        rotate: rotate.value,\n        dx0: ev.clientX - (elBounds.left + elBounds.right) / 2,\n        dy0: ev.clientY - (elBounds.top + elBounds.bottom) / 2,\n        ltx: x0.value - cross1x / 2,\n        lty: y0.value - cross1y / 2,\n        rtx: x0.value + cross2x / 2,\n        rty: y0.value - cross2y / 2,\n        lbx: x0.value - cross2x / 2,\n        lby: y0.value + cross2y / 2,\n        rbx: x0.value + cross1x / 2,\n        rby: y0.value + cross1y / 2\n      };\n      ev.currentTarget.setPointerCapture(ev.pointerId);\n    }\n    function onPointermove(ev) {\n      if (!currentDrag || ev.buttons !== 1)\n        return;\n      ev.preventDefault();\n      ev.stopPropagation();\n      const x = (ev.clientX - slideLeft.value - currentDrag.dx0) / scale.value;\n      const y = (ev.clientY - slideTop.value - currentDrag.dy0) / scale.value;\n      x0.value = clamp(x, -boundingWidth.value / 2 + minRemain, slideWidth.value + boundingWidth.value / 2 - minRemain);\n      y0.value = clamp(y, -boundingHeight.value / 2 + minRemain, slideHeight.value + boundingHeight.value / 2 - minRemain);\n    }\n    function onPointerup(ev) {\n      if (!currentDrag)\n        return;\n      ev.preventDefault();\n      ev.stopPropagation();\n      currentDrag = null;\n    }\n    function getCornerProps(isLeft, isTop) {\n      return {\n        onPointerdown,\n        onPointermove: (ev) => {\n          if (!currentDrag || ev.buttons !== 1)\n            return;\n          ev.preventDefault();\n          ev.stopPropagation();\n          let x = (ev.clientX - slideLeft.value) / scale.value;\n          let y = (ev.clientY - slideTop.value) / scale.value;\n          const { ltx, lty, rtx, rty, lbx, lby, rbx, rby } = currentDrag;\n          const ratio = currentDrag.width / currentDrag.height;\n          const wMin = Math.max(minSize, minSize * ratio);\n          function getSize(w1, h1) {\n            if (ev.shiftKey) {\n              const w = Math.max(w1, h1 * ratio, wMin);\n              const h = w / ratio;\n              return { w, h };\n            } else {\n              return { w: Math.max(w1, minSize), h: Math.max(h1, minSize) };\n            }\n          }\n          if (isLeft) {\n            if (isTop) {\n              const w1 = (rbx - x) * rotateCos.value + (rby - y) * rotateSin.value;\n              const h1 = -(rbx - x) * rotateSin.value + (rby - y) * rotateCos.value;\n              const { w, h } = getSize(w1, h1);\n              x = rbx - w * rotateCos.value + h * rotateSin.value;\n              y = rby - w * rotateSin.value - h * rotateCos.value;\n            } else {\n              const w1 = (rtx - x) * rotateCos.value - (y - rty) * rotateSin.value;\n              const h1 = (rtx - x) * rotateSin.value + (y - rty) * rotateCos.value;\n              const { w, h } = getSize(w1, h1);\n              x = rtx - w * rotateCos.value - h * rotateSin.value;\n              y = rty - w * rotateSin.value + h * rotateCos.value;\n            }\n          } else {\n            if (isTop) {\n              const w1 = (x - lbx) * rotateCos.value - (lby - y) * rotateSin.value;\n              const h1 = (x - lbx) * rotateSin.value + (lby - y) * rotateCos.value;\n              const { w, h } = getSize(w1, h1);\n              x = lbx + w * rotateCos.value + h * rotateSin.value;\n              y = lby + w * rotateSin.value - h * rotateCos.value;\n            } else {\n              const w1 = (x - ltx) * rotateCos.value + (y - lty) * rotateSin.value;\n              const h1 = -(x - ltx) * rotateSin.value + (y - lty) * rotateCos.value;\n              const { w, h } = getSize(w1, h1);\n              x = ltx + w * rotateCos.value - h * rotateSin.value;\n              y = lty + w * rotateSin.value + h * rotateCos.value;\n            }\n          }\n          if (isLeft) {\n            if (isTop) {\n              x0.value = (x + rbx) / 2;\n              y0.value = (y + rby) / 2;\n              width.value = (rbx - x) * rotateCos.value + (rby - y) * rotateSin.value;\n              height.value = -(rbx - x) * rotateSin.value + (rby - y) * rotateCos.value;\n            } else {\n              x0.value = (x + rtx) / 2;\n              y0.value = (y + rty) / 2;\n              width.value = (rtx - x) * rotateCos.value - (y - rty) * rotateSin.value;\n              height.value = (rtx - x) * rotateSin.value + (y - rty) * rotateCos.value;\n            }\n          } else {\n            if (isTop) {\n              x0.value = (x + lbx) / 2;\n              y0.value = (y + lby) / 2;\n              width.value = (x - lbx) * rotateCos.value - (lby - y) * rotateSin.value;\n              height.value = (x - lbx) * rotateSin.value + (lby - y) * rotateCos.value;\n            } else {\n              x0.value = (x + ltx) / 2;\n              y0.value = (y + lty) / 2;\n              width.value = (x - ltx) * rotateCos.value + (y - lty) * rotateSin.value;\n              height.value = -(x - ltx) * rotateSin.value + (y - lty) * rotateCos.value;\n            }\n          }\n        },\n        onPointerup,\n        style: {\n          width: `${ctrlSize}px`,\n          height: `${ctrlSize}px`,\n          margin: `-${ctrlSize / 2}px`,\n          left: isLeft !== arrowRevX.value ? \"0\" : void 0,\n          right: isLeft !== arrowRevX.value ? void 0 : \"0\",\n          top: isTop !== arrowRevY.value ? \"0\" : void 0,\n          bottom: isTop !== arrowRevY.value ? void 0 : \"0\",\n          cursor: isArrow ? \"move\" : +isLeft + +isTop === 1 ? \"nesw-resize\" : \"nwse-resize\",\n          borderRadius: isArrow ? \"50%\" : void 0\n        },\n        class: ctrlClasses\n      };\n    }\n    function getBorderProps(dir) {\n      return {\n        onPointerdown,\n        onPointermove: (ev) => {\n          if (!currentDrag || ev.buttons !== 1)\n            return;\n          ev.preventDefault();\n          ev.stopPropagation();\n          const x = (ev.clientX - slideLeft.value) / scale.value;\n          const y = (ev.clientY - slideTop.value) / scale.value;\n          const { ltx, lty, rtx, rty, lbx, lby, rbx, rby } = currentDrag;\n          if (dir === \"l\") {\n            const rx = (rtx + rbx) / 2;\n            const ry = (rty + rby) / 2;\n            width.value = Math.max((rx - x) * rotateCos.value + (ry - y) * rotateSin.value, minSize);\n            x0.value = rx - width.value * rotateCos.value / 2;\n            y0.value = ry - width.value * rotateSin.value / 2;\n          } else if (dir === \"r\") {\n            const lx = (ltx + lbx) / 2;\n            const ly = (lty + lby) / 2;\n            width.value = Math.max((x - lx) * rotateCos.value + (y - ly) * rotateSin.value, minSize);\n            x0.value = lx + width.value * rotateCos.value / 2;\n            y0.value = ly + width.value * rotateSin.value / 2;\n          } else if (dir === \"t\") {\n            const bx = (lbx + rbx) / 2;\n            const by = (lby + rby) / 2;\n            height.value = Math.max((by - y) * rotateCos.value - (bx - x) * rotateSin.value, minSize);\n            x0.value = bx + height.value * rotateSin.value / 2;\n            y0.value = by - height.value * rotateCos.value / 2;\n          } else if (dir === \"b\") {\n            const tx = (ltx + rtx) / 2;\n            const ty = (lty + rty) / 2;\n            height.value = Math.max((y - ty) * rotateCos.value - (x - tx) * rotateSin.value, minSize);\n            x0.value = tx - height.value * rotateSin.value / 2;\n            y0.value = ty + height.value * rotateCos.value / 2;\n          }\n        },\n        onPointerup,\n        style: {\n          width: `${ctrlSize}px`,\n          height: `${ctrlSize}px`,\n          margin: `-${ctrlSize / 2}px`,\n          left: dir === \"l\" ? \"0\" : dir === \"r\" ? `100%` : `50%`,\n          top: dir === \"t\" ? \"0\" : dir === \"b\" ? `100%` : `50%`,\n          cursor: \"lr\".includes(dir) ? \"ew-resize\" : \"ns-resize\",\n          borderRadius: \"50%\"\n        },\n        class: ctrlClasses\n      };\n    }\n    function getRotateProps() {\n      return {\n        onPointerdown,\n        onPointermove: (ev) => {\n          if (!currentDrag || ev.buttons !== 1)\n            return;\n          ev.preventDefault();\n          ev.stopPropagation();\n          const x = (ev.clientX - slideLeft.value - currentDrag.dx0) / scale.value - ctrlSize / 4;\n          const y = (ev.clientY - slideTop.value - currentDrag.dy0) / scale.value - ctrlSize / 4;\n          let angle = Math.atan2(y - y0.value, x - x0.value) * 180 / Math.PI + 90;\n          const commonAngles = [0, 90, 180, 270, 360];\n          for (const a of commonAngles) {\n            if (Math.abs(angle - a) < 5) {\n              angle = a % 360;\n              break;\n            }\n          }\n          rotate.value = angle;\n        },\n        onPointerup,\n        style: {\n          width: `${ctrlSize}px`,\n          height: `${ctrlSize}px`,\n          margin: `-${ctrlSize / 2}px`,\n          left: \"50%\",\n          top: \"-20px\",\n          cursor: \"grab\",\n          borderRadius: \"50%\"\n        },\n        class: ctrlClasses\n      };\n    }\n    const intervalFnOptions = {\n      immediate: false,\n      immediateCallback: false\n    };\n    const moveLeft = useIntervalFn(() => {\n      if (boundingRight.value <= minRemain)\n        return;\n      x0.value--;\n    }, moveInterval, intervalFnOptions);\n    const moveRight = useIntervalFn(() => {\n      if (boundingLeft.value >= slideWidth.value - minRemain)\n        return;\n      x0.value++;\n    }, moveInterval, intervalFnOptions);\n    const moveUp = useIntervalFn(() => {\n      if (boundingBottom.value <= minRemain)\n        return;\n      y0.value--;\n    }, moveInterval, intervalFnOptions);\n    const moveDown = useIntervalFn(() => {\n      if (boundingTop.value >= slideHeight.value - minRemain)\n        return;\n      y0.value++;\n    }, moveInterval, intervalFnOptions);\n    watchEffect(() => {\n      function shortcut(key, fn) {\n        if (magicKeys[key].value)\n          fn.resume();\n        else fn.pause();\n      }\n      shortcut(\"left\", moveLeft);\n      shortcut(\"right\", moveRight);\n      shortcut(\"up\", moveUp);\n      shortcut(\"down\", moveDown);\n    });\n    return (_ctx, _cache) => {\n      return Number.isFinite(_unref(x0)) ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        id: \"drag-control-container\",\n        \"data-drag-id\": _unref(dragId),\n        style: _normalizeStyle({\n          position: \"absolute\",\n          zIndex: 100,\n          left: `${_unref(zoom) * (_unref(x0) - Math.abs(_unref(width)) / 2)}px`,\n          top: `${_unref(zoom) * (_unref(y0) - Math.abs(_unref(height)) / 2)}px`,\n          width: `${_unref(zoom) * Math.abs(_unref(width))}px`,\n          height: `${_unref(zoom) * Math.abs(_unref(height))}px`,\n          transformOrigin: \"center center\",\n          transform: `rotate(${_unref(rotate)}deg)`\n        }),\n        onPointerdown,\n        onPointermove,\n        onPointerup\n      }, [\n        _createElementVNode(\n          \"div\",\n          {\n            class: _normalizeClass([\"absolute inset-0 z-nav dark:b-gray-400\", _unref(isArrow) ? \"\" : \"b b-dark\"])\n          },\n          [\n            !_unref(autoHeight) ? (_openBlock(), _createElementBlock(\n              _Fragment,\n              { key: 0 },\n              [\n                _createElementVNode(\n                  \"div\",\n                  _normalizeProps(_guardReactiveProps(getCornerProps(true, true))),\n                  null,\n                  16\n                  /* FULL_PROPS */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _normalizeProps(_guardReactiveProps(getCornerProps(false, false))),\n                  null,\n                  16\n                  /* FULL_PROPS */\n                ),\n                !_unref(isArrow) ? (_openBlock(), _createElementBlock(\n                  _Fragment,\n                  { key: 0 },\n                  [\n                    _createElementVNode(\n                      \"div\",\n                      _normalizeProps(_guardReactiveProps(getCornerProps(true, false))),\n                      null,\n                      16\n                      /* FULL_PROPS */\n                    ),\n                    _createElementVNode(\n                      \"div\",\n                      _normalizeProps(_guardReactiveProps(getCornerProps(false, true))),\n                      null,\n                      16\n                      /* FULL_PROPS */\n                    )\n                  ],\n                  64\n                  /* STABLE_FRAGMENT */\n                )) : _createCommentVNode(\"v-if\", true)\n              ],\n              64\n              /* STABLE_FRAGMENT */\n            )) : _createCommentVNode(\"v-if\", true),\n            !_unref(isArrow) ? (_openBlock(), _createElementBlock(\n              _Fragment,\n              { key: 1 },\n              [\n                _createElementVNode(\n                  \"div\",\n                  _normalizeProps(_guardReactiveProps(getBorderProps(\"l\"))),\n                  null,\n                  16\n                  /* FULL_PROPS */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _normalizeProps(_guardReactiveProps(getBorderProps(\"r\"))),\n                  null,\n                  16\n                  /* FULL_PROPS */\n                ),\n                !_unref(autoHeight) ? (_openBlock(), _createElementBlock(\n                  _Fragment,\n                  { key: 0 },\n                  [\n                    _createElementVNode(\n                      \"div\",\n                      _normalizeProps(_guardReactiveProps(getBorderProps(\"t\"))),\n                      null,\n                      16\n                      /* FULL_PROPS */\n                    ),\n                    _createElementVNode(\n                      \"div\",\n                      _normalizeProps(_guardReactiveProps(getBorderProps(\"b\"))),\n                      null,\n                      16\n                      /* FULL_PROPS */\n                    )\n                  ],\n                  64\n                  /* STABLE_FRAGMENT */\n                )) : _createCommentVNode(\"v-if\", true),\n                _createElementVNode(\n                  \"div\",\n                  _normalizeProps(_guardReactiveProps(getRotateProps())),\n                  null,\n                  16\n                  /* FULL_PROPS */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  {\n                    class: \"absolute -top-15px w-0 b b-dashed b-dark dark:b-gray-400\",\n                    style: _normalizeStyle({\n                      left: \"calc(50% - 1px)\",\n                      height: _unref(autoHeight) ? \"14px\" : \"10px\"\n                    })\n                  },\n                  null,\n                  4\n                  /* STYLE */\n                )\n              ],\n              64\n              /* STABLE_FRAGMENT */\n            )) : _createCommentVNode(\"v-if\", true)\n          ],\n          2\n          /* CLASS */\n        )\n      ], 44, _hoisted_1)) : _createCommentVNode(\"v-if\", true);\n    };\n  }\n});\n",
      "start": 1743409709235,
      "end": 1743409709236,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/stevenhill/gce_git_tutorial/node_modules/@slidev/client/internals/DragControl.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, normalizeProps as _normalizeProps, guardReactiveProps as _guardReactiveProps, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = [\"data-drag-id\"];\nimport { clamp } from \"@antfu/utils\";\nimport { useIntervalFn } from \"@vueuse/core\";\nimport { computed, inject, ref, watchEffect } from \"vue\";\nimport { useSlideBounds } from \"../composables/useSlideBounds\";\nimport { injectionSlideScale } from \"../constants\";\nimport { slideHeight, slideWidth } from \"../env\";\nimport { magicKeys } from \"../state\";\nconst ctrlSize = 10;\nconst minRemain = 10;\nconst ctrlClasses = `absolute border border-gray bg-gray dark:border-gray-500 dark:bg-gray-800 bg-opacity-30 `;\nconst moveInterval = 20;\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"DragControl\",\n  props: {\n    data: {}\n  },\n  setup(__props) {\n    const { dragId, zoom, autoHeight, x0, y0, width, height, rotate, isArrow } = __props.data;\n    const slideScale = inject(injectionSlideScale, ref(1));\n    const scale = computed(() => slideScale.value * zoom.value);\n    const { left: slideLeft, top: slideTop } = useSlideBounds();\n    const minSize = isArrow ? Number.NEGATIVE_INFINITY : 40;\n    const rotateRad = computed(() => rotate.value * Math.PI / 180);\n    const rotateSin = computed(() => Math.sin(rotateRad.value));\n    const rotateCos = computed(() => Math.cos(rotateRad.value));\n    const boundingWidth = computed(() => width.value * rotateCos.value + height.value * rotateSin.value);\n    const boundingHeight = computed(() => width.value * rotateSin.value + height.value * rotateCos.value);\n    const boundingLeft = computed(() => x0.value - boundingWidth.value / 2);\n    const boundingTop = computed(() => y0.value - boundingHeight.value / 2);\n    const boundingRight = computed(() => x0.value + boundingWidth.value / 2);\n    const boundingBottom = computed(() => y0.value + boundingHeight.value / 2);\n    const arrowRevX = computed(() => isArrow && width.value < 0);\n    const arrowRevY = computed(() => isArrow && height.value < 0);\n    let currentDrag = null;\n    function onPointerdown(ev) {\n      if (ev.buttons !== 1)\n        return;\n      ev.preventDefault();\n      ev.stopPropagation();\n      const el = ev.target;\n      const elBounds = el.getBoundingClientRect();\n      const cross1x = width.value * rotateCos.value - height.value * rotateSin.value;\n      const cross1y = width.value * rotateSin.value + height.value * rotateCos.value;\n      const cross2x = width.value * rotateCos.value + height.value * rotateSin.value;\n      const cross2y = -width.value * rotateSin.value + height.value * rotateCos.value;\n      currentDrag = {\n        x0: x0.value,\n        y0: y0.value,\n        width: width.value,\n        height: height.value,\n        rotate: rotate.value,\n        dx0: ev.clientX - (elBounds.left + elBounds.right) / 2,\n        dy0: ev.clientY - (elBounds.top + elBounds.bottom) / 2,\n        ltx: x0.value - cross1x / 2,\n        lty: y0.value - cross1y / 2,\n        rtx: x0.value + cross2x / 2,\n        rty: y0.value - cross2y / 2,\n        lbx: x0.value - cross2x / 2,\n        lby: y0.value + cross2y / 2,\n        rbx: x0.value + cross1x / 2,\n        rby: y0.value + cross1y / 2\n      };\n      ev.currentTarget.setPointerCapture(ev.pointerId);\n    }\n    function onPointermove(ev) {\n      if (!currentDrag || ev.buttons !== 1)\n        return;\n      ev.preventDefault();\n      ev.stopPropagation();\n      const x = (ev.clientX - slideLeft.value - currentDrag.dx0) / scale.value;\n      const y = (ev.clientY - slideTop.value - currentDrag.dy0) / scale.value;\n      x0.value = clamp(x, -boundingWidth.value / 2 + minRemain, slideWidth.value + boundingWidth.value / 2 - minRemain);\n      y0.value = clamp(y, -boundingHeight.value / 2 + minRemain, slideHeight.value + boundingHeight.value / 2 - minRemain);\n    }\n    function onPointerup(ev) {\n      if (!currentDrag)\n        return;\n      ev.preventDefault();\n      ev.stopPropagation();\n      currentDrag = null;\n    }\n    function getCornerProps(isLeft, isTop) {\n      return {\n        onPointerdown,\n        onPointermove: (ev) => {\n          if (!currentDrag || ev.buttons !== 1)\n            return;\n          ev.preventDefault();\n          ev.stopPropagation();\n          let x = (ev.clientX - slideLeft.value) / scale.value;\n          let y = (ev.clientY - slideTop.value) / scale.value;\n          const { ltx, lty, rtx, rty, lbx, lby, rbx, rby } = currentDrag;\n          const ratio = currentDrag.width / currentDrag.height;\n          const wMin = Math.max(minSize, minSize * ratio);\n          function getSize(w1, h1) {\n            if (ev.shiftKey) {\n              const w = Math.max(w1, h1 * ratio, wMin);\n              const h = w / ratio;\n              return { w, h };\n            } else {\n              return { w: Math.max(w1, minSize), h: Math.max(h1, minSize) };\n            }\n          }\n          if (isLeft) {\n            if (isTop) {\n              const w1 = (rbx - x) * rotateCos.value + (rby - y) * rotateSin.value;\n              const h1 = -(rbx - x) * rotateSin.value + (rby - y) * rotateCos.value;\n              const { w, h } = getSize(w1, h1);\n              x = rbx - w * rotateCos.value + h * rotateSin.value;\n              y = rby - w * rotateSin.value - h * rotateCos.value;\n            } else {\n              const w1 = (rtx - x) * rotateCos.value - (y - rty) * rotateSin.value;\n              const h1 = (rtx - x) * rotateSin.value + (y - rty) * rotateCos.value;\n              const { w, h } = getSize(w1, h1);\n              x = rtx - w * rotateCos.value - h * rotateSin.value;\n              y = rty - w * rotateSin.value + h * rotateCos.value;\n            }\n          } else {\n            if (isTop) {\n              const w1 = (x - lbx) * rotateCos.value - (lby - y) * rotateSin.value;\n              const h1 = (x - lbx) * rotateSin.value + (lby - y) * rotateCos.value;\n              const { w, h } = getSize(w1, h1);\n              x = lbx + w * rotateCos.value + h * rotateSin.value;\n              y = lby + w * rotateSin.value - h * rotateCos.value;\n            } else {\n              const w1 = (x - ltx) * rotateCos.value + (y - lty) * rotateSin.value;\n              const h1 = -(x - ltx) * rotateSin.value + (y - lty) * rotateCos.value;\n              const { w, h } = getSize(w1, h1);\n              x = ltx + w * rotateCos.value - h * rotateSin.value;\n              y = lty + w * rotateSin.value + h * rotateCos.value;\n            }\n          }\n          if (isLeft) {\n            if (isTop) {\n              x0.value = (x + rbx) / 2;\n              y0.value = (y + rby) / 2;\n              width.value = (rbx - x) * rotateCos.value + (rby - y) * rotateSin.value;\n              height.value = -(rbx - x) * rotateSin.value + (rby - y) * rotateCos.value;\n            } else {\n              x0.value = (x + rtx) / 2;\n              y0.value = (y + rty) / 2;\n              width.value = (rtx - x) * rotateCos.value - (y - rty) * rotateSin.value;\n              height.value = (rtx - x) * rotateSin.value + (y - rty) * rotateCos.value;\n            }\n          } else {\n            if (isTop) {\n              x0.value = (x + lbx) / 2;\n              y0.value = (y + lby) / 2;\n              width.value = (x - lbx) * rotateCos.value - (lby - y) * rotateSin.value;\n              height.value = (x - lbx) * rotateSin.value + (lby - y) * rotateCos.value;\n            } else {\n              x0.value = (x + ltx) / 2;\n              y0.value = (y + lty) / 2;\n              width.value = (x - ltx) * rotateCos.value + (y - lty) * rotateSin.value;\n              height.value = -(x - ltx) * rotateSin.value + (y - lty) * rotateCos.value;\n            }\n          }\n        },\n        onPointerup,\n        style: {\n          width: `${ctrlSize}px`,\n          height: `${ctrlSize}px`,\n          margin: `-${ctrlSize / 2}px`,\n          left: isLeft !== arrowRevX.value ? \"0\" : void 0,\n          right: isLeft !== arrowRevX.value ? void 0 : \"0\",\n          top: isTop !== arrowRevY.value ? \"0\" : void 0,\n          bottom: isTop !== arrowRevY.value ? void 0 : \"0\",\n          cursor: isArrow ? \"move\" : +isLeft + +isTop === 1 ? \"nesw-resize\" : \"nwse-resize\",\n          borderRadius: isArrow ? \"50%\" : void 0\n        },\n        class: ctrlClasses\n      };\n    }\n    function getBorderProps(dir) {\n      return {\n        onPointerdown,\n        onPointermove: (ev) => {\n          if (!currentDrag || ev.buttons !== 1)\n            return;\n          ev.preventDefault();\n          ev.stopPropagation();\n          const x = (ev.clientX - slideLeft.value) / scale.value;\n          const y = (ev.clientY - slideTop.value) / scale.value;\n          const { ltx, lty, rtx, rty, lbx, lby, rbx, rby } = currentDrag;\n          if (dir === \"l\") {\n            const rx = (rtx + rbx) / 2;\n            const ry = (rty + rby) / 2;\n            width.value = Math.max((rx - x) * rotateCos.value + (ry - y) * rotateSin.value, minSize);\n            x0.value = rx - width.value * rotateCos.value / 2;\n            y0.value = ry - width.value * rotateSin.value / 2;\n          } else if (dir === \"r\") {\n            const lx = (ltx + lbx) / 2;\n            const ly = (lty + lby) / 2;\n            width.value = Math.max((x - lx) * rotateCos.value + (y - ly) * rotateSin.value, minSize);\n            x0.value = lx + width.value * rotateCos.value / 2;\n            y0.value = ly + width.value * rotateSin.value / 2;\n          } else if (dir === \"t\") {\n            const bx = (lbx + rbx) / 2;\n            const by = (lby + rby) / 2;\n            height.value = Math.max((by - y) * rotateCos.value - (bx - x) * rotateSin.value, minSize);\n            x0.value = bx + height.value * rotateSin.value / 2;\n            y0.value = by - height.value * rotateCos.value / 2;\n          } else if (dir === \"b\") {\n            const tx = (ltx + rtx) / 2;\n            const ty = (lty + rty) / 2;\n            height.value = Math.max((y - ty) * rotateCos.value - (x - tx) * rotateSin.value, minSize);\n            x0.value = tx - height.value * rotateSin.value / 2;\n            y0.value = ty + height.value * rotateCos.value / 2;\n          }\n        },\n        onPointerup,\n        style: {\n          width: `${ctrlSize}px`,\n          height: `${ctrlSize}px`,\n          margin: `-${ctrlSize / 2}px`,\n          left: dir === \"l\" ? \"0\" : dir === \"r\" ? `100%` : `50%`,\n          top: dir === \"t\" ? \"0\" : dir === \"b\" ? `100%` : `50%`,\n          cursor: \"lr\".includes(dir) ? \"ew-resize\" : \"ns-resize\",\n          borderRadius: \"50%\"\n        },\n        class: ctrlClasses\n      };\n    }\n    function getRotateProps() {\n      return {\n        onPointerdown,\n        onPointermove: (ev) => {\n          if (!currentDrag || ev.buttons !== 1)\n            return;\n          ev.preventDefault();\n          ev.stopPropagation();\n          const x = (ev.clientX - slideLeft.value - currentDrag.dx0) / scale.value - ctrlSize / 4;\n          const y = (ev.clientY - slideTop.value - currentDrag.dy0) / scale.value - ctrlSize / 4;\n          let angle = Math.atan2(y - y0.value, x - x0.value) * 180 / Math.PI + 90;\n          const commonAngles = [0, 90, 180, 270, 360];\n          for (const a of commonAngles) {\n            if (Math.abs(angle - a) < 5) {\n              angle = a % 360;\n              break;\n            }\n          }\n          rotate.value = angle;\n        },\n        onPointerup,\n        style: {\n          width: `${ctrlSize}px`,\n          height: `${ctrlSize}px`,\n          margin: `-${ctrlSize / 2}px`,\n          left: \"50%\",\n          top: \"-20px\",\n          cursor: \"grab\",\n          borderRadius: \"50%\"\n        },\n        class: ctrlClasses\n      };\n    }\n    const intervalFnOptions = {\n      immediate: false,\n      immediateCallback: false\n    };\n    const moveLeft = useIntervalFn(() => {\n      if (boundingRight.value <= minRemain)\n        return;\n      x0.value--;\n    }, moveInterval, intervalFnOptions);\n    const moveRight = useIntervalFn(() => {\n      if (boundingLeft.value >= slideWidth.value - minRemain)\n        return;\n      x0.value++;\n    }, moveInterval, intervalFnOptions);\n    const moveUp = useIntervalFn(() => {\n      if (boundingBottom.value <= minRemain)\n        return;\n      y0.value--;\n    }, moveInterval, intervalFnOptions);\n    const moveDown = useIntervalFn(() => {\n      if (boundingTop.value >= slideHeight.value - minRemain)\n        return;\n      y0.value++;\n    }, moveInterval, intervalFnOptions);\n    watchEffect(() => {\n      function shortcut(key, fn) {\n        if (magicKeys[key].value)\n          fn.resume();\n        else fn.pause();\n      }\n      shortcut(\"left\", moveLeft);\n      shortcut(\"right\", moveRight);\n      shortcut(\"up\", moveUp);\n      shortcut(\"down\", moveDown);\n    });\n    return (_ctx, _cache) => {\n      return Number.isFinite(_unref(x0)) ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        id: \"drag-control-container\",\n        \"data-drag-id\": _unref(dragId),\n        style: _normalizeStyle({\n          position: \"absolute\",\n          zIndex: 100,\n          left: `${_unref(zoom) * (_unref(x0) - Math.abs(_unref(width)) / 2)}px`,\n          top: `${_unref(zoom) * (_unref(y0) - Math.abs(_unref(height)) / 2)}px`,\n          width: `${_unref(zoom) * Math.abs(_unref(width))}px`,\n          height: `${_unref(zoom) * Math.abs(_unref(height))}px`,\n          transformOrigin: \"center center\",\n          transform: `rotate(${_unref(rotate)}deg)`\n        }),\n        onPointerdown,\n        onPointermove,\n        onPointerup\n      }, [\n        _createElementVNode(\n          \"div\",\n          {\n            class: _normalizeClass([\"absolute inset-0 z-nav dark:b-gray-400\", _unref(isArrow) ? \"\" : \"b b-dark\"])\n          },\n          [\n            !_unref(autoHeight) ? (_openBlock(), _createElementBlock(\n              _Fragment,\n              { key: 0 },\n              [\n                _createElementVNode(\n                  \"div\",\n                  _normalizeProps(_guardReactiveProps(getCornerProps(true, true))),\n                  null,\n                  16\n                  /* FULL_PROPS */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _normalizeProps(_guardReactiveProps(getCornerProps(false, false))),\n                  null,\n                  16\n                  /* FULL_PROPS */\n                ),\n                !_unref(isArrow) ? (_openBlock(), _createElementBlock(\n                  _Fragment,\n                  { key: 0 },\n                  [\n                    _createElementVNode(\n                      \"div\",\n                      _normalizeProps(_guardReactiveProps(getCornerProps(true, false))),\n                      null,\n                      16\n                      /* FULL_PROPS */\n                    ),\n                    _createElementVNode(\n                      \"div\",\n                      _normalizeProps(_guardReactiveProps(getCornerProps(false, true))),\n                      null,\n                      16\n                      /* FULL_PROPS */\n                    )\n                  ],\n                  64\n                  /* STABLE_FRAGMENT */\n                )) : _createCommentVNode(\"v-if\", true)\n              ],\n              64\n              /* STABLE_FRAGMENT */\n            )) : _createCommentVNode(\"v-if\", true),\n            !_unref(isArrow) ? (_openBlock(), _createElementBlock(\n              _Fragment,\n              { key: 1 },\n              [\n                _createElementVNode(\n                  \"div\",\n                  _normalizeProps(_guardReactiveProps(getBorderProps(\"l\"))),\n                  null,\n                  16\n                  /* FULL_PROPS */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  _normalizeProps(_guardReactiveProps(getBorderProps(\"r\"))),\n                  null,\n                  16\n                  /* FULL_PROPS */\n                ),\n                !_unref(autoHeight) ? (_openBlock(), _createElementBlock(\n                  _Fragment,\n                  { key: 0 },\n                  [\n                    _createElementVNode(\n                      \"div\",\n                      _normalizeProps(_guardReactiveProps(getBorderProps(\"t\"))),\n                      null,\n                      16\n                      /* FULL_PROPS */\n                    ),\n                    _createElementVNode(\n                      \"div\",\n                      _normalizeProps(_guardReactiveProps(getBorderProps(\"b\"))),\n                      null,\n                      16\n                      /* FULL_PROPS */\n                    )\n                  ],\n                  64\n                  /* STABLE_FRAGMENT */\n                )) : _createCommentVNode(\"v-if\", true),\n                _createElementVNode(\n                  \"div\",\n                  _normalizeProps(_guardReactiveProps(getRotateProps())),\n                  null,\n                  16\n                  /* FULL_PROPS */\n                ),\n                _createElementVNode(\n                  \"div\",\n                  {\n                    class: \"absolute -top-15px w-0 b b-dashed b-dark dark:b-gray-400\",\n                    style: _normalizeStyle({\n                      left: \"calc(50% - 1px)\",\n                      height: _unref(autoHeight) ? \"14px\" : \"10px\"\n                    })\n                  },\n                  null,\n                  4\n                  /* STYLE */\n                )\n              ],\n              64\n              /* STABLE_FRAGMENT */\n            )) : _createCommentVNode(\"v-if\", true)\n          ],\n          2\n          /* CLASS */\n        )\n      ], 44, _hoisted_1)) : _createCommentVNode(\"v-if\", true);\n    };\n  }\n});\n"
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "unocss:transformers:post",
      "start": 1743409709236,
      "end": 1743409709236,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1743409709236,
      "end": 1743409709236,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1743409709236,
      "end": 1743409709236,
      "order": "normal"
    }
  ]
}
