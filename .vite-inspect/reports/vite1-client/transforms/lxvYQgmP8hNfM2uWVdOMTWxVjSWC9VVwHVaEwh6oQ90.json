{
  "resolvedId": "/Users/stevenhill/gce_git_tutorial/node_modules/yaml/browser/dist/compose/compose-doc.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atKey: false,\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        parentIndent: 0,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    // @ts-expect-error If Contents is set, let's trust the user\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n",
      "start": 1743409708642,
      "end": 1743409708651,
      "sourcemaps": null
    },
    {
      "name": "unplugin-vue-markdown",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "pre"
    },
    {
      "name": "slidev:flags",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "pre"
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "slidev:layout-wrapper",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "slidev:context-injection",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "slidev:hmr-patch",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "post"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1743409708651,
      "end": 1743409708651,
      "order": "normal"
    }
  ]
}
