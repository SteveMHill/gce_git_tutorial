{
  "resolvedId": "/Users/stevenhill/gce_git_tutorial/node_modules/popmotion/dist/es/utils/interpolate.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { progress } from './progress.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { invariant } from 'hey-listen';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === 'number') {\n        return mixNumber;\n    }\n    else if (typeof v === 'string') {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === 'object') {\n        return mixObject;\n    }\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\nfunction fastInterpolate([from, to], [mixer]) {\n    return (v) => mixer(progress(from, to, v));\n}\nfunction slowInterpolate(input, mixers) {\n    const inputLength = input.length;\n    const lastInputIndex = inputLength - 1;\n    return (v) => {\n        let mixerIndex = 0;\n        let foundMixerIndex = false;\n        if (v <= input[0]) {\n            foundMixerIndex = true;\n        }\n        else if (v >= input[lastInputIndex]) {\n            mixerIndex = lastInputIndex - 1;\n            foundMixerIndex = true;\n        }\n        if (!foundMixerIndex) {\n            let i = 1;\n            for (; i < inputLength; i++) {\n                if (input[i] > v || i === lastInputIndex) {\n                    break;\n                }\n            }\n            mixerIndex = i - 1;\n        }\n        const progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n        return mixers[mixerIndex](progressInRange);\n    };\n}\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n    if (input[0] > input[inputLength - 1]) {\n        input = [].concat(input);\n        output = [].concat(output);\n        input.reverse();\n        output.reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const interpolator = inputLength === 2\n        ? fastInterpolate(input, mixers)\n        : slowInterpolate(input, mixers);\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n",
      "start": 1743409708602,
      "end": 1743409708610,
      "sourcemaps": null
    },
    {
      "name": "unplugin-vue-markdown",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "pre"
    },
    {
      "name": "slidev:flags",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "pre"
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "slidev:layout-wrapper",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "slidev:context-injection",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "slidev:hmr-patch",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "post"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1743409708610,
      "end": 1743409708610,
      "order": "normal"
    }
  ]
}
