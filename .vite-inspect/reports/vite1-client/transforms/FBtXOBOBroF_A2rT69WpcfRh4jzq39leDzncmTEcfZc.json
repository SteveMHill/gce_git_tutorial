{
  "resolvedId": "/Users/stevenhill/gce_git_tutorial/node_modules/yaml/browser/dist/parse/cst.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n",
      "start": 1743409708622,
      "end": 1743409708636,
      "sourcemaps": null
    },
    {
      "name": "unplugin-vue-markdown",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "pre"
    },
    {
      "name": "slidev:flags",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "pre"
    },
    {
      "name": "unocss:transformers:pre",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "pre"
    },
    {
      "name": "unocss:global:build:scan",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "slidev:layout-wrapper",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "slidev:context-injection",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "slidev:hmr-patch",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "unocss:transformers:undefined",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "post"
    },
    {
      "name": "unocss:transformers:post",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1743409708636,
      "end": 1743409708636,
      "order": "normal"
    }
  ]
}
